CS15050 | Study Abroad | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15050&SEMESTER=S15 |     Description:    Students who are interested in studying abroad should first contact the Office of International Education. More information on Study Abroad is available on OIE's Study Abroad page and at the CS Undergraduate Office.  
CS15075 | Computer Science Co-Op | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15075&SEMESTER=S15 |     Description:    Students who are interested in a Co-Op experience with an external employer typically do so in their Junior year. A Co-Op is distinguished from a summer internship in that it encompasses a summer and a contiguous semester, either Spring-Summer or Summer-Fall. A list of companies who are interested in hiring Co-Op students is available from the SCS Career Consultant at the Career Center. More information on the Computer Science Co-Op program is available at the CS Undergraduate Office.  
CS15090 | Computer Science Practicum | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15090&SEMESTER=S15 |     Description:    This course is for international students who are interested in working for Curricular Practical Training (CPT). Such students interested in CPT must first be authorized by the Office of International Education before being able to enroll in the Practicum course. More information on CPT is available on OIE's Foreign Student Employment page and at the CS Undergraduate Office.  
CS15110 | Principles of Computing | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15110&SEMESTER=S15 |     Description:    A course in fundamental computing principles for students with minimal or no  computing background. Programming constructs: sequencing, selection,  iteration, and recursion. Data organization: arrays and lists. Use of  abstraction in computing: data representation, computer organization,  computer networks, functional decomposition, and application programming  interfaces. Use of computational principles in problem-solving: divide and conquer, randomness, and concurrency. Classification of computational problems  based on complexity, non-computable functions, and using heuristics to  find reasonable solutions to complex problems. Social, ethical and legal  issues associated with the development of new computational artifacts will  also be discussed.  
CS15112 | Fundamentals of Programming and Computer Science | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15112&SEMESTER=S15 |     Description:    A technical introduction to the fundamentals of programming with an emphasis  on producing clear, robust, and reasonably efficient code using top-down  design, informal analysis, and effective testing and debugging. Starting  from first principles, we will cover a large subset of the Python  programming language, including its standard libraries and programming  paradigms.  We will also target numerous deployment scenarios, including  standalone programs, shell scripts, and web-based applications.  This course assumes no prior programming experience. Even so, it is a  fast-paced and rigorous preparation for 15-122.  Students seeking a more  gentle introduction to computer science should consider first taking 15-110.    NOTE: students must achieve a C or better in order to use   this course to satisfy the pre-requisite for any subsequent Computer   Science course.  
CS15121 | Introduction to Data Structures | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15121&SEMESTER=S15 |     Description:    A continuation of the process of program design and analysis for  students with some prior programming experience (functions, loops, and  arrays, not necessarily in Java). The course reinforces object-oriented  programming techniques in Java and covers data aggregates, data  structures (e.g., linked lists, stacks, queues, trees, and graphs), and  an introduction to the analysis of algorithms that operate on those data  structures.  Pre-req: 15-112 or placement  
CS15122 | Principles of Imperative Computation | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15122&SEMESTER=S15 |     Description:    For students with a basic understanding of programming (variables, expressions, loops, arrays, functions). Teaches imperative programming and methods for ensuring the correctness of programs.  Students will learn the process and concepts needed to go from high-level descriptions of algorithms to correct imperative implementations, with specific application to basic data structures and algorithms.  Much of the course will be conducted in a subset of C amenable to verification, with a transition to full C near the end. This course prepares students for 15-213 and 15-210.  NOTE: students must achieve a C or better in order to use  this course to satisfy the pre-requisite for any subsequent Computer  Science course.  
CS15150 | Principles of Functional Programming | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15150&SEMESTER=S15 |     Description:    An introduction to programming based on a "functional" model of computation.  The functional model is a natural generalization of algebra in which programs are formulas that describe the output of a computation in terms of its inputs---that is, as a function.  But instead of being confined to real- or complex-valued functions, the functional model extends the algebraic view to a very rich class of data types, including not only aggregates built up from other types, but also functions themselves as values.  This course is an introduction to programming that is focused on the central concepts of function and type.  One major theme is the interplay between inductive types, which are built up incrementally; recursive functions, which compute over inductive types by decomposition; and proof by structural induction, which is used to prove the correctness and time complexity of a recursive function.  Another major theme is the role of types in structuring large programs into separate modules, and the integration of imperative programming through the introduction of data types whose values may be altered during computation.    NOTE: students must achieve a C or better in order to use   this course to satisfy the pre-requisite for any subsequent Computer   Science course.  
CS15210 | Parallel and Sequential Data Structures and Algorithms | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15210&SEMESTER=S15 |     Description:    Teaches students about how to design, analyze, and program algorithms and data structures.  The course emphasizes parallel algorithms and analysis, and how sequential algorithms can be considered a special case.  The course goes into more theoretical content on algorithm analysis than 15-122 and 15-150 while still including a significant programming component and covering a variety of practical applications such as problems in data analysis, graphics, text processing, and the computational sciences.  NOTE: students must achieve a C or better in order to use this course to satisfy the pre-requisite for any subsequent Computer  Science course.  
CS15213 | Introduction to Computer Systems | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15213&SEMESTER=S15 |     Description:    15-213/18-213This course provides a programmer's view of how computer systems execute programs, store information, and communicate. It enables students to become more effective programmers, especially in dealing with issues of performance, portability and robustness. It also serves as a foundation for courses on compilers, networks, operating systems, and computer architecture, where a deeper understanding of systems-level issues is required. Topics covered include: machine-level code and its generation by optimizing compilers, performance evaluation and optimization, computer arithmetic, memory organization and management, networking technology and protocols, and supporting concurrent computation. NOTE FOR GRADUATE STUDENTS: This course is not open to graduate students beginning Spring 2015. Graduate students must register for 15-513 instead.  
CS15214 | Principles of Software Construction: Objects, Design, and Concurrency | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15214&SEMESTER=S15 |     Description:    Software engineers today are less likely to design data structures and algorithms from scratch and more likely to build systems from library and framework components. In this course, students engage with concepts related to the construction of software systems at scale, building on their understanding of the basic building blocks of data structures, algorithms, program structures, and computer structures. The course covers technical topics in four areas: (1) concepts of design for complex systems, (2) object oriented programming, (3) static and dynamic analysis for programs, and (4) concurrent and distributed software. Student assignments involve engagement with complex software such as distributed massively multi-player game systems and frameworks for graphical user interaction.  
CS15221 | Technical Communication for Computer Scientists | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15221&SEMESTER=S15 |     Description:    The course is designed for sophomore computer science majors to improve their  abilities in practical, professional communications (both written and oral).  It aims to help students compose clear, concise technical writings and oral  presentations for multi-level audiences.  Assignments include technical  definitions, descriptions, instructions, process explanations, abstracts,  memos, and research reports.  Assignments may incorporate recent computer  science research at Carnegie Mellon, projects in related technical courses,  and professional case studies.  Sophomores will likely find the course more useful if they have either had an internship or faculty-supervised research, including SURG projects prior to enrollment.  
CS15251 | Great Theoretical Ideas in Computer Science | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15251&SEMESTER=S15 |     Description:    This course is about how to use theoretical ideas to formulate and solve problems in computer science. It integrates mathematical material with general problem solving techniques and computer science applications. Examples are drawn from algorithms, complexity theory, game theory, probability theory, graph theory, automata theory, algebra, cryptography, and combinatorics. Assignments involve both mathematical proofs and programming.  NOTE: students must achieve a C or better in order to use this course to satisfy the pre-requisite for any subsequent Computer Science course.  
CS15292 | Special Topic: History of Computing | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15292&SEMESTER=S15 |     Description:    This course traces the history of computational devices, pioneers and principles from the early ages through the present. Topics include early computational devices, mechanical computation in the 19th century, events that led to electronic computing advances in the 20th century, the advent of personal computing and the Internet, and the social, legal and ethical impact of modern computational artifacts. This course also includes a history of programming languages, operating systems, processors and computing platforms. Students should have an introductory exposure to programming prior to taking this course.  
CS15294 | Special Topic: Rapid Prototyping Technologies | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15294&SEMESTER=S15 |     Description:    This mini-course introduces students to rapid prototyping technologies with a focus on laser cutting and 3D printing.  The course has three components: 1) A survey of rapid prototyping and additive manufacturing technologies, the maker and open source movements, and societal impacts of these technologies; 2) An introduction to the computer science behind these technologies: CAD tools, file formats, slicing algorithms; 3) Hands-on experience with SolidWorks, laser cutting, and 3D printing, culminating in student projects (e.g. artistic creations, functional objects, replicas of famous calculating machines, etc.). Please note that there will be a usage/materials fee for this course.  
CS15295 | Competition Programming and Problem Solving | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15295&SEMESTER=S15 |     Description:    Each year, Carnegie Mellon fields two teams for participation in the ACM-ICPC Regional Programming Contest. During many recent years, one of those teams has earned the right to represent Carnegie Mellon at the ACM-ICPC World Finals.  This course is a vehicle for those who consistently and rigorously train in preparation for the contests to earn course credit for their effort and achievement.  Preparation involves the study of algorithms, the practice of programming and debugging, the development of test sets, and the growth of team, communication, and problem solving skills.  Neither the course grade nor the number of units earned are dependent on ranking in any contest.  Students are not required to earn course credit to participate in practices or to compete in ACM-ICPC events.  
CS15296 | Special Topic: Images of Computing | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15296&SEMESTER=S15 |     Description:    In this research and action based course we will explore computing from a cultural perspective. We will reflect on some issues often taken for granted e.g. are our attitudes to computing generalizable or culturally specific? How are computing and its workforce perceived and represented in US culture and in cultures from around the world? In particular we will be examining how images of the field might affect public attitudes, access to resources and understanding of computer science. Representations of the field take on particular significance in light of recent US government projections: between now and 2018, among all occupations in all fields of science and engineering, computer science occupations will account for nearly 60% of all job growth [Computing Community Consortium, 2010].   This course is aimed primarily at students who are interested in exploring some of the broad issues of computer science and its cultural context. Students will gain experience in teamwork, teaching and presenting. We will use academic papers, web sites, group discussion/debate and popular media. Findings from our investigations will inspire the action component in which student teams develop and implement a public/outreach presentation aimed at re-presenting the exciting field of computer science with broad appeal in mind.  
CS15302 | Special Topic: Innovating for Underserved Communities: Field Research Basics | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15302&SEMESTER=S15 |     Description:    The ultimate goal of this course is to teach students practical skills necessary to conduct effective field research on the topic of innovating for underserved communities. The course begins with an introduction to how computing technology can have a positive impact on the lives of people in developing communities and people with disabilities. Next, students will learn about the components of field research including needs assessment, literature review, iterative solution development, evaluation, and dissemination. Students will also explore the challenges of field research in this area and learn effective strategies for overcoming these challenges. Overall, students will engage in assignments and in-class exercises that help them gain experience and prepare for future field research endeavors. As part of the final assignment, students will participate in a solution design process for a specific challenge faced by one of the underserved community partners of the TechBridgeWorld research group at Carnegie Mellon University. This year, the course will focus on innovating technology tools for visually impaired people related to smart cities of the future. Promising outcomes of this course will be further developed by the TechBridgeWorld research group and tested with visually impaired users with the permission of students involved with producing these outcomes.  
CS15303 | Special Topic: Seminar on Innovating for Underserved Communities | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15303&SEMESTER=S15 |     Description:    The ultimate goal of this course is to familiarize students with ongoing work in the area of technology innovations for underserved communites. This seminar course will review several key publications and presentations on this topic and teach students the necessary skills to analyze and critique this work in useful ways.   Class sessions will be dedicated to discussing reading/viewing assignments and each class discussion will be led by students.  Assignments will involve analyzing, writing, and presenting critiques of specific projects.  
CS15312 | Foundations of Programming Languages | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15312&SEMESTER=S15 |     Description:    This course discusses in depth many of the concepts underlying the design, definition, implementation, and use of modern programming languages. Formal approaches to defining the syntax and semantics are used to describe the fundamental concepts underlying programming languages. A variety of programming paradigms are covered such as imperative, functional, logic, and concurrent programming. In addition to the formal studies, experience with programming in the languages is used to illustrate how different design goals can lead to radically different languages and models of computation.  
CS15314 | Special Topic: Programming Language Semantics | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15314&SEMESTER=S15 |     Description:    This course is designed for advanced undergraduates with interests in the mathematical and logical foundations of programming languages. The course introduces the foundational concepts and fundamental techniques of the most prominent and successful approaches to programming language semantics that have been developed. Broadly speaking, semantics is concerned with the provision of mathematical meanings to programs, at an appropriate level of abstraction, to allow formalization of program behavior and facilitate proofs of correctness. Our aim is to demonstrate the utility of a scientific approach to programming and languages. We focus on the most important and most general frameworks for semantic description: denotational and operational semantics. These frameworks are widely applicable and offer complementary approaches to language definition, with various advantages. We also discuss formal specifications, and logics of program correctness. We make extensive use of mathematical and structural induction, and computational induction. We use semantics to describe program behavior, guide the development of correct programs, specify and prove the correctness of a compiler, validate program logics, and derive laws of program equivalence. We discuss imperative and functional languages, sequential and parallel, high-level and low-level, as time permits.  
CS15319 | Cloud Computing | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15319&SEMESTER=S15 |     Description:    This on-line course gives students an overview of the field of Cloud Computing, its enabling technologies, main building blocks, and hands-on experience through 4 projects utilizing a public cloud (Amazon Web Services). Cloud computing services are being adopted widely across a variety of organizations and in many domains. Simply, cloud computing is the delivery of computing as a service over a network, whereby distributed resources are rented, rather than owned, by an end user as a utility. The course will introduce this domain and cover the topics of data centers, resource management, cloud storage, and programming models. As an introduction, we will discuss the motivating factors, benefits, challenges, and service models. Modern data centers enable many of the economic and technological benefits of the cloud paradigm; hence, we will describe several concepts behind data center design and management. Next, we will focus on existing approaches for resource management including resource abstraction, sharing and virtualization technologies.    Students will learn about different cloud storage concepts including data distribution, durability, consistency and redundancy. HDFS, PVFS, HBase, Cassandra and S3 will be presented as examples of underlying distributed file systems. Students will understand the details of the MapReduce programming model and gain a broad overview of alternative programming models such as Pregel, and GraphLab. Students will work with a public cloud service (such as Amazon Web Services), use it to rent and provision compute resources and then program and deploy applications that run on these resources. Students will work with cloud storage systems and learn to develop applications in the MapReduce programming paradigm.  
CS15322 | Introduction to Computer Music | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15322&SEMESTER=S15 |     Description:    Computers are used to synthesize sound, process signals, and  compose music. Personal computers have replaced studios full of sound  recording and processing equipment, completing a revolution that began with  recording and electronics. In this course, students will learn the  fundamentals of digital audio, basic sound synthesis algorithms, and  techniques for digital audio effects and processing. Students will apply  their knowledge in programming assignments using a very high-level  programming language for sound synthesis and composition. In a final  project, students will demonstrate their mastery of tools and techniques  through music composition or by the implementation of a significant  sound-processing technique.  
CS15348 | Embedded Systems | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15348&SEMESTER=S15 |     Description:    This course is ONLY offered at Carnegie Mellon in Qatar.    This course covers the broad range of foundational skills that apply across all embedded computer system application areas, from thermostats to self-driving vehicles. The emphasis is at the layer where hardware meets software. Topics include microcontroller hardware, assembly language, embedded C programming, analog I/O, timers, code optimization, interrupts, and concurrency. Real world engineering practices, constraints, and example applications are integrated throughout the course. Weekly hands-on hardware and software experiences with an industry-strength automotive embedded controller are coordinated with the lecture content to reinforce core skills.  
CS15355 | Modern Computer Algebra | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15355&SEMESTER=S15 |     Description:    The goal of this course is to investigate the relationship between algebra  and computation. The course is designed to expose students to algorithms  used for symbolic computation, as well as to the concepts from modern  algebra which are applied to the development of these algorithms. This  course provides a hands-on introduction to many of the most important ideas  used in symbolic mathematical computation, which involves solving system of  polynomial equations (via Groebner bases), analytic integration, and solving  linear difference equations. Throughout the course the computer algebra system Mathematica will be used for computation.  
CS15359 | Probability and Computing | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15359&SEMESTER=S15 |     Description:    Probability theory has become indispensable in computer science.  In  areas such as artificial intelligence and computer science theory,  probabilistic methods and ideas based on randomization are central.  In other areas such as networks and systems, probability is becoming  an increasingly useful framework for handling uncertainty and modeling  the patterns of data that occur in complex systems.  This course gives  an introduction to probability as it is used in computer science  theory and practice, drawing on applications and current research  developments as motivation and context. Topics include combinatorial  probability and random graphs, heavy tail distributions, concentration  inequalities, various randomized algorithms, sampling random variables  and computer simulation, and Markov chains and their many  applications, from Web search engines to models of network protocols.  The course will assume familiarity with 3-D calculus and linear  algebra.  
CS15365 | Experimental Animation | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15365&SEMESTER=S15 |     Description:    This class will explore animation from the student�s perspectivewith a sense of investigation toward both form and content. Topics in theclass will include non-linear narrative, visual music, puppet andnon-traditional materials, manipulation of motion and performance capturedata, immersive environments.  
CS15386 | Neural Computation | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15386&SEMESTER=S15 |     Description:    Computational neuroscience is an interdisciplinary science that seeks to understand how the brain computes  to achieve  natural intelligence.  It seeks to understand the computational principles and mechanisms of intelligent behaviors and mental abilities -- such as perception, language, motor control, and learning -- by building artificial systems and computational models with the same capabilities. This course explores how neurons encode and process information, adapt and learn, communicate, cooperate, compete and compute at the individual level as well as at the levels of networks and systems. It will introduce basic concepts in computational modeling, information theory, signal processing, system analysis, statistical and probabilistic inference. Concrete examples will be drawn from the visual system and the motor systems,  and studied from computational, psychological and biological perspectives. Students will learn to perform computational experiments using Matlab and quantitative studies of neurons and neuronal networks.  
CS15410 | Operating System Design and Implementation | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15410&SEMESTER=S15 |     Description:    Operating System Design and Implementation is a rigorous hands-on introduction to the principles and practice of operating systems. The core experience is writing a small Unix-inspired OS kernel, in C with some x86 assembly language, which runs on a PC hardware simulator (and on actual PC hardware if you wish).  Work is done in two-person teams, and "team programming" skills (source control, modularity, documentation) are emphasized.  The size and scope of the programming assignments typically result in students significantly developing their design, implementation, and debugging abilities. Core concepts include the process model, virtual memory, threads, synchronization, and deadlock; the course also surveys higher-level OS topics including file systems, interprocess communication, networking, and security.  Students, especially graduate students, who have not satisfied the prerequisite at Carnegie Mellon are strongly cautioned - to enter the class you must be able to write a storage allocator in C, use a debugger, understand 2's-complement arithmetic, and translate between C and x86 assembly language.  The instructor may require you to complete a skills assessment exercise before the first week of the semester in order to remain registered in the class.  Auditing:  this course is usually full, and we generally receive many more requests to audit than we can accept.  If you wish to audit, please have your advisor contact us before the semester begins to discuss your educational goals.  
CS15413 | Software Engineering Practicum | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15413&SEMESTER=S15 |     Description:    In this course, students will carry out a semester-long softwaredevelopment project for a real client.  This course will be part ofthe Facebook Open Academy Project, providing students an opportunityto work with each other and students from other universities to makesubstantial contributions to external open source projects.  Allstudents registered for this course must participate in a kick-offmeeting January 30th - February 1st, 2015 in Menlo Park, CA, withflight and hotel expenses to be paid by Facebook. At the kickoffmeeting you will meet other members of your project team and your opensource project mentor, who will provide project-specific guidance forthe remainder of the semester.  Students must sign up for the courseand notify the instructors of their interest by November 21, 2014.A few lectures at the beginning of the course will introduce theprocess, tools, and documents to be used in the course, all of whichwill be specified by the instructors. Throughout the project, groupswill be mentored through weekly team meetings with faculty. Studentswill make regular presentations, and will be evaluated on the codedelivered, software engineering process, client satisfaction, andtheir contribution to the team. Students will leave the course with afirsthand understanding of the software engineering realities thatdrive SE practices. They will have concrete experience with thesepractices, and will have engaged in active reflection on thisexperience. They will have teamwork, process, and product skills tosupport immediate competency in a software engineering organization,along with a deeper understanding that prepares them to evaluate thenew processes and techniques they will encounter in the workplace.  
CS15415 | Database Applications | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15415&SEMESTER=S15 |     Description:    This course covers the fundamental topics for Database Management  Systems: Database System Architectural Principles (ACID properties; data abstraction; external, conceptual, and internal schemata; data  independence; data definition and data manipulation languages), Data  models (entity-relationship and relational data models; data  structures, integrity constraints, and operations for each data  model; relational query languages: SQL, algebra, calculus), Theory of  database design (functional dependencies; normal forms; dependency  preservation; information loss), Query Optimization (equivalence of  expressions, algebraic manipulation; optimization of selections and  joins), Storage Strategies (indices, B-trees, hashing), Query Processing (execution of sort, join, and aggregation operators), and Transaction Processing (recovery and concurrency control).  
CS15418 | Parallel Computer Architecture and Programming | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15418&SEMESTER=S15 |     Description:    The fundamental principles and engineering tradeoffs involved in designing modern parallel computers, as well as the programming techniques to effectively utilize these machines. Topics include naming shared data, synchronizing threads, and the latency and bandwidth associated with communication. Case studies on shared-memory, message-passing, data-parallel and dataflow machines will be used to illustrate these techniques and tradeoffs. Programming assignments will be performed on one or more commercial multiprocessors, and there will be a significant course project.  
CS15423 | Special Topic: Digital Signal Processing for Computer Science | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15423&SEMESTER=S15 |     Description:    Digital signals comprise a large fraction of the data analyzed by computer scientists. Sound, e.g. speech and music, images, radar and many other signal types that were conventionally considered to be the domain of the Electrical engineer are now also in the domain of computer scientists, who must analyze them, make inferences, and develop machine learning techinques to analyze, classify and reconstruct such data. In this course we will cover the basics of Digital Signal Processing. We will concentrate on the basic mathematical formulations, rather than in-depth implementation details. We will cover the breadth of topics, beginning with the basics of signals and their representations, the theory of sampling, important transform representations, key processing techniques, and spectral estimation.  
CS15437 | Web Application Development | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15437&SEMESTER=S15 |     Description:    This course will introduce concepts in programming web application servers. We will study the fundamental architectural elements of programming web sites that produce content dynamically. The primary technologies introduced will be the Django framework for Python and Java Servlets, but we will cover related topics as necessary so that students can build significant applications. Such topics include: HTTP, HTML, CSS, Javascript, XML, Design Patterns, Relational and Non-relational Databases, Object-Relation Mapping tools, Security, Web Services, Cloud Deployment, Internationalization, and Scalability and Performance Issues. Students must be comfortable programming in Java and/or Python to register for this course. Students must provide their own computer hardware for this course. Please see the Related URL above for more information.  
CS15440 | Distributed Systems | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15440&SEMESTER=S15 |     Description:    The goals of this course are twofold: First, for students to gain an understanding of the principles and techniques behind the design of distributed systems, such as locking, concurrency, scheduling, and communication across the network. Second, for students to gain practical experience designing, implementing, and debugging real distributed systems.  The major themes this course will teach include scarcity, scheduling, concurrency and concurrent programming, naming, abstraction and modularity, imperfect communication and other types of failure, protection from accidental and malicious harm, optimism, and the use of instrumentation and monitoring and debugging tools in problem solving. As the creation and management of software systems is a fundamental goal of any undergraduate systems course, students will design, implement, and debug large programming projects.   As a consequence, competency in both the C and Java programming languages is required.  
CS15441 | Computer Networks | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15441&SEMESTER=S15 |     Description:    The emphasis in this course will be on the basic performance and engineering trade-offs in the design and implementation of computer networks. To make the issues more concrete, the class includes several multi-week projects requiring significant design and implementation.    The goal is for students to learn not only what computer networks are and how they work today, but also why they are designed the way they are and how they are likely to evolve in the future. We will draw examples primarily from the Internet. Topics to be covered include: network architecture, routing, congestion/flow/error control, naming and addressing,  peer-to-peer and the web, internetworking, and network security.  
CS15451 | Algorithm Design and Analysis | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15451&SEMESTER=S15 |     Description:    This course is about the design and analysis of algorithms. We study specific algorithms for a variety of problems, as well as general design and analysis techniques. Specific topics include searching, sorting, algorithms for graph problems, efficient data structures, lower bounds and NP-completeness. A variety of other topics may be covered at the discretion of the instructor. These include parallel algorithms, randomized algorithms, geometric algorithms, low level techniques for efficient programming, cryptography, and cryptographic protocols.  
CS15453 | Formal Languages, Automata, and Computability | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15453&SEMESTER=S15 |     Description:    An introduction to the fundamental ideas and models underlying computing: finite automata, regular sets, pushdown automata, context-free grammars, Turing machines, undecidability, and complexity theory.  
CS15454 | Special Topic: Computational Automata Theory | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15454&SEMESTER=S15 |     Description:    Large parts of automata theory are algorithmic in nature.  In this course we will take a close look at some of the more advanced  algorithms such as Hopcroft's minimization, Safra's determinization  and Pin's D-class decomposition.  Whenwever appropriate, we will  consider ordinary word automata, omega-automata and zeta-automata.  As  an application we study the analysis (model checking) of automatic  structures in algebra and discrete dynamics.  
CS15457 | Special Topics in Theory: Advanced Algorithms: Advanced Algorithms | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15457&SEMESTER=S15 |     Description:    Selected advanced topics in algorithms and computational theory. Topics vary from semester to semester.  
CS15462 | Computer Graphics | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15462&SEMESTER=S15 |     Description:    This course provides a comprehensive introduction to computer graphics modeling, animation, and rendering. Topics covered include basic image processing, geometric transformations, geometric modeling of curves and surfaces, animation, 3-D viewing, visibility algorithms, shading, and ray tracing.  
CS15464 | Technical Animation | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15464&SEMESTER=S15 |     Description:    This course introduces techniques for computer animation such as keyframing, procedural methods, motion capture, and simulation. The course also includes a brief overview of story-boarding, scene composition, lighting and sound track generation. The second half of the course will explore current research topics in computer animation such as dynamic simulation of flexible and rigid objects,automatically generated control systems, and evolution of behaviors. The course should be appropriate for graduate students in all areas and for advanced undergraduates.  
CS15494 | Special Topic: Cognitive Robotics | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15494&SEMESTER=S15 |     Description:    Cognitive robotics is a new approach to robot programming based on    high level primitives for perception and action. These primitives draw    inspiration from ideas in cognitive science combined with state of the    art robotics algorithms. Students will experiment with these    primitives and help develop new ones using the Tekkotsu software    framework on the Calliope robot, which includes a 5 degree-of-freedom    arm with gripper, a Kinect camera on a pan/tilt mount, and Ubuntu    Linux on a dual-core on-board netbook. Prior robotics experience is    not necessary, but strong programming skills are required.  
CS15498 | Special Topic: Forensic Computer Science | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15498&SEMESTER=S15 |     Description:    This class covers the fundamentals of information forensics: analyzing   storage devices and system, network systems, mobile devices and   conventional computers, appliances such as copiers and faxes, and game   systems. It includes necesary coverage of the technical details of the   systems to be analyzed as well as the tools and techniques used to   analyze them. The class covers threats to the integrity of information,   spoilage, and assessing the fidelity of apparent discoveries. Students   will learn proper forensic techniques and protocols, as well as how to   document findings and opinions in reports and how to offer live testimony.    Students will also learn to consider the impact of information and its   security on society and the impact of the availability of information on   privacy. Students will serve as a resource for local and federal public   defenders and investigators assisting indigent clients working on real,   live cases that affect real defendants and real communities. In this   capacity students will be advancing the cause of justice by helping to   uncover the facts surrounding the case.    The course will also include presentations from federal and state   prosecutors, defenders, and investigators about the criminal justice   system, information forensics in the real world, law and technology, and   the future of technology, the law, justice, security, and privacy.  
CS15513 | Introduction to Computer Systems | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15513&SEMESTER=S15 |     Description:    This course provides a programmer's view of how computer systems execute programs, store information, and communicate. It enables students to become more effective programmers, especially in dealing with issues of performance, portability and robustness. It also serves as a foundation for courses on compilers, networks, operating systems, and computer architecture, where a deeper understanding of systems-level issues is required. Topics covered include: machine-level code and its generation by optimizing compilers, performance evaluation and optimization, computer arithmetic, memory organization and management, networking technology and protocols, and supporting concurrent computation. NOTE: This course is not open to undergraduate students. This course is intended for Master's students only and is taught in a self-study mode with video lectures.This course is variable units. The course materials and expectationsare the same, regardless of the number of units selected. Those with astrong background in computer science and software development takingthe course as a refresher may sign-up for 6 units. Those who will bestudying the material and/or doing projects of this type for the firsttime should sign up for 12-units. The unit flexibility is completelyto facilitate proper workload planning and scheduling for the student-- it does not affect the course expectations.  
CS15591 | Independent Study in Computer Science | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15591&SEMESTER=S15 |     Description:    To be determined  
CS15592 | Independent Study in Computer Science | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15592&SEMESTER=S15 |     Description:    to be determined  
CS15593 | Independent Study in Computer Science | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15593&SEMESTER=S15 |     Description:    To be determined  
CS15594 | Independent Study in Computer Science | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15594&SEMESTER=S15 |     Description:    to be determined  
CS15599 | SCS Honors Undergraduate Research Thesis | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15599&SEMESTER=S15 |     Description:    Available only to students registered in the CS Senior Research Thesis Program.  
CS15602 | Special Topic :Innovating for Underserved Communities: Field Research Basics | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15602&SEMESTER=S15 |     Description:    The ultimate goal of this course is to teach students practical skills necessary to conduct effective field research on the topic of innovating for underserved communities. The course begins with an introduction to how computing technology can have a positive impact on the lives of people in developing communities and people with disabilities. Next, students will learn about the components of field research including needs assessment, literature review, iterative solution development, evaluation, and dissemination. Students will also explore the challenges of field research in this area and learn effective strategies for overcoming these challenges. Overall, students will engage in assignments and in-class exercises that help them gain experience and prepare for future field research endeavors. As part of the final assignment, students will participate in a solution design process for a specific challenge faced by one of the underserved community partners of the TechBridgeWorld research group at Carnegie Mellon University. This year, the course will focus on innovating technology tools for visually impaired people related to smart cities of the future. Promising outcomes of this course will be further developed by the TechBridgeWorld research group and tested with visually impaired users with the permission of students involved with producing these outcomes.  
CS15603 | Special Topics: Seminar on Innovating for Underserved Communities | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15603&SEMESTER=S15 |     Description:    The ultimate goal of this course is to familiarize students with ongoing work in the area of technology innovations for underserved communities. This seminar course will review several key publications and presentations on this topic and teach students the necessary skills to analyze and critique this work in useful ways. Class sessions will be dedicated to discussing reading/viewing assignments and each class discussion will be led by students. Assignments will involve analyzing, writing, and presenting critiques of specific projects.  
CS15605 | Operating System Design and Implementaion | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15605&SEMESTER=S15 |     Description:    Operating System Design and Implementation is a rigorous hands-on introduction to the principles and practice of operating systems.  The core experience is writing a small Unix-inspired OS kernel, in C with some x86 assembly language, which runs on a PC hardware  simulator (and on actual PC hardware if you wish).  Work is done in two-person teams, and "team programming" skills (source control,  modularity, documentation) are emphasized.  The size and scope of the programming assignments typically result in students significantly developing their design, implementation, and debugging abilities. Core concepts include the process model, virtual memory, threads, synchronization, and deadlock; the course also surveys higher-level OS topics including file systems, interprocess communication, networking, and security.    Students, especially graduate students, who have not satisfied the prerequisite at  Carnegie Mellon are strongly cautioned - to enter the class you must be able  to write a storage allocator in C, use a debugger, understand 2's-complement  arithmetic, and translate between C and x86 assembly language.  The  instructor may require you to complete a skills assessment exercise before  the first week of the semester in order to remain registered in the class.    Auditing:  this course is usually full, and we generally receive  many more requests to audit than we can accept.  If you wish to  audit, please have your advisor contact us before the semester  begins to discuss your educational goals.  
CS15615 | Database Applications | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15615&SEMESTER=S15 |     Description:    This course covers the fundamental topics for Database Management   Systems: Database System Architectural Principles (ACID properties; data  abstraction; external, conceptual, and internal schemata; data   independence; data definition and data manipulation languages), Data   models (entity-relationship and relational data models; data   structures, integrity constraints, and operations for each data   model; relational query languages: SQL, algebra, calculus), Theory of   database design (functional dependencies; normal forms; dependency   preservation; information loss), Query Optimization (equivalence of   expressions, algebraic manipulation; optimization of selections and   joins), Storage Strategies (indices, B-trees, hashing), Query Processing  (execution of sort, join, and aggregation operators), and  Transaction Processing (recovery and concurrency control).  
CS15618 | Parallel Computer Architecture and Programming | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15618&SEMESTER=S15 |     Description:    The fundamental principles and engineering tradeoffs involved in designing modern parallel computers, as well as the programming techniques to effectively utilize these machines. Topics include naming shared data, synchronizing threads, and the latency and bandwidth associated with communication. Case studies on shared-memory, message-passing, data-parallel and dataflow machines will be used to illustrate these techniques and tradeoffs. Programming assignments will be performed on one or more commercial multiprocessors, and there will be a significant course project.  
CS15619 | Cloud Computing | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15619&SEMESTER=S15 |     Description:    This on-line course gives students an overview of the field of Cloud Computing, its enabling technologies, main building blocks, and hands-on experience through 4 projects utilizing a public cloud (Amazon Web Services). Cloud computing services are being adopted widely across a variety of organizations and in many domains. Simply, cloud computing is the delivery of computing as a service over a network, whereby distributed resources are rented, rather than owned, by an end user as a utility. The course will introduce this domain and cover the topics of data centers, resource management, cloud storage, and programming models. As an introduction, we will discuss the motivating factors, benefits, challenges, and service models. Modern data centers enable many of the economic and technological benefits of the cloud paradigm; hence, we will describe several concepts behind data center design and management. Next, we will focus on existing approaches for resource management including resource abstraction, sharing and virtualization technologies. Students will learn about different cloud storage concepts including data distribution, durability, consistency and redundancy. HDFS, PVFS, HBase, Cassandra and S3 will be presented as examples of underlying distributed file systems. Students will understand the details of the MapReduce programming model and gain a broad overview of alternative programming models such as Pregel, and GraphLab. Students will work with a public cloud service (such as Amazon Web Services), use it to rent and provision compute resources and then program and deploy applications that run on these resources. Students will work with cloud storage systems and learn to develop applications in the MapReduce programming paradigm.  
CS15623 | Special Topic: Digital Signal Processing for Computer Science | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15623&SEMESTER=S15 |     Description:    Digital signals comprise a large fraction of the data analyzed by computer scientists. Sound, e.g. speech and music, images, radar and many other signal types that were conventionally considered to be the domain of the Electrical engineer are now also in the domain of computer scientists, who must analyze them, make inferences, and develop machine learning techinques to analyze, classify and reconstruct such data. In this course we will cover the basics of Digital Signal Processing. We will concentrate on the basic mathematical formulations, rather than in-depth implementation details. We will cover the breadth of topics, beginning with the basics of signals and their representations, the theory of sampling, important transform representations, key processing techniques, and spectral estimation.  
CS15637 | Web Application Development | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15637&SEMESTER=S15 |     Description:    This course will introduce concepts in programming web application servers. We will study the fundamental architectural elements of programming web sites that produce content dynamically. The primary technologies introduced will be the Django framework for Python and Java Servlets, but we will cover related topics as necessary so that students can build significant applications. Such topics include: HTTP, HTML, CSS, Javascript, XML, Design Patterns, Relational and Non-relational Databases, Object-Relation Mapping tools, Security, Web Services, Cloud Deployment, Internationalization, and Scalability and Performance Issues. Students must be comfortable programming in Java and/or Python to register for this course. Students must provide their own computer hardware for this course. Please see the Related URL above for more information.  
CS15640 | Distributed Systems | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15640&SEMESTER=S15 |     Description:    The goals of this course are twofold: First, for students to gain an understanding of the principles and techniques behind the design of distributed systems, such as locking, concurrency, scheduling, and communication across the network. Second, for students to gain practical experience designing, implementing, and debugging real distributed systems.  The major themes this course will teach include scarcity, scheduling, concurrency and concurrent programming, naming, abstraction and modularity, imperfect communication and other types of failure, protection from accidental and malicious harm, optimism, and the use of instrumentation and monitoring and debugging tools in problem solving. As the creation and management of software systems is a fundamental goal of any undergraduate systems course, students will design, implement, and debug large programming projects.   As a consequence, competency in both the C and Java programming languages is required.  
CS15648 | Studio in Big Data Systems | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15648&SEMESTER=S15 |     Description:    Advancing the state of the art in large scale systems is challenging for many reasons including algorithm efficiency, weak consistency, failure tolerance, etc. However, as observed repeatedly among the Googles, Facebooks and Yahoo!'s, all the rest of these hardly matter if the developer is not experienced with large systems, if the logistics of large scale systems are not easily mastered, and if the large collection of core systems is unfamiliar. Without good hands on experience with the current systems and their tools, theoretical knowledge leads to theoretical success, and too often little more. This course is a project course intended primarily for the Big Data Systems track of the Very Large Informations Systems program. Others need instructor approval to register.  
CS15649 | Seminar Data Systems | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15649&SEMESTER=S15 |     Description:    This three unit seminar is intended primarily for the Big Data Systems track of the Very Large Informations Systems program.  The content of the seminar will be the integration of the material in the courses and projects on this program; how everything fits into the computing world today, and whatever else is missing from the rest of the program.  Most meetings will be informal discussions with the program leadership, some guest speakers, and some little reading. Students not registered in the Big Data Systems track of the Very Large Informations Systems program need instructor approval to register for this seminar.  Co-requisite: 15-648  
CS15651 | Algorithm Design and Analysis | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15651&SEMESTER=S15 |     Description:    This course is intended for SCS graduate students. ECE graduate students should register for either 15-351 or 15-451. All other graduate students should register for 15-650."   This course is about the design and analysis of algorithms. We study specific algorithms for a variety of problems, as well as general design and analysis techniques. Specific topics include searching, sorting, algorithms for graph problems, efficient data structures, lower bounds and NP-completeness. A variety of other topics may be covered at the discretion of the instructor. These include parallel algorithms, randomized algorithms, geometric algorithms, low level techniques for efficient programming, cryptography, and cryptographic protocols.  
CS15652 | Foundation Programming Languages | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15652&SEMESTER=S15 |     Description:    This course discusses in depth many of the concepts underlying the design, definition, implementation, and use of modern programming languages. Formal approaches to defining the syntax and semantics are used to describe the fundamental concepts underlying programming languages. A variety of programming paradigms are covered such as imperative, functional, logic, and concurrent programming. In addition to the formal studies, experience with programming in the languages is used to illustrate how different design goals can lead to radically different languages and models of computation.  
CS15659 | Probability and Computing | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15659&SEMESTER=S15 |     Description:    Probability theory has become indispensable in computer science.  In areas such as artificial intelligence and computer science theory, probabilistic methods and ideas based on randomization are central. In other areas such as networks and systems, probability is becoming an increasingly useful framework for handling uncertainty and modeling the patterns of data that occur in complex systems.  This course gives an introduction to probability as it is used in computer science theory and practice, drawing on applications and current research developments as motivation and context. Topics include combinatorial probability and random graphs, heavy tail distributions, concentration inequalities, various randomized algorithms, sampling random variables and computer simulation, and Markov chains and their many applications, from Web search engines to models of network protocols. The course will assume familiarity with 3-D calculus and linear algebra.  
CS15661 | Interaction and Expression using the Pausch Bridge LightingThis Section Cancelled | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15661&SEMESTER=S15 |     Description:    Working in cross-disciplinary teams, students will explore light as art, interactive design and programming using a Pharos lighting control system. Students will explore the use of light and interaction using the actual controls within the Randy Pausch Memorial Bridge. Student teams will develop final projects that will be exhibited on the actual Randy Pausch Memorial Bridge.  
CS15662 | Computer Graphics | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15662&SEMESTER=S15 |     Description:    This course provides a comprehensive introduction to computer graphics modeling, animation, and rendering. Topics covered include basic image processing, geometric transformations, geometric modeling of curves and surfaces, animation, 3-D viewing, visibility algorithms, shading, and ray tracing.  
CS15664 | Technical Animation | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15664&SEMESTER=S15 |     Description:    None  
CS15669 | Masters Research | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15669&SEMESTER=S15 |     Description:    None  
CS15686 | Neural Computation | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15686&SEMESTER=S15 |     Description:    Computational neuroscience is an interdisciplinary science that seeks to understand how the brain computes  to achieve  natural intelligence.  It seeks to understand the computational principles and mechanisms of intelligent behaviors and mental abilities -- such as perception, language, motor control, and learning -- by building artificial systems and computational models with the same capabilities. This course explores how neurons encode and process information, adapt and learn, communicate, cooperate, compete and compute at the individual level as well as at the levels of networks and systems. It will introduce basic concepts in computational modeling, information theory, signal processing, system analysis, statistical and probabilistic inference. Concrete examples will be drawn from the visual system and the motor systems,  and studied from computational, psychological and biological perspectives. Students will learn to perform computational experiments using Matlab and quantitative studies of neurons and neuronal networks.  
CS15689 | Independent Study in the Computer Sciences | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15689&SEMESTER=S15 |     Description:    This course is for Master's student who plan to do an Independent Study in the Master of Science program within the Computer Science Department - SECTION A or enrolled in the ISR Master of Computational Data Science program SECTION B.  You will placed on the waitlist until your advisor gives you permission to proceed.  
CS15694 | Special Topic: Cognitive Robotics | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15694&SEMESTER=S15 |     Description:    Cognitive robotics is a new approach to robot programming based on    high level primitives for perception and action. These primitives draw    inspiration from ideas in cognitive science combined with state of the    art robotics algorithms. Students will experiment with these    primitives and help develop new ones using the Tekkotsu software    framework on the Calliope robot, which includes a 5 degree-of-freedom    arm with gripper, a Kinect camera on a pan/tilt mount, and Ubuntu    Linux on a dual-core on-board netbook. Prior robotics experience is    not necessary, but strong programming skills are required.  
CS15697 | Graduate Reading and Research | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15697&SEMESTER=S15 |     Description:    None  
CS15744 | Computer Networks: Computer Networks | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15744&SEMESTER=S15 |     Description:    This course assumes a basic familiarity with networking concepts. The course will consist of a reading/lecture/discussion component and a project component. The class will cover approximately 50 research papers on various aspects of computer networking. These papers will introduce students to the basic design principles on which today's networks are based. In addition, these papers will cover recent proposals to improve network performance, functionality and scalability. Specific topics that will be covered include: LAN/WAN technologies, congestion/flow control, traffic analysis, routing, internet working, multicast, security, and quality of service.  Please refer to http://www.cs.cmu.edu/~csd-grad/courseschedules14.html this link for the most recent schedule updates.  
CS15745 | Optimizing Compilers for Modern Architectures | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15745&SEMESTER=S15 |     Description:    Description: Theoretical and practical aspects of building optimizing compilers that effectively exploit modern architectures. The course will begin with the fundamentals of compiler optimization, and will build upon these fundamentals to address issues in state-of-the-art commercial and research machines. Topics include: intermediate representations, basic blocks and flow graphs, data flow analysis, partial evaluation and redundancy elimination, loop optimizations, register allocation, instruction scheduling, interprocedural analysis, memory hierarchy optimizations, extracting parallelism, and dynamic optimizations. Students will implement significant optimizations within the framework of a modern research compiler.  Please refer to http://www.cs.cmu.edu/~csd-grad/courseschedules14.html this link for the most recent schedule updates.  
CS15746 | Storage Systems | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15746&SEMESTER=S15 |     Description:    Storage systems are among the most fascinating and the most important parts of computer systems. They often dominate the performance of a system, and their components' inner workings require amazing feats of engineering. At the same time, storage systems hold the crown jewels of most organizations: their information (from source code to Microsoft's software to the sales databases of every e-commerce site). Within the field of computer systems and computer engineering, there is no area whose demand for bright people and better solutions is more robust.   This course will cover the design, implementation, and use of storage systems, from the characteristics and operation of individual storage devices to the OS, database, and networking approaches involved in tying them together and making them useful. Along the way, we will examine several case studies of real systems, demands placed on storage systems by important applications, and impacts of trends and emerging technologies on future storage systems.   For those familiar with 18-316 (Intro. to Data Storage Systems Technology) and 18-517 (Data Storage Systems Design Project): one should consider these courses as distinct and complementary, with neither being a pre-requisite to the other. 18-316 and 18-517 focus on the low-level technologies (magnetics, materials, applied physics, etc.) whereas 746 focuses on storage's incorporation and role in computer systems.   Please refer to http://www.cs.cmu.edu/~csd-grad/courseschedules11.html for the most recent schedule updates.  
CS15750 | Graduate Algorithms | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15750&SEMESTER=S15 |     Description:    Please refer to http://www.cs.cmu.edu/~csd-grad/courseschedules14.htm for the most recent schedule updates.  
CS15780 | Graduate Artificial Intelligence | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15780&SEMESTER=S15 |     Description:    Description: This course is targeted at graduate students who want to learn about and perform current-day research in artificial intelligence---the discipline of designing intelligent decision-making machines.  Techniques from probability, statistics, game theory, algorithms, operations research and optimal control are increasingly important tools for improving the intelligence and autonomy of machines, whether those machines are robots surveying Antarctica, schedulers moving billions of dollars of inventory, spacecraft deciding which experiments to perform, or vehicles negotiating for lanes on the freeway. This course covers the core of AI from a modern perspective.  The course will cover the core ideas, their implementation, and how to use them or extend them in your research.  The course includes a final project of each student's choosing.  Please refer to http://www.cs.cmu.edu/~csd-grad/courseschedules14.html this link for the most recent schedule updates.  
CS15801 | CS PhD Alternative Elective | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15801&SEMESTER=S15 |     Description:    None  
CS15802 | CSD PhD Elective | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15802&SEMESTER=S15 |     Description:    Please refer to this link for the most recent schedule updates.  
CS15812 | Programming Language Semantics | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15812&SEMESTER=S15 |     Description:    Please refer to http://www.cs.cmu.edu/~csd-grad/courseschedules15.html this link for the most recent schedule updates.  
CS15815 | Interactive Theorem Proving | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15815&SEMESTER=S15 |     Description:    Please refer tohttps://www.cs.cmu.edu/~csd-grad/courseschedules15.html for the most recent schedule updates.  
CS15819 | Advanced Topics in Programming Languages:This Section Cancelled | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15819&SEMESTER=S15 |     Description:    Please refer to http://www.cs.cmu.edu/~csd-grad/courseschedulef14.html this link for the most recent schedule updates.  
CS15859 | Special Topics in Theory:: Advanced Algorithms | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15859&SEMESTER=S15 |     Description:    Please refer to https://www.cs.cmu.edu/~csd-grad/courseschedules15.html this link for the most recent schedule updates.Section E: An advanced course on the design and analysis of algorithms, more specialized than the Graduate Algorithms course 15-750.A tentative list of topics include:    Basic graph algorithms: MSTs (beyond Prim/Kruskal), Shortest paths (beyond Dijkstra/Bellman-Ford), Matchings, and Flows    Graph algorithms using Algebraic techniques        Shortest paths using matrix multiplication        Matching etc. using matrix inversions        Max-flow using electrical flows    Linear and Convex Programming        Using convex programming to solve combinatorial optimization problems        Solving convex optimization problems    Parameterized algorithms    Streaming algorithms (a.k.a. algorithms for big data)    Online algorithms    Approximation AlgorithmsThe goal is to give a glimpse into some ideas/techniques from each area.  
CS15869 | Special Topics in Graphics:: Computational Aspects of Fabrication | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15869&SEMESTER=S15 |     Description:    Please refer to https://www.cs.cmu.edu/~csd-grad/courseschedules15.html this link for the most recent schedule updates.  
CS15891 | V-Unit in Computer Science | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15891&SEMESTER=S15 |     Description:    href="http://www.cs.cmu.edu/~vunit/intro.html    DESCRIPTION:  Please refer to href="http://www.cs.cmu.edu/~csd-grad/courseschedulef13.html this link for the most recent schedule updates.  
CS15896 | Algorithms, Games, and Networks | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15896&SEMESTER=S15 |     Description:    Please refer to http://www.cs.cmu.edu/~csd-grad/courseschedules14.html this link for the most recent schedule updates.  Description: Algorithms, Games, and Networks is a new interdisciplinary course that covers selected theoretical topics at the interface of computer science and economics.  The course's topics include: solution concepts in game theory, such as Nash equilibrium and correlated equilibrium, their computation, and connections to learning theory; the price of anarchy in routing and congestion games; computational social choice: voting rules as maximum likelihood estimators, the axiomatic approach to ranking systems and crowdsourcing, manipulation of elections and ways to circumvent it; algorithmic mechanism design, focusing on truthful approximation algorithms; market design, with an emphasis on optimization and incentives in kidney exchange; diffusion of technologies and influence maximization in social networks; and procedures for fair division, such as cake cutting algorithms.  Book: The course book is Algorithmic Game Theory, which is freely available online.  Prerequisites: The course is mainly intended for graduate students in computer science. We also welcome undergraduates and students in other relevant fields (e.g., mathematics, economics, business), but note that mathematical maturity is required, and basic knowledge in computational complexity and probability theory is assumed.  
CS15990 | Computer Science Colloquium | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15990&SEMESTER=S15 |     Description:    None  
CS15997 | Graduate Reading and Research | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15997&SEMESTER=S15 |     Description:    None  
CS15998 | Practicum in Computer Science | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=15998&SEMESTER=S15 |     Description:    None  
