EE 10N | How Musical Instruments Work | https://explorecourses.stanford.edu/search?q=EE 10N | Musical instruments, as well as being fun to play, are excellent examples of science, engineering, and the interplay between the two. How does an instrument make sound? Why does a trumpet sound different from a guitar, a flute, or a bell? We will examine the principles of operation of wind, string, percussion, and electronic instruments hands-on in class. Concepts to be investigated include waves, resonators, understanding and measuring sound spectra and harmonic structure of instruments, engineering design of instruments, the historical development of instruments, and the science and engineering that make them possible. Prerequisites: high school math and physics. Recommended: some experience playing a musical instrument.
EE 10SC | Mathematics of the Information Age | https://explorecourses.stanford.edu/search?q=EE 10SC | The world may be made of earth, wind, fire, and water, but it runs on information. What is information? How do we measure it, manipulate it, send it, and protect it? Why has everything gone digital and what does this mean? The mathematics of the Information Age is part of your everyday life, from imaging to the Internet. We will discuss the elements of information theory and how information is represented in different ways for different purposes. We will work with the mathematical representation of signals from the classical functions of trigonometry to the spectrum of a general signal.  This course will help you understand some of the profound ways mathematics is used to shape and direct these aspects of the modern world. There will be regular assignments, readings, a research project, and a presentation on a topic of your choice that goes beyond the class material.
EE 14N | Things about Stuff | https://explorecourses.stanford.edu/search?q=EE 14N | Preference to freshmen. The stories behind disruptive inventions such as the telegraph, telephone, wireless, television, transistor, and chip are as important as the inventions themselves, for they elucidate broadly applicable scientific principles. Focus is on studying consumer devices; projects include building batteries, energy conversion devices and semiconductors from pocket change. Students may propose topics and projects of interest to them. The trajectory of the course is determined in large part by the students themselves.
EE 15N | The Art and Science of Engineering Design | https://explorecourses.stanford.edu/search?q=EE 15N | The goal of this seminar is to introduce freshmen to the design process associated with an engineering project. The seminar will consist of a series of lectures. The first part of each lecture will focus on the different design aspects of an engineering project, including formation of the design team, developing a project statement, generating design ideas and specifications, finalizing the design, and reporting the outcome. Students will form teams to follow these procedures in designing a term project of their choice over the quarter. The second part of each lecture will consist of outside speakers, including founders of some of the most exciting companies in Silicon Valley, who will share their experiences about engineering design. On-site visits to Silicon Valley companies to showcase their design processes will also be part of the course. The seminar serves three purposes: (1) it introduces students to the design process of turning an idea into a final design, (2) it presents the different functions that people play in a project, and (3) it gives students a chance to consider what role in a project would be best suited to their interests and skills.
EE 17N | Engineering the Micro and Nano Worlds: From Chips to Genes | https://explorecourses.stanford.edu/search?q=EE 17N | Preference to freshmen. The first part is hands-on micro- and nano-fabrication including the Stanford Nanofabrication Facility (SNF) and the Stanford Nanocharacterization Laboratory (SNL) and field trips to local companies and other research centers to illustrate the many applications; these include semiconductor integrated circuits ('chips'), DNA microarrays, microfluidic bio-sensors and microelectromechanical systems (MEMS). The second part is to create, design, propose and execute a project. Most of the grade will be based on the project. By the end of the course you will, of course, be able to read critically a New York Times article on nanotechnology. More importantly you will have experienced the challenge (and fun) of designing, carrying out and presenting your own experimental project. As a result you will be better equipped to choose your major. This course can complement (and differs from) the seminars offered by Profs Philip Wong and Hari Manoharan in that it emphasizes laboratory work and an experimental student-designed project. Prerequisites: high-school physics.
EE 21N | What is Nanotechnology? | https://explorecourses.stanford.edu/search?q=EE 21N | Nanotechnology is an often used word and it means many things to different people. Scientists and Engineers have some notion of what nanotechnology is, societal perception may be entirely different. In this course, we start with the classic paper by Richard Feynman ("There's Plenty of Room at the Bottom"), which laid down the challenge to the nanotechnologists. Then we discuss two classic books that offer a glimpse of what nanotechnology is: Engines of Creation: The Coming Era of Nanotechnology by Eric Drexler, and Prey by Michael Crichton. Drexler's thesis sparked the imagination of what nano machinery might do, whereas Crichton's popular novel channeled the public's attention to this subject by portraying a disastrous scenario of a technology gone astray. We will use the scientific knowledge to analyze the assumptions and predictions of these classic works. We will draw upon the latest research advances to illustrate the possibilities and impossibilities of nanotechnology.
EE 22N | Medical Imaging Systems | https://explorecourses.stanford.edu/search?q=EE 22N | Preference to freshmen. The technology of major imaging modalities used for disease diagnosis: x-ray, ultrasound, and magnetic resonance; their history, societal impact, and clinical applications. Field trips to a medical center and an imaging research lab. Term paper and presentation. Prerequisites: high school physics and calculus.
EE 23N | Imaging: From the Atom to the Universe | https://explorecourses.stanford.edu/search?q=EE 23N | Preference to freshmen. Forms of imaging including human and animal vision systems, atomic force microscope, microscope, digital camera, holography and three-dimensional imaging, telescope, synthetic aperture radar imaging, nuclear magnetic imaging, sonar and gravitational wave imaging, and the Hubble Space telescope. Physical principles and exposure to real imaging devices and systems.
EE 27N | Electronics Rocks | https://explorecourses.stanford.edu/search?q=EE 27N | Electronics pervades our lives, yet we often feel obliged to let a device function as it was intended. This course is about not being intimidated by voiding a warranty and modding some commercial gadget and about being confident enough to build something cool from scratch. To get there, we will study the basics of "how things work" via "dissection and discussion" and discuss how to hack/mod but focus primarily how to scratch build. Students will be mentored and encouraged to work, in teams, to design and develop a substantial project based on embedded microprocessors and custom circuits as needed. Typical projects include (but are not limited to) microcontrollers such as the Arduino, LED's, sensors, wireless connections to the network or a laptop, and software/firmware as needed. Examples include programmable, color-changing wireless juggling balls, a self-healing mesh-networked hide-and-seek game, and a glowing plasma based clock built from surplus Soviet vacuum tubes and a modern microprocessor. Prerequisites: good hand-eye coordination, intelligence, teamwork skills, curiosity and humility.
EE 41 | Physics of Electrical Engineering (ENGR 40P) | https://explorecourses.stanford.edu/search?q=EE 41 | How everything from electrostatics to quantum mechanics is used in common high-technology products. Electrostatics are critical in micro-mechanical systems used in many sensors and displays, and Electromagnetic waves are essential in all high-speed communication systems. How to propagate energy on transmission lines, optical fibers,and in free space. Which aspects of modern physics are needed to generate light for the operation of a DVD player or TV. Introduction to semiconductors, solid-state light bulbs, and laser pointers. Hands-on labs to connect physics to everyday experience. Prerequisites: Physics 43
EE 46 | Engineering For Good: Save the World and Have Fun Doing It | https://explorecourses.stanford.edu/search?q=EE 46 | Projects that provide immediate and positive impact on the world. Focus is on global health by learning from experts in this field. Students work on real-world projects with help from members of NGOs and social entrepreneurial companies as part of the hand-on learning experience. Prerequisite: ENGR 40 or EE 122A or CS 106B or consent of instructor.
EE 47 | Press Play: Interactive Device Design | https://explorecourses.stanford.edu/search?q=EE 47 | Introduction to the human-centered and technical workings behind interactive devices ranging from cellphones and video controllers to smart cars and appliances. Students build a working MP3 player prototype of their own design, using embedded microcontrollers, digital audio decoders and component sensors, and other electronic hardware. Topics include electronics prototyping, interface prototyping, sensors and actuators, micro-controller development, physical prototyping, and user testing. Prerequisite: CS106A and X or consent of instructor.
EE 60N | Man versus Nature: Coping with Disasters Using Space Technology (GEOPHYS 60N) | https://explorecourses.stanford.edu/search?q=EE 60N | Preference to freshman. Natural hazards, earthquakes, volcanoes, floods, hurricanes, and fires, and how they affect people and society; great disasters such as asteroid impacts that periodically obliterate many species of life. Scientific issues, political and social consequences, costs of disaster mitigation, and how scientific knowledge affects policy. How spaceborne imaging technology makes it possible to respond quickly and mitigate consequences; how it is applied to natural disasters; and remote sensing data manipulation and analysis. GER:DB-EngrAppSci
EE 65 | Modern Physics for Engineers | https://explorecourses.stanford.edu/search?q=EE 65 | This course introduces the core ideas of modern physics that enable applications ranging from solar energy and efficient lighting to the modern electronic and optical devices and nanotechnologies that sense, process, store, communicate and display all our information. Though the ideas have broad impact, the course is widely accessible to engineering and science students with only basic linear algebra and calculus through simple ordinary differential equations as mathematics background. Topics include the quantum mechanics of electrons and photons (Schrödinger's equation, atoms, electrons, energy levels and energy bands; absorption and emission of photons; quantum confinement in nanostructures), the statistical mechanics of particles (entropy, the Boltzmann factor, thermal distributions), the thermodynamics of light (thermal radiation, limits to light concentration, spontaneous and stimulated emission), and the physics of information (Maxwell¿s demon, reversibility, entropy and noise in physics and information theory).  Pre-requisite: Physics 41. Pre- or co-requisite: Math 53 or CME 102.
EE 92A | Making and Breaking Things | https://explorecourses.stanford.edu/search?q=EE 92A | This course will feature weekly visiting speakers who will guide class members through the hands-on process of assembling or dissection novel interactive devices and products. The course is meant to provide students hands-on experience with component sensing and computing technolo-gies, a working knowledge of different materials and methods used in modern-day prototyping and manufacture, and exposure to people en-gaged in designing novel devices within the field of interactive device de-sign. Activities will features a wide and evolving range of domains such as texile sensors, hacking wireless radio, making LED light sculptures, taking apart toys, shape deposition modeling and more.
EE 100 | The Electrical Engineering Profession | https://explorecourses.stanford.edu/search?q=EE 100 | Lectures/discussions on topics of importance to the electrical engineering professional. Continuing education, professional societies, intellectual property and patents, ethics, entrepreneurial engineering, and engineering management.
EE 101A | Circuits I | https://explorecourses.stanford.edu/search?q=EE 101A | First of two-course sequence. Introduction to circuit modeling and analysis. Topics include creating the models of typical components in electronic circuits and simplifying non-linear models for restricted ranges of operation (small signal model); and using network theory to solve linear and non-linear circuits under static and dynamic operations. Prerequisite: Physics 43
EE 101B | Circuits II | https://explorecourses.stanford.edu/search?q=EE 101B | Second of two-course sequence. MOS large-signal and small-signal models. MOS amplifier design including DC bias, small signal performance, multistage amplifiers, frequency response, and feedback. Prerequisite: EE101A, EE102A.
EE 102A | Signal Processing and Linear Systems I | https://explorecourses.stanford.edu/search?q=EE 102A | Concepts and tools for continuous- and discrete-time signal and system analysis with applications in signal processing, communications, and control. Mathematical representation of signals and systems. Linearity and time invariance. System impulse and step responses. System frequency response. Frequency-domain representations: Fourier series and Fourier transforms. Filtering and signal distortion. Time/frequency sampling and interpolation. Continuous-discrete-time signal conversion and quantization. Discrete-time signal processing. Prerequisite: MATH 53 or CME 102.
EE 102B | Signal Processing and Linear Systems II | https://explorecourses.stanford.edu/search?q=EE 102B | Continuation of EE 102A. Concepts and tools for continuous- and discrete-time signal and system analysis with applications in communications, signal processing and control. Analog and digital modulation and demodulation. Sampling, reconstruction, decimation and interpolation. Finite impulse response filter design. Discrete Fourier transforms, applications in convolution and spectral analysis. Laplace transforms, applications in circuits and feedback control. Z transforms, applications in infinite impulse response filter design. Prerequisite: EE 102A.
EE 103 | Introduction to Matrix Methods (CME 103) | https://explorecourses.stanford.edu/search?q=EE 103 | Introduction to applied linear algebra with emphasis on applications. Vectors, norm, and angle; linear independence and orthonormal sets. Matrices, left and right inverses, QR factorization. Least- squares and model fitting, regularization and cross-validation, time-series prediction, and other examples. Constrained least-squares; applications to least-norm reconstruction, optimal control, and portfolio optimization. Newton methods and nonlinear least-squares. Prerequisites: MATH 51 or CME 100.
EE 107 | Networked Systems | https://explorecourses.stanford.edu/search?q=EE 107 | Networks form the interconnect that stitch together our digital and physical lives. They underpin cloud computing, our mobile connectivity, as well as the means to connect the large number of sensors that will pervade our physical surroundings. This class will provide hands on introduction to how networks at these different scales are designed, from datacenters to embedded low power networks. Students will learn these concepts through a project that involves building a wireless network from the ground up using software radios. Students will also learn how to use these networks to build embedded applications (e.g. wireless controlled network of drones, localization systems using WiFi). The goal is to introduce students to larger concepts in electrical engineering and computer systems: the role of abstraction and layering, building reliable systems out of unreliable components and dynamic sharing of scarce resources.  Prerequisites: EE 102A or ENGR 40M.
EE 108 | Digital System Design | https://explorecourses.stanford.edu/search?q=EE 108 | Digital circuit, logic, and system design. Digital representation of information. CMOS logic circuits. Combinational logic design. Logic building blocks, idioms, and structured design. Sequential logic design and timing analysis. Clocks and synchronization. Finite state machines. Microcode control. Digital system design. Control and datapath partitioning.  Lab.  Undergraduates must enroll for 4 units.  *In Autumn, enrollment preference is given to EE majors.  Formerly EE 108A.
EE 109 | Digital Systems Design Lab | https://explorecourses.stanford.edu/search?q=EE 109 | The design of integrated digital systems encompassing both customized software and hardware. Software/hardware design tradeoffs. Algorithm design for pipelining and parallelism. System latency and throughput tradeoffs. FPGA optimization techniques. Integration with external systems and smart devices. Firmware configuration and embedded system considerations. Enrollment limited to 25;  preference to graduating seniors. Prerequisites: 108B, and CS 106B or X.
EE 114 | Fundamentals of Analog Integrated Circuit Design (EE 214A) | https://explorecourses.stanford.edu/search?q=EE 114 | Analysis and simulation of elementary transistor stages, current mirrors, supply- and temperature-independent bias, and reference circuits. Overview of integrated circuit technologies, circuit components, component variations and practical design paradigms. Differential circuits, frequency response, and feedback will also be covered. Performance evaluation using computer-aided design tools. Undergraduates must take EE 114 for 4 units.  Prerequisite: 101B. GER:DB-EngrAppSci
EE 116 | Semiconductor Device Physics | https://explorecourses.stanford.edu/search?q=EE 116 | The fundamental operation of semiconductor devices and overview of applications. The physical principles of semiconductors, both silicon and compound materials; operating principles and device equations for junction devices (diodes, bipolar transistor, photo-detectors). Introduction to quantum effects and band theory of solids. Prerequisite: ENGR 40. Corequisite: 101B.
EE 118 | Introduction to Mechatronics (ME 210) | https://explorecourses.stanford.edu/search?q=EE 118 | Technologies involved in mechatronics (intelligent electro-mechanical systems), and techniques to apply this technology to mecatronic system design. Topics include: electronics (A/D, D/A converters, op-amps, filters, power devices); software program design, event-driven programming; hardware and DC stepper motors, solenoids, and robust sensing. Large, open-ended team project. Prerequisites: ENGR 40, CS 106, or equivalents.
EE 122A | Analog Circuits Laboratory | https://explorecourses.stanford.edu/search?q=EE 122A | The course covers practical applications of mixed-signal circuits, including simple amplifiers, filters (passive, op-amp, switched-capacitor and digital-signal-processor-based), oscillators, power supplies, sensors and interface (input/output) circuits. Practical design skills, computer-aided design, and circuit fabrication and debugging are core topics. The design process is learned through proposing, designing, simulating, building, debugging, and demonstrating a substantial and novel team project. Radio frequency and largely digital projects not suitable for EE 122. Prerequisite: basic electronics laboratory experience with solid working knowledge of circuit analysis, Fourier and Laplace methods.
EE 122B | Introduction to Biomedical Electronics | https://explorecourses.stanford.edu/search?q=EE 122B | EE122B is a laboratory course covering the design and realization of key components and architectures of modern biomedical electronics systems, their application in clinical and research measurements, and practical matters in their safe reduction to practice. Material in each topic area begins with an overview of the underlying physiology. Details are presented beginning with the molecular, cellular, organ-level origins of the biosignals, followed by the relevant transduction principles, nature of the signals (amplitude, frequency spectrum, etc.), and their processing and clinical use. Specific engineering topics include safety in biomedical instruments, fundamentals of analog/digital conversion and filtering techniques for biosignals, typical transducers (biopotential, electrochemical, temperature, pressure, acoustic, movement), applications (cardiovascular medicine, neurology, pulmonology, etc.) and interfacing circuits. Prerequisite: EE122A or equivalent hands-on mixed-signal design experience and solid working knowledge of EE122A topics (see course description).
EE 124 | Introduction to Neuroelectrical Engineering | https://explorecourses.stanford.edu/search?q=EE 124 | Fundamental properties of electrical activity in neurons, technology for measuring and altering neural activity, and operating principles of modern neurological and neural prosthetic medical systems. Topics: action potential generation and propagation, neuro-MEMS and measurement systems, experimental design and statistical data analysis, information encoding and decoding, clinical diagnostic systems, and fully-implantable neural prosthetic systems design. Prerequisite: EE 101A and EE 102A.
EE 133 | Analog Communications Design Laboratory (EE 233) | https://explorecourses.stanford.edu/search?q=EE 133 | Design, testing, and applications. Amplitude modulation (AM) using multiplier circuits. Frequency modulation (FM) based on discrete oscillator and integrated modulator circuits such as voltage-controlled oscillators (VCOs). Phased-lock loop (PLL) techniques, characterization of key parameters, and their applications. Practical aspects of circuit implementations. Labs involve building and characterization of AM and FM modulation/demodulation circuits and subsystems. Enrollment limited to 30 undergraduates and coterminal EE students. Prerequisite: EE101B. Undergraduate students enroll in EE133 and Graduate students enroll in EE233. Recommended: EE114/214A.
EE 134 | Introduction to Photonics | https://explorecourses.stanford.edu/search?q=EE 134 | Photonics, optical components, and fiber optics. Conceptual and mathematical tools for design and analysis of optical communication, sensor and imaging systems. Experimental characterization of semiconductor lasers, optical fibers, photodetectors, receiver circuitry, fiber optic links, optical amplifiers, and optical sensors. Class project on confocal microscopy or other method of sensing or analyzing biometric data. Laboratory experiments. Prerequisite: 41 or equivalent.
EE 136 | Introduction to Nanophotonics and Nanostructures | https://explorecourses.stanford.edu/search?q=EE 136 | Electromagnetic and quantum mechanical waves and semiconductors. Confining these waves, and devices employing such confinement. Localization of light and applications: metallic mirrors, photonic crystals, optical waveguides, microresonators, plasmonics. Localization of quantum mechanical waves: quantum wells, wires, and dots. Generation of light in semiconductors: spontaneous and stimulated emission, lasers, and light emitting diodes. Devices incorporating localization of both electromagnetic and quantum mechanical waves such as resonant cavity quantum well lasers and microcavity-based single photon sources. System-level applications such as optical communications, biochemical sensing, and quantum cryptography. Prerequisite: basic familiarity with electromagnetic and quantum mechanical waves and semiconductors at the level of EE 41 or equivalent.
EE 142 | Engineering Electromagnetics | https://explorecourses.stanford.edu/search?q=EE 142 | Introduction to electromagnetism and Maxwell¿s equations in static and dynamic regimes.  Electrostatics and magnetostatics: Gauss¿s, Coulomb¿s, Faraday¿s, Ampere's, Biot-Savart's laws.  Electric and magnetic potentials. Boundary conditions. Electric and magnetic field energy.  Electrodynamics: Wave equation; Electromagnetic waves; Phasor form of Maxwell¿s equations.nSolution of the wave equation in 1D free space: Wavelength, wave-vector, forward and backward propagating plane waves.Poynting¿s theorem. Propagation in lossy media, skin depth. Reflection and refraction at planar boundaries, total internal reflection. Solutions of wave equation for various 1D-3D problems: Electromagnetic resonators, waveguides periodic media, transmission lines. Formerly EE 141.  Pre-requisites: Phys 43 or EE 42, CME 100, CME 102 (recommended)
EE 151 | Sustainable Energy Systems | https://explorecourses.stanford.edu/search?q=EE 151 | Energy demand is expected to grow by 30% by 2025, while at the same time the European Union is demanding a carbon footprint at 1990 levels. We examine energy flow in the US and Europe, and deduce from it a strategy for sustainable growth. Potential solutions include distributed small scale networked energy generation, solar energy, wind and water, as well as nuclear energy.  A systems perspective allows optimization.  Fundamental concepts will be demonstrated in class through hands-on experiments.
EE 152 | Green Electronics | https://explorecourses.stanford.edu/search?q=EE 152 | Many green technologies including hybrid cars, photovoltaic energy systems, efficient power supplies, and energy-conserving control systems have at their heart intelligent, high-power electronics.  This course examines this technology and uses green-tech examples to teach the engineering principles of modeling, optimization, analysis, simulation, and design.  Topics include power converter topologies, periodic steady-state analysis, control, motors and drives, photovol-taic systems, and design of magnetic components.  The course involves a hands-on laboratory and a substantial final project.  Required: EE101B, EE102A, EE108A.  Recommended:  ENGR40 or EE122A.
EE 153 | Power Electronics (EE 253) | https://explorecourses.stanford.edu/search?q=EE 153 | Addressing the energy challenges of today and the environmental challenges of the future will require efficient energy conversion techniques. This course will discuss the circuits used to efficiently convert ac power to dc power, dc power from one voltage level to another, and dc power to ac power. The components used in these circuits (e.g., diodes, transistors, capacitors, inductors) will also be covered in detail to highlight their behavior in a practical implementation. A lab will be held with the class where students will obtain hands on experience with power electronic circuits. Formerly EE 292J.
EE 168 | Introduction to Digital Image Processing | https://explorecourses.stanford.edu/search?q=EE 168 | Computer processing of digital 2-D and 3-D data, combining theoretical material with implementation of computer algorithms. Topics: properties of digital images, design of display systems and algorithms, time and frequency representations, filters, image formation and enhancement, imaging systems, perspective, morphing, and animation applications. Instructional computer lab exercises implement practical algorithms. Final project consists of computer animations incorporating techniques learned in class. Prerequisite: Matlab programming.
EE 169 | Introduction to Bioimaging | https://explorecourses.stanford.edu/search?q=EE 169 | Bioimaging is important for both clinical medicine, and medical research.  This course will provide a introduction to several of the major imaging modalities, using a signal processing perspective. The course will start with an introduction to multi-dimensional Fourier transforms, and image quality metrics.  It will then study projection imaging systems (projection X-Ray), backprojection based systems (CT, PET, and SPECT), systems that use beam forming (ultrasound), and systems that use Fourier encoding (MRI). Prerequisites: EE102A, EE102B
EE 178 | Probabilistic Systems Analysis | https://explorecourses.stanford.edu/search?q=EE 178 | Introduction to probability and statistics and their role in modeling and analyzing real world phenomena. Events, sample space, and probability. Discrete random variables, probability mass functions, independence and conditional probability, expectation and conditional expectation. Continuous random variables, probability density functions, independence and expectation, derived densities. Transforms, moments, sums of independent random variables. Simple random processes. Limit theorems. Introduction to statistics: significance, estimation and detection. Prerequisites: basic calculus.
EE 179 | Analog and Digital Communication Systems | https://explorecourses.stanford.edu/search?q=EE 179 | This course covers the fundamental principles underlying the analysis, design and optimization of analog and digital communication systems. Design examples will be taken from the most prevalent communication systems today:  cell phones, Wifi, radio and TV broadcasting, satellites, and computer networks. Analysis techniques based on Fourier transforms and energy/power spectral density will be developed. Mathematical models for random variables and random (noise) signals will be presented, which are used to characterize filtering and modulation of random noise. These techniques will then be used to design analog (AM and FM) and digital (PSK and FSK) communication systems and determine their performance over channels with noise and interference. Prerequisite: 102A.  Not offered AY 14-15, and students are encouraged to enroll in EE 107 instead.
EE 180 | Digital Systems Architecture | https://explorecourses.stanford.edu/search?q=EE 180 | The design of processor-based digital systems. Instruction sets, addressing modes, data types. Assembly language programming, low-level data structures, introduction to operating systems and compilers. Processor microarchitecture, microprogramming, pipelining. Memory systems and caches. Input/output, interrupts, buses and DMA. System design implementation alternatives, software/hardware tradeoffs. Labs involve the design of processor subsystems and processor-based embedded systems. Formerly EE 108B.  Prerequisite: CS107 (required) and EE108 (recommended but not required).
EE 190 | Special Studies or Projects in Electrical Engineering | https://explorecourses.stanford.edu/search?q=EE 190 | Independent work under the direction of a faculty member. Individual or team activities involve lab experimentation, design of devices or systems, or directed reading. Course may be repeated for credit.
EE 191 | Special Studies and Reports in Electrical Engineering | https://explorecourses.stanford.edu/search?q=EE 191 | Independent work under the direction of a faculty member given for a letter grade only. If a letter grade given on the basis of required written report or examination is not appropriate, enroll in 190. Course may be repeated for credit.
EE 191A | Special Studies and Reports in Electrical Engineering | https://explorecourses.stanford.edu/search?q=EE 191A | EE191A is part of the Accelerated Calculus for Engineers program. Independent work under the direction of a faculty member given for a letter grade only. EE 191A counts as a Math one unit seminar course: it is this unit that constitutes the ACE program.
EE 191W | Special Studies and Reports in Electrical Engineering (WIM) | https://explorecourses.stanford.edu/search?q=EE 191W | WIM-version of EE 191.  For EE students using special studiesn(e.g., honors project, independent research project) to satisfy thenwriting-in-major requirement.  A written report that has gone through revision with an advisor is required.  An advisor from the Writing Center is recommended.
EE 192X | Stanford's Little Box Challenge (EE 292X) | https://explorecourses.stanford.edu/search?q=EE 192X | IGoogle has announced the "Littlebox" competition to build the smallest possible 2kW inverter . This challenge provides an ideal opportunity to provide a number of exciting educational and design opportunities for engineering students.  The first few class meetings will be lecture format describing the competition and the work that has been done to date: Mechanical modeling, Matlab model, Buck and unfolding bridge designs.  In parallel,  students will be matched in teams for  studies that need to be done: DC-Link implementation, QR-topology, Multi-level Approaches, Control implementation, GaN implementation, SiC investigations, Capacitor studies, Inductor studies, Thermal Design, EMI study, Etc.  The problems span many topics: embedded and control systems design, power electronics, digital and analog design, programming in C & FPGAs, mechanical and thermal design and testing. We welcome motivated undergraduate and graduate students with a variety of backgrounds.
EE 202 | Electrical Engineering in Biology and Medicine | https://explorecourses.stanford.edu/search?q=EE 202 | Open to all. Primarily biological in nature, introduction to the physiological and anatomic aspects of medical instrumentation. Areas include patient monitoring, imaging, medical transducers, the unique aspects of medical electronic systems, the socio-economic impact of technology on medical care, and the constraints unique to medicine. Prerequisite: familiarity with circuit instrumentation techniques as in 101B.
EE 203 | The Entrepreneurial Engineer | https://explorecourses.stanford.edu/search?q=EE 203 | Seminar. For prospective entrepreneurs with an engineering background. Contributions made to the business world by engineering graduates. Speakers include Stanford and other engineering and M.B.A. graduates who have founded large and small companies in nearby communities. Contributions from EE faculty and other departments including Law, Business, and MS&E.May be repeated for credit.
EE 204 | Business Management for Electrical Engineers and Computer Scientists | https://explorecourses.stanford.edu/search?q=EE 204 | For graduate students with little or no business experience. Leading computer, high-tech, and Silicon Valley companies and their best practices. Tools and frameworks for analyzing decisions these companies face. Corporate strategy, new product development, marketing, sales, distribution, customer service, financial accounting, outsourcing, and human behavior in business organizations. Case studies. Prerequisite: graduate standing.
EE 204S | Business Management for Electrical Engineers and Computer Scientists | https://explorecourses.stanford.edu/search?q=EE 204S | For SCPD students; see EE204.
EE 212 | Integrated Circuit Fabrication Processes | https://explorecourses.stanford.edu/search?q=EE 212 | For students interested in the physical bases and practical methods of silicon VLSI chip fabrication, or the impact of technology on device and circuit design, or intending to pursue doctoral research involving the use of Stanford's Nanofabrication laboratory. Process simulators illustrate concepts. Topics: principles of integrated circuit fabrication processes, physical and chemical models for crystal growth, oxidation, ion implantation, etching, deposition, lithography, and back-end processing. Required for 410.
EE 213 | Digital MOS Integrated Circuits | https://explorecourses.stanford.edu/search?q=EE 213 | Looks a little more deeply at how digital circuits operate, what makes a gate digital, and how to "cheat" to improve performance or power. To aid this analysis we create a number of different models for MOS transistors and choose the simplest one that can explain our the circuit's operation, using both hand and computer analysis. We explore static, dynamic, pulse-mode, and current mode logic, and show how they are are used in SRAM design. Topics include sizing for min delay, noise and noise margins, power dissipation. The class uses memory design (SRAM) as a motivating example. DRAM and EEPROM design issues are also covered.  Formerly EE 313.  Prerequisites: EE 101B, EE 108A. Recommended: EE 271.
EE 214A | Fundamentals of Analog Integrated Circuit Design (EE 114) | https://explorecourses.stanford.edu/search?q=EE 214A | Analysis and simulation of elementary transistor stages, current mirrors, supply- and temperature-independent bias, and reference circuits. Overview of integrated circuit technologies, circuit components, component variations and practical design paradigms. Differential circuits, frequency response, and feedback will also be covered. Performance evaluation using computer-aided design tools. Undergraduates must take EE 114 for 4 units.  Prerequisite: 101B. GER:DB-EngrAppSci
EE 214B | Advanced Analog Integrated Circuit Design | https://explorecourses.stanford.edu/search?q=EE 214B | Analysis and design of analog integrated circuits in advanced MOS and bipolar technologies. Device operation and compact modeling in support of circuit simulations needed for design. Emphasis on quantitative evaluations of performance using hand calculations and circuit simulations; intuitive approaches to design. Analytical and approximate treatments of noise and distortion; analysis and design of feedback circuits. Design of archetypal analog blocks for networking and communications such as broadband gain stages and transimpedance amplifiers. Prerequisites: EE114/214A.
EE 216 | Principles and Models of Semiconductor Devices | https://explorecourses.stanford.edu/search?q=EE 216 | Carrier generation, transport, recombination, and storage in semiconductors. Physical principles of operation of the p-n junction, heterojunction, metal semiconductor contact, bipolar junction transistor, MOS capacitor, MOS and junction field-effect transistors, and related optoelectronic devices such as CCDs, solar cells, LEDs, and detectors. First-order device models that reflect physical principles and are useful for integrated-circuit analysis and design. Prerequisite: 116 or equivalent.
EE 222 | Applied Quantum Mechanics I | https://explorecourses.stanford.edu/search?q=EE 222 | Emphasis is on applications in modern devices and systems. Topics include: Schrödinger's equation, eigenfunctions and eigenvalues, solutions of simple problems including quantum wells and tunneling, quantum harmonic oscillator, coherent states, operator approach to quantum mechanics, Dirac notation, angular momentum, hydrogen atom, calculation techniques including matrix diagonalization, perturbation theory, variational method,  and time-dependent perturbation theory with applications to optical absorption, nonlinear optical coefficients, and Fermi's golden rule. Prerequisites: MATH 52 and 53, PHYSICS 65 (or PHYSICS 43 and 45).
EE 223 | Applied Quantum Mechanics II | https://explorecourses.stanford.edu/search?q=EE 223 | Continuation of 222, including more advanced topics: quantum mechanics of crystalline materials, methods for one-dimensional problems, spin, systems of identical particles (bosons and fermions), introductory quantum optics (electromagnetic field quantization, coherent states), fermion annihilation and creation operators, interaction of different kinds of particles (spontaneous emission, optical absorption, and stimulated emission). Quantum information and interpretation of quantum mechanics. Other topics in electronics, optoelectronics, optics, and quantum information science. Prerequisite: 222.
EE 225 | Biochips and Medical Imaging (MATSCI 382, SBIO 225) | https://explorecourses.stanford.edu/search?q=EE 225 | The course covers state-of-the-art and emerging bio-sensors, bio-chips, imaging modalities, and nano-therapies which will be studied in the context of human physiology including the nervous system, circulatory system and immune system. Medical diagnostics will be divided into bio-chips (in-vitro diagnostics) and medical and molecular imaging (in-vivo imaging). In-depth discussion on cancer and cardiovascular diseases and the role of diagnostics and nano-therapies.
EE 228 | Basic Physics for Solid State Electronics | https://explorecourses.stanford.edu/search?q=EE 228 | Topics: energy band theory of solids, energy bandgap engineering, classical kinetic theory, statistical mechanics, and equilibrium and non-equilibrium semiconductor statistics. Prerequisite: course in modern physics.
EE 230 | Biophotonics: Light in Biology | https://explorecourses.stanford.edu/search?q=EE 230 | This course will provide an introduction to the use of optics in biology, primarily focusing on microscopy from an engineering perspective (i.e., the focus of the course is more on technology than biology). Course material will be interspersed with labs to provide hands-on experience with common techniques in modern microscopy (e.g., brightfield, fluorescence, confocal and phase contrast microscopy). Background in college physics strongly recommended. Programming experience with Matlab required.
EE 233 | Analog Communications Design Laboratory (EE 133) | https://explorecourses.stanford.edu/search?q=EE 233 | Design, testing, and applications. Amplitude modulation (AM) using multiplier circuits. Frequency modulation (FM) based on discrete oscillator and integrated modulator circuits such as voltage-controlled oscillators (VCOs). Phased-lock loop (PLL) techniques, characterization of key parameters, and their applications. Practical aspects of circuit implementations. Labs involve building and characterization of AM and FM modulation/demodulation circuits and subsystems. Enrollment limited to 30 undergraduates and coterminal EE students. Prerequisite: EE101B. Undergraduate students enroll in EE133 and Graduate students enroll in EE233. Recommended: EE114/214A.
EE 234 | Photonics Laboratory | https://explorecourses.stanford.edu/search?q=EE 234 | Photonics and fiber optics with a focus on communication and sensing. Experimental characterization of semiconductor lasers, optical fibers, photodetectors, receiver circuitry, fiber optic links, optical amplifiers, and optical sensors and photonic crystals. Prerequisite: EE 242 or equivalent.  Recommended: EE 236A.
EE 236A | Modern Optics | https://explorecourses.stanford.edu/search?q=EE 236A | Geometrical optics, aberrations, optical instruments, radiometry. Ray matrices and Gaussian beams. Wave nature of light. Plane waves: at interfaces, in media with varying refractive index. Diffraction and Fourier optics. Interference, single-beam interferometers (Fabry-Perot), multiple-beam interferometers (Michelson, Mach-Zehnder). Polarization, Jones and Stokes calculi.nFormerly EE 268. Prerequisites: EE 141 or familiarity with electromagnetism and plane waves.
EE 236AL | MODERN OPTICS - LABORATORY | https://explorecourses.stanford.edu/search?q=EE 236AL | The Laboratory Course allows students to work hands-on with optical equipment to conduct five experiments that compliment the lecture course.  Examples are Gaussian Beams and Resonators, Interferometers, and Diffraction.
EE 236B | Guided Waves | https://explorecourses.stanford.edu/search?q=EE 236B | Maxwell's equations, constitutive relations. Kramers-Kronig relations. Modes in waveguides: slab, rectangular, circular. Photonic crystals, surface plasmon modes. General properties of waveguide modes: orthogonality, phase and group indices, group velocity dispersion. Chirped pulse propagation in dispersive media and its connection to Gaussian beam propagation. Time lens. Waveguide technologies: glass, silicon, III-V semiconductor, metallic. Waveguide devices: fibers, lasers, modulators, arrayed waveguide gratings. Scattering matrix description of passive optical devices, and constraints from energy conservation, time-reversal symmetry and reciprocity. Mode coupling, directional couplers, distributed-feedback structures. Resonators from scattering matrix and input-output perspective. Micro-ring resonators.nFormerly EE 235. Prerequisites: EE 236A and EE 242 or familiarity with differential form of Maxwell's equations.
EE 236C | Lasers | https://explorecourses.stanford.edu/search?q=EE 236C | Atomic systems, spontaneous emission, stimulated emission, amplification. Three- and four-level systems, rate equations, pumping schemes. Laser principles, conditions for steady-state oscillation. Transverse and longitudinal mode control and tuning. Exemplary laser systems: gas (HeNe), solid state (Nd:YAG, Ti:sapphire) and semiconductors. Elements of laser dynamics and noise.  Formerly EE231.  Prerequisites: EE 236B and familiarity with modern physics and semiconductor physics. Recommended: EE 216 and EE 223 (either may be taken concurrently).
EE 237 | Solar Energy Conversion | https://explorecourses.stanford.edu/search?q=EE 237 | Basics of solar energy conversion in photovoltaic devices. Solar cell device physics: electrical and optical. Crystalline silicon, thin film and multi-junction solar cells. Solar system issues including module assembly, inverters, and micro-inverters. Concentrated solar power.  Flip classroom model is used supplementing classroom lectures with short videos. Guest speakers include distinguished engineers, entrepreneurs and venture capitalists actively engaged in solar industry. Recommended: EE116, EE216.
EE 242 | Electromagnetic Waves | https://explorecourses.stanford.edu/search?q=EE 242 | Continuation of 141. Maxwell's equations. Plane waves in lossless and lossy media. Skin effect. Flow of electromagnetic power (Poynting's theorem). Reflection and refraction of waves at planar boundaries. Snell's law and total internal reflection. Reflection and refraction from lossy media. Guided waves. Parallel-plate and dielectric-slab waveguides. Hollow wave-guides, cavity resonators, microstrip waveguides, optical fibers. Interaction of fields with matter and particles. Antennas and radiation of electromagnetic energy. Prerequisite: 141 or PHYSICS 120.
EE 243 | Semiconductor Optoelectronic Devices | https://explorecourses.stanford.edu/search?q=EE 243 | Semiconductor physics and optical processes in semiconductors. Operating principles and practical device features of semiconductor optoelectronic materials and heterostructures. Devices include: optical detectors (p-i-n, avalanche, and MSM); light emitting diodes; electroabsorptive modulators (Franz-Keldysh and QCSE), electrorefractive (directional couplers, Mach-Zehnder), switches (SEEDs); and lasers (waveguide and vertical cavity surface emitting). Prerequisites: semiconductor devices and solid state physics such as EE 216 or equivalent.
EE 247 | Introduction to Optical Fiber Communications | https://explorecourses.stanford.edu/search?q=EE 247 | Fibers: single- and multi-mode, attenuation, modal dispersion, group-velocity dispersion, polarization-mode dispersion. Nonlinear effects in fibers: Raman, Brillouin, Kerr. Self- and cross-phase modulation, four-wave mixing. Sources: light-emitting diodes, laser diodes, transverse and longitudinal mode control, modulation, chirp, linewidth, intensity noise. Modulators: electro-optic, electro-absorption. Photodiodes: p-i-n, avalanche, responsivity, capacitance, transit time. Receivers: high-impedance, transimpedance, bandwidth, noise. Digital intensity modulation formats: non-return-to-zero, return-to-zero. Receiver performance: Q factor, bit-error ratio, sensitivity, quantum limit. Sensitivity degradations: extinction ratio, intensity noise, jitter, dispersion. Wavelength-division multiplexing. System architectures: local-area, access, metropolitan-area, long-haul. Prerequisites: 102A, 242 or consent of instructor.
EE 248 | Fundamentals of Noise Processes | https://explorecourses.stanford.edu/search?q=EE 248 | Fundamentals of statistic, Fourier analysis, statistical and quantum mechanics, and linear and nonlinear circuit theory. Thermal, quantum and 1/f noise in resistors, pn junctions, lasers, and parametric amplifiers. Energy efficiency (bit/photon) and spectral efficiency (bit/s/Hz) in coherent and single photon optical communications. Protocols and security in quantum cryptography. Decoherence of qubits in quantum computation. Prerequisites: elementary device, circuit, and electromagnetic waves to the level of 101A,B and 242.
EE 251 | High-Frequency Circuit Design Laboratory | https://explorecourses.stanford.edu/search?q=EE 251 | Students will study the theory of operation of instruments such as the time-domain reflectometer, sampling oscilloscope and vector network analyzer. They will build on that theoretical foundation by designing, constructing and characterizing numerous wireless building blocks in the upper-UHF range (e.g., up to about 500MHz), in a running series of laboratory exercises that conclude in a final project. Examples include impedance-matching and coupling structures, filters, narrowband and broadband amplifiers, mixers/modulators, and voltage-controlled oscillators.
EE 252 | Antennas | https://explorecourses.stanford.edu/search?q=EE 252 | This course aims to cover the theory, simulation, and hands-on experiment in antenna design.  Topics include: basic parameters to describe the performance and characteristics of an antenna, link budget analyses, solving the fields from a Hertizian dipole, duality, equivalence principle, reciprocity, linear wire antenna, circular loop antenna, antenna array, slot and patch antennas, helical antennas, wideband antennas, size reduction techniques, wideband small antennas, and circularly polarized (CP) small antennas.  Students will learn to use a commercial electromagnetic stimulator in lab sessions.  A final project is designed to solve a research antenna design problem in biomedical area or wireless communications.  Prerequisite: EE 141 or Physics 120 or equivalent.  Enrollment capacity limited to 25 students.
EE 253 | Power Electronics (EE 153) | https://explorecourses.stanford.edu/search?q=EE 253 | Addressing the energy challenges of today and the environmental challenges of the future will require efficient energy conversion techniques. This course will discuss the circuits used to efficiently convert ac power to dc power, dc power from one voltage level to another, and dc power to ac power. The components used in these circuits (e.g., diodes, transistors, capacitors, inductors) will also be covered in detail to highlight their behavior in a practical implementation. A lab will be held with the class where students will obtain hands on experience with power electronic circuits. Formerly EE 292J.
EE 254 | Advanced Topics in Power Electronics | https://explorecourses.stanford.edu/search?q=EE 254 | In this course, we will study the practical issues related to the practical design of power electronic converters. We will also explore the trade-offs involved in selecting among the different circuits used to convert ac to dc, dc to ac and back to dc over a wide range of power levels suitable for different applications. In Advanced Topics in Power Electronic, as a multidisciplinary field, we will discuss power electronics circuits, extraction of transfer functions in Continuous and discontinuous conduction mode, voltage and current control of power converters, design of input/output filters to meet Electro Magnetic Interference specifications, layout of power electronics circuits and put this knowledge in a very practical context.
EE 256 | Numerical Electromagnetics | https://explorecourses.stanford.edu/search?q=EE 256 | Principles and applications of numerical techniques for solving practical electromagnetics problems. Finite-difference time-domain (FDTD) method and finite-difference frequency-domain (FDFD) method for solving 2D and 3D Maxwell¿s equations. Numerical analysis of stability, dispersion, and dissipation. Perfectly matched layer (PML) absorbing boundaries. Total-field/scattered-field (TF/SF) method.  Interaction of electromagnetic waves with dispersive and anisotropic media. Homework assignments require programming and the use of MATLAB or other equivalent tools. Prerequisite: 242 or equivalent.
EE 257 | Applied Optimization Laboratory (Geophys 258) (GEOPHYS 258) | https://explorecourses.stanford.edu/search?q=EE 257 | Application of optimization and estimation methods to the analysis and modeling of large observational data sets. Laboratory exercises using inverse theory and applied linear algebra to solve problems of indirect and noisy measurements.  Emphasis on practical solution of scientific and engineering problems, especially those requiring large amounts of data, on digital computers using scientific languages. Also addresses advantages of large-scale computing, including hardware architectures, input/output and data bus bandwidth, programming efficiency, parallel programming techniques. Student projects involve analyzing real data by implementing observational systems such as tomography for medical and Earth observation uses, radar and matched filtering, multispectral/multitemporal studies, or migration processing. Prequisites: Programming with high level language. Recommended: EE261, EE263, EE178, ME300 or equivalent.
EE 261 | The Fourier Transform and Its Applications | https://explorecourses.stanford.edu/search?q=EE 261 | The Fourier transform as a tool for solving physical problems. Fourier series, the Fourier transform of continuous and discrete signals and its properties. The Dirac delta, distributions, and generalized transforms. Convolutions and correlations and applications; probability distributions, sampling theory, filters, and analysis of linear systems. The discrete Fourier transform and the FFT algorithm. Multidimensional Fourier transform and use in imaging. Further applications to optics, crystallography. Emphasis is on relating the theoretical principles to solving practical engineering and science problems. Prerequisites: Math through ODEs, basic linear algebra, Comfort with sums and discrete signals, Fourier series at the level of 102A
EE 262 | Two-Dimensional Imaging | https://explorecourses.stanford.edu/search?q=EE 262 | Time and frequency representations, two-dimensional auto- and cross-correlation, Fourier spectra, diffraction and antennas, coordinate systems and the Hankel and Abel transforms, line integrals, impulses and sampling, restoration in the presence of noise, reconstruction and tomography, imaging radar. Tomographic reconstruction using projection-slice and layergarm methods. Students create software to form images using these techniques with actual data. Final project consists of design and simulation of an advanced imaging system. Prerequisite: EE261. Recommended: EE278, EE279.
EE 263 | Introduction to Linear Dynamical Systems (CME 263) | https://explorecourses.stanford.edu/search?q=EE 263 | Applied linear algebra and linear dynamical systems with application to circuits, signal processing, communications, and control systems. Topics: least-squares approximations of over-determined equations and least-norm solutions of underdetermined equations. Symmetric matrices, matrix norm, and singular value decomposition. Eigenvalues, left and right eigenvectors, with dynamical interpretation. Matrix exponential, stability, and asymptotic behavior. Multi-input/multi-output systems, impulse and step matrices; convolution and transfer matrix descriptions. Control, reachability, and state transfer; observability and least-squares state estimation. Prerequisites: linear algebra and matrices as in MATH 103; differential equations and Laplace transforms as in EE 102A.
EE 264 | Digital Signal Processing | https://explorecourses.stanford.edu/search?q=EE 264 | This is a course on digital signal processing techniques and their applications. Topics include: review of DSP fundamentals; discrete-time random signals; sampling and multi-rate systems; oversampling and quantization in A-to-D conversion; properties of LTI systems; quantization in fixed-point implementations of filters; digital filter design; discrete Fourier Transform and FFT; spectrum analysis using the DFT; and parametric signal modeling.  The course will also discuss applications of DSP in areas such as speech and audio processing, autonomous vehicles, and software radio.  An optional (1 unit) project will provide a hands-on opportunity to explore the application of DSP theory to practical real-time applications.  Prerequisite: EE102A and EE102B or equivalent.
EE 265 | Digital Signal Processing Laboratory | https://explorecourses.stanford.edu/search?q=EE 265 | Applying 102A,B to real-world signal processing applications. Lab exercises use a programmable DSP to implement signal processing tasks. Topics: A/D conversion and quantization, sampling theorem, Z-transform, discrete-time Fourier transform, digital filter design and implementation, spectral analysis, rate conversion, wireless data communication, and OFDM receiver design. Prerequisites: 102A,B. Recommended: 261.
EE 266 | Stochastic Control (MS&E 251) | https://explorecourses.stanford.edu/search?q=EE 266 | Introduction to stochastic control, with applications taken from a variety of areas including supply-chain optimization, advertising, finance, dynamic resource allocation, caching, and traditional automatic control. Markov decision processes, optimal policy with full state information for finite-horizon case, infinite-horizon discounted, and average stage cost problems. Bellman value function, value iteration, and policy iteration. Approximate dynamic programming. Linear quadratic stochastic control.  Formerly EE365. Prerequisites: EE 263, EE 178 or equivalent
EE 271 | Introduction to VLSI Systems | https://explorecourses.stanford.edu/search?q=EE 271 | Provides a quick introduction to MOS transistors and IC fabrication and then creates abstractions to allow you to create and reason about complex digital systems.  It uses a switch resistor model of a transistor, uses it to model gates, and then shows how gates and physical layout can be synthesized from Verilog or SystemVerilog descriptions.  Most of the class will be spent on providing techniques to create designs that can be validated, are low power, provide good performance, and can be completed in finite time. Prerequisites: 101A, 108A and 108B; familiarity with transistors, logic design, Verilog and digital system organization
EE 272 | Design Projects in VLSI Systems | https://explorecourses.stanford.edu/search?q=EE 272 | An introduction to mixed signal design.  Working in teams you will create a small mixed-signal VLSI design using a modern design flow and CAD tools.  The project involves writing a Verilog model of the chip, creating a testing/debug strategy for your chip, wrapping custom layout to fit into a std cell system, using synthesis and place and route tools to create the layout of your chip, and understanding all the weird stuff you need to do to tape-out a chip.  Useful for anyone who will build a chip in their Ph.D.  Pre-requsiites:  EE271 and experience in digital/analog circuit design.
EE 273 | Digital Systems Engineering | https://explorecourses.stanford.edu/search?q=EE 273 | Electrical issues in the design of high-performance digital systems, including signaling, timing, synchronization, noise, and power distribution. High-speed signaling methods; noise in digital systems, its effect on signaling, and methods for noise reduction; timing conventions; timing noise (skew and jitter), its effect on systems, and methods for mitigating timing noise; synchronization issues and synchronizer design; clock and power distribution problems and techniques; impact of electrical issues on system architecture and design. Prerequisites: EE101A and EE108A. Recommended: EE114/214A.
EE 278 | Introduction to Statistical Signal Processing | https://explorecourses.stanford.edu/search?q=EE 278 | Review of basic probability and random variables. Random vectors and processes; convergence and limit theorems; IID, independent increment, Markov, and Gaussian random processes; stationary random processes; autocorrelation and power spectral density; mean square error estimation, detection, and linear estimation. Formerly EE 278B. Prerequisites: EE178 and linear systems and Fourier transforms at the level of EE102A,B or EE261.
EE 279 | Introduction to Digital Communication | https://explorecourses.stanford.edu/search?q=EE 279 | Digital communication is a rather unique field in engineering in which theoretical ideas have had an extraordinary impact on the design of actual systems. The course provides a basic understanding of the analysis and design of digital communication systems, building on various ideas from probability theory, stochastic processes, linear algebra and Fourier analysis. Topics include: detection and probability of error for binary and M-ary signals (PAM, QAM, PSK), receiver design and sufficient statistics, controlling the spectrum and the Nyquist criterion, bandpass communication and up/down conversion, design trade-offs: rate, bandwidth, power and error probability, coding and decoding (block codes, convolutional coding and Viterbi decoding).  Prerequisites: 179 or 261, and 178 or 278
EE 282 | Computer Systems Architecture | https://explorecourses.stanford.edu/search?q=EE 282 | Course focuses on how to build modern computing systems, namely notebooks, smartphones, and data centers, covering primarily their hardware architecture and certain system software aspects. For each system class, we cover the system architecture, processor technology, advanced memory hierarchy and I/O organization, power and energy management, and reliability. We will also cover topics such as interactions with system software, virtualization, solid state storage, and security. The programming assignments allow students to explore performance/energy tradeoffs when using heterogeneous hardware resources on smartphone devices. Prerequisite: EE108B. Recommended: CS 140.
EE 284 | Introduction to Computer Networks | https://explorecourses.stanford.edu/search?q=EE 284 | Structure and components of computer networks; functions and services; packet switching; layered architectures; OSI reference model; physical layer; data link layer; error control; window flow control; media access control protocols used in local area networks (Ethernet, Token Ring, FDDI) and satellite networks; network layer (datagram service, virtual circuit service, routing, congestion control, Internet Protocol); transport layer (UDP, TCP); application layer.
EE 290A | Curricular Practical Training for Electrical Engineers | https://explorecourses.stanford.edu/search?q=EE 290A | For EE majors who need work experience as part of their program of study. Final report required. Prerequisites: for 290B, EE MS and PhD students who have received a Satisfactory ("S") grade in EE290A; for 290C, EE PhD degree candidacy and an "S" grade in EE 290B; for 290D, EE PhD degree candidacy, an "S" grade in EE 290C and instructor consent.
EE 290B | Curricular Practical Training for Electrical Engineers | https://explorecourses.stanford.edu/search?q=EE 290B | For EE majors who need work experience as part of their program of study. Final report required. Prerequisites: for 290B, EE MS and PhD students who have received a Satisfactory ("S") grade in EE290A; for 290C, EE PhD degree candidacy and an "S" grade in EE 290B; for 290D, EE PhD degree candidacy, an "S" grade in EE 290C and instructor consent.
EE 290C | Curricular Practical Training for Electrical Engineers | https://explorecourses.stanford.edu/search?q=EE 290C | For EE majors who need work experience as part of their program of study. Final report required. Prerequisites: for 290B, EE MS and PhD students who have received a Satisfactory ("S") grade in EE290A; for 290C, EE PhD degree candidacy and an "S" grade in EE 290B; for 290D, EE PhD degree candidacy, an "S" grade in EE 290C and instructor consent.
EE 290D | Curricular Practical Training for Electrical Engineers | https://explorecourses.stanford.edu/search?q=EE 290D | For EE majors who need work experience as part of their program of study. Final report required. Prerequisites: for 290B, EE MS and PhD students who have received a Satisfactory ("S") grade in EE290A; for 290C, EE PhD degree candidacy and an "S" grade in EE 290B; for 290D, EE PhD degree candidacy, an "S" grade in EE 290C and instructor consent.
EE 292B | Micro and Nanoscale Biosensing for Molecular Diagnostics | https://explorecourses.stanford.edu/search?q=EE 292B | The course covers state-of-the-art and emerging bio-sensors, biochips, microfluidics,  which will be studied in the context of molecular diagnostics. Students will briefly learn the relevant biology, biochemistry, and molecular biology pertinent to molecular diag-nostics.  Students will also become equipped with a thorough understanding of the interfaces between electronics, fluidics, and molecular biology. Topics will include microfluidics and mass transfer limits, electrode-electrolyte interfaces, electrochemical noise processes, biosensor system level characterization, determination of performance parameters such as throughput, detection limit, and cost, integration of sensor with microfluidics, and electronic readout circuitry architectures. Emphasis will be placed on in-depth quantitative design of biomolecular sensing platforms.
EE 292C | Chemical Vapor Deposition and Epitaxy for Integrated Circuits and Nanostructures | https://explorecourses.stanford.edu/search?q=EE 292C | Fundamental aspects of CVD are initially considered, first focusing on processes occurring in the gas phase and then on those occurring on the surface.  Qualitative understanding is emphasized, with minimal use of equations.  Adding energy both thermally and by using a plasma is discussed; atomic-layer deposition is briefly considered.  Examples of CVD equipment are examined.  The second portion of the tutorial examines layers deposited by CVD.  The focus is on group IV semiconductors ¿ especially epitaxial and heteroepitaxial deposition, in which the crystal structure of the depositing layer is related to that of the substrate.  Polycrystalline silicon and the IC interconnect system are then discussed.  Finally, the use of high-density plasmas for rapid gap filling is contrasted with alternative CVD dielectric deposition processes.
EE 292H | Engineering and Climate Change | https://explorecourses.stanford.edu/search?q=EE 292H | The purpose of this seminar series course is to help students and professionals develop the tools to apply the engineering mindset to problems that stem from climate change, in order to consider and evaluate possible stabilizing, remedial and adaptive approaches. This course is not a crash course on climate change or policy. Instead it will focus on learning about and discussing climate problems that seem most likely to benefit from the engineering mindset.  Each week Dr. Field and/or a guest speaker will lead a short warm-up discussion/activity and then deliver a talk in his/her area of expertise. It will wrap up with small-group and full-class discussions of related challenges/opportunities and possible engineering-oriented solutions. nClass members are asked to do some background reading before each class and to submit a question before each lecture.May be repeated for credit.
EE 292I | Insanely Great Products: How do they get built? | https://explorecourses.stanford.edu/search?q=EE 292I | Great products emerge from a sometimes conflict-laden process of collaboration between different functions within companies. This Seminar seeks to demystify this process via case-studies of successful products and companies. Engineering management and businesspeople will share their experiences in discussion with students. Previous companies profiled: Apple, Intel, Facebook, and Genentech -- to name a few. Previous guests include: Jon Rubinstein (NeXT, Apple, Palm), Diane Greene (VMware), and Ted Hoff (Intel). Pre-requisites: None
EE 292K | Intelligent Energy Projects | https://explorecourses.stanford.edu/search?q=EE 292K | Energy systems must have the intelligence to cope with rapid changes in energy supply, demand, distribution, and storage. This course is a project course focusing on a selected areas of intelligent energy systems: Demand Response, Optimal Power Flow and Locational Marginal Pricing, energy systems monitoring, control analysis of distribution systems, and associated system architecture. Prerequisites: Consent of instructor. Basic probability (EE 278), optimization (EE 364A), Matlab and C++ programming.  Experience with cvx a plus.
EE 292L | Nanomanufacturing | https://explorecourses.stanford.edu/search?q=EE 292L | Fundamentals of nanomanufacturing technology and applications. Topics include recent developments in process technology, lithography and patterning. Technology for FinFET transistors, NAND flash and 3D chips. Manufacturing of LEDs, thin film and crystalline solar cells. Flip classroom model is used supplementing classroom lectures with short videos. Guest speakers include distinguished engineers, entrepreneurs and venture capitalists actively engaged in nanomanufacturing. Prerequisite: background in device physics and process technology. Recommended: EE116, EE216, EE212
EE 292M | Parallel Processors Beyond Multi-Core Processing | https://explorecourses.stanford.edu/search?q=EE 292M | The current parallel computing research emphasizes multi-cores, but there are alterna-tive array processors with significant potential. This hands-on seminar focuses on SIMD (Single-Instruction, Multiple-Data) massively parallel processors, with weekly programming assignments. Topics: Flynn's Taxonomy, parallel architectures, the K-SIMD simulator, principles of SIMD programming, parallel sorting with sorting networks, string comparison with dynamic programming (edit distance, Smith-Waterman), arbitrary-precision operations with fixed-point numbers, reductions, vector and matrix multiplication, asynchronous algorithms on SIMD ("SIMD Phase Programming Model"), Mandelbrot set, analysis of parallel performance.  Prerequisites: EE108B and EE282.  Recommended: CS140.
EE 292P | Power Management Integrated Circuits | https://explorecourses.stanford.edu/search?q=EE 292P | Analysis of power management architectures and circuits in CMOS VLSI technology. Circuit-level design of integrated linear voltage regulators and highly-efficient switching power converters. Overview of significant topics: high-frequency converters, switched capacitor converters, battery chargers, digital control and layout of power converters. Prerequisite: EE214A or equivalent
EE 292T | SmartGrids and Advanced Power Systems Seminar (CEE 272T) | https://explorecourses.stanford.edu/search?q=EE 292T | A series of seminar and lectures focused on power engineering. Renowned researchers from universities and national labs will deliver bi-weekly seminars on the state of the art of power system engineering. Seminar topics may include: power system analysis and simulation, control and stability, new market mechanisms, computation challenges and solutions, detection and estimation, and the role of communications in the grid. The instructors will cover relevant background materials in the in-between weeks. The seminars are planned to continue throughout the next academic year, so the course may be repeated for credit.
EE 292X | Stanford's Little Box Challenge (EE 192X) | https://explorecourses.stanford.edu/search?q=EE 292X | IGoogle has announced the "Littlebox" competition to build the smallest possible 2kW inverter . This challenge provides an ideal opportunity to provide a number of exciting educational and design opportunities for engineering students.  The first few class meetings will be lecture format describing the competition and the work that has been done to date: Mechanical modeling, Matlab model, Buck and unfolding bridge designs.  In parallel,  students will be matched in teams for  studies that need to be done: DC-Link implementation, QR-topology, Multi-level Approaches, Control implementation, GaN implementation, SiC investigations, Capacitor studies, Inductor studies, Thermal Design, EMI study, Etc.  The problems span many topics: embedded and control systems design, power electronics, digital and analog design, programming in C & FPGAs, mechanical and thermal design and testing. We welcome motivated undergraduate and graduate students with a variety of backgrounds.
EE 293A | Solar Cells, Fuel Cells, and Batteries: Materials for the Energy Solution (ENERGY 293A, MATSCI 156, MATSCI 256) | https://explorecourses.stanford.edu/search?q=EE 293A | Operating principles and applications of emerging technological solutions to the energy demands of the world. The scale of global energy usage and requirements for possible solutions. Basic physics and chemistry of solar cells, fuel cells, and batteries. Performance issues, including economics, from the ideal device to the installed system. The promise of materials research for providing next generation solutions. Undergraduates register in 156 for 4 units; graduates register in 256 for 3 units.
EE 293B | Fundamentals of Energy Processes (ENERGY 293B) | https://explorecourses.stanford.edu/search?q=EE 293B | For seniors and graduate students. Covers scientific and engineering fundamentals of renewable energy processes involving heat.  Thermodynamics, heat engines, solar thermal, geothermal, biomass. Recommended: MATH 41, 43; PHYSICS 41, 43, 45
EE 300 | Master's Thesis and Thesis Research | https://explorecourses.stanford.edu/search?q=EE 300 | Independent work under the direction of a department faculty. Written thesis required for final letter grade. The continuing grade 'N' is given in quarters prior to thesis submission. See 390 if a letter grade is not appropriate. Course may be repeated for credit.
EE 303 | Autonomous Implantable Systems | https://explorecourses.stanford.edu/search?q=EE 303 | Integrating electronics with sensing, stimulation, and locomotion capabilities into the body will allow us to restore or enhance physiological functions.  In order to be able to insert these electronics into the body, energy source is a major obstacle.  This course focuses on the analysis and design of wirelessly powered catheter-deliverable electronics.  Emphases will be on the interaction between human and electromagnetic fields in order to transfer power to the embedded electronics via electromagnetic fields, power harvesting circuitry, electrical-tissue interface, and sensing and actuating frontend designs.  Prerequisites: EE 252 or equivalent.
EE 304 | Neuromorphics: Brains in Silicon (BIOE 313) | https://explorecourses.stanford.edu/search?q=EE 304 | This course introduces neuromorphic system design, starting at the device level, going through the circuit level, and ending up at the system level. At the device level, it covers MOS transistor operation in the subthreshold region. At the circuit level, it covers silicon neuron and synapse design. And at the system level, it covers to reroutable interconnection. At the end of the course, you will understand how various neuromorphic architectures¿ area and energy use scale with network size.  Prerequisites: EE114 & EE108A.
EE 308 | Advanced Circuit Techniques | https://explorecourses.stanford.edu/search?q=EE 308 | Design of advanced analog circuits at the system level, including switching power converters, amplitude-stabilized and frequency-stabilized oscillators, voltage references and regulators, power amplifiers and buffers, sample-and-hold circuits, and application-specific op-amp compensation. Approaches for finding creative design solutions to problems with difficult specifications and hard requirements. Emphasis on feedback circuit techniques, design-oriented thinking, and hands-on experience with modern analog building blocks.  Several designs will be built and evaluated, along with associated laboratory projects.
EE 309 | Semiconductor Memory Devices and Technology | https://explorecourses.stanford.edu/search?q=EE 309 | The functionality and performance of ULSI systems are increasingly dependent upon the characteristics of the memory subsystem. This course introduces the student to various memory devices: SRAM, DRAM, NVRAM (non-volatile memory). This course will cover various aspects of semiconductor memories, including basic operation principles, device design considerations, device scaling, device fabrication, memory array addressing and readout circuits. Various cell structures (e.g. 1T-1C, 6T, 4T, 1T-1R, 0T-1R, 1S-1R, floating gate FLASH, SONOS, NROM), and memory organization (open bit-line, folded bit-line, NAND, NOR, cross-point etc.). This course will include a survey of new memory concepts (e.g. magnetic tunnel junction memory (MRAM, SST-RAM), ferroelectric memory (FRAM), phase change memory (PCM), metal oxide resistive switching memory (RRAM), nanoconductive bridge memory (CBRAM)).  Offered Alternate years.  Pre-requisite: EE 216. Preferred: EE 316.
EE 310 | Integrated Circuits Technology and Design Seminar | https://explorecourses.stanford.edu/search?q=EE 310 | State-of-the-art micro- and nanoelectronics, nanotechnology, advanced materials, and nanoscience for device applications. Prerequisites: EE216, EE316.May be repeated for credit
EE 311 | Advanced Integrated Circuits Technology | https://explorecourses.stanford.edu/search?q=EE 311 | What are the practical and fundamental limits to the evolution of the technology of modern MOS devices and interconnects? How are modern devices and circuits fabricated and what future changes are likely? Advanced techniques and models of MOS devices and back-end (interconnect and contact) processing. What are future device structures and materials to maintain progress in integrated electronics? MOS front-end and back-end process integration. Prerequisites: EE212, EE216 or equivalent.
EE 314A | RF Integrated Circuit Design | https://explorecourses.stanford.edu/search?q=EE 314A | Design of RF integrated circuits for communications systems, primarily in CMOS. Topics: the design of matching networks and low-noise amplifiers at RF, mixers, modulators, and demodulators; review of classical control concepts necessary for oscillator design including PLLs and PLL-based frequency synthesizers. Design of low phase noise oscillators. Design of high-efficiency (e.g., class E, F) RF power amplifiers, coupling networks. Behavior and modeling of passive and active components at RF. Narrowband and broadband amplifiers; noise and distortion measures and mitigation methods. Overview of transceiver architectures. Prerequisite: EE214B.
EE 314B | Advanced RF Integrated Circuit Design | https://explorecourses.stanford.edu/search?q=EE 314B | Analysis and design of modern communication circuits and systems with emphasize on design techniques for high-frequency (into mm-wave) ICs. Topics include MOS, bipolar, and BiCMOS high-frequency integrated circuits, including power amplifiers, extremely wideband amplifiers, advanced oscillators, phase-locked loops and frequency-translation circuits.  Design techniques for mm-wave silicon ICs (on-chip low-loss transmissions lines, unilateralization techniques, in-tegrated antennas, harmonic generation, etc) will also be studied.  Prerequisite: EE314A or equivalent course in RF or microwave.
EE 315A | VLSI Signal Conditioning Circuits | https://explorecourses.stanford.edu/search?q=EE 315A | Design and analysis of integrated circuits for active filters, precision gain stages, and sensor interfaces in CMOS VLSI technology. Operational transconductance amplifiers; sampled-data and continuous-time analog filters. Analysis of noise and amplifier imperfections; compensation techniques such as correlated double sampling. Sensor interfaces for micro-electromechanical and biomedical applications. Layout techniques for analog integrated circuits. Prerequisites: EE214B.
EE 315B | VLSI Data Conversion Circuits | https://explorecourses.stanford.edu/search?q=EE 315B | Architectural and circuit level design and analysis of integrated analog-to-digital and digital-to-analog interfaces in CMOS VLSI technology. Fundamental circuit elements such as sampling circuits and voltage comparators. Circuits and architectures for Nyquist-rate and oversampling analog-to-digital and digital-to-analog conversion; digital decimation and interpolation filters. Examples of calibration and digital enhancement techniques. Prerequisite: EE 214B. Recommended: EE 315A.
EE 316 | Advanced VLSI Devices | https://explorecourses.stanford.edu/search?q=EE 316 | In modern VLSI technologies, device electrical characteristics are sensitive to structural details and therefore to fabrication techniques. How are advanced VLSI devices designed and what future changes are likely? What are the implications for device electrical performance caused by fabrication techniques? Physical models for nanometer scale structures, control of electrical characteristics (threshold voltage, short channel effects, ballistic transport) in small structures, and alternative device structures for VLSI. Prerequisites: 212 and 216, or equivalent.
EE 319 | Advanced Nanoelectronic Devices and Technology | https://explorecourses.stanford.edu/search?q=EE 319 | Recent advances in materials science, device physics and structures, and processing technology, to extend VLS1 device scaling towards atomistic and quantum-mechanical physics boundaries. Topics include: mobility-enhancement techniques; nanomaterial structures including tube, wire, beam, and crystal; conducting polymer; 3D FET; gate-wraparound FET; nonvolatile memory phenomena and devices; self-assembly; flash annealing; plasma doping; and nano pattering. Prerequisites: 216, 316.
EE 320 | Nanoelectronics | https://explorecourses.stanford.edu/search?q=EE 320 | This course covers the device physics and operation principles of nanoelectric devices, with a focus on devices for energy-efficient computation. Topics covered include devices based on new nanomaterials such as carbon nanotubes, semiconductor nanowires, and 2D layered materials such as graphene; non-FET based devices such as nanoelectromechanical (NEM) relay, single electron transistors (SET) and resonant tunneling diodes (RTD); as well as FET-based devices such as tunnel FET.  Devices targeted for both logic and memory applications are covered. Prerequisites: Undergraduate device physics, EE222, EE216, EE316. Recommended courses: EE223, EE228, EE311.
EE 323 | Energy in Electronics | https://explorecourses.stanford.edu/search?q=EE 323 | This course examines energy in modern nanoelectronics, from fundamentals to system-level issues.  Topics include fundamental aspects like energy transfer through electrons and phonons, ballistic limits of current and heat, meso- to macroscale mobility and thermal conductivity. The course also nexamines applied topics including power dissipation in nanoscale devices (FinFETs, phase-change memory, nanowires, graphene, nanotubes), circuit leakage, thermal breakdown, thermometry, heat sinks, and thermal challenges in densely integrated systems.
EE 327 | Properties of Semiconductor Materials | https://explorecourses.stanford.edu/search?q=EE 327 | Modern semiconductor devices and integrated circuits are based on unique energy band, carrier transport, and optical properties of semiconductor materials. How to choose these properties for operation of semiconductor devices. Emphasis is on quantum mechanical foundations of the properties of solids, energy bandgap engineering, semi-classical transport theory, semi-conductor statistics, carrier scattering, electro-magneto transport effects, high field ballistic transport, Boltzmann transport equation, quantum mechanical transitions, optical absorption, and radiative and non-radiative recombination that are the foundations of modern transistors and optoelectronic devices. Prerequisites: EE216 or equivalent.
EE 328 | Physics of Advanced Semiconductor Devices | https://explorecourses.stanford.edu/search?q=EE 328 | Principles governing the operation of modern semiconductor devices. Assumptions and approximations commonly made in analyzing devices. Emphasis is on the application of semiconductor physics to the development of advanced semiconductor devices such as heterojunctions, HJ-bipolar transistors, HJ-FETs, nanostructures, tunneling, single electron transistor and photonic devices. Use of SENTARUS, a 2-D Poisson solver, for simulation of ultra-small devices. Examples related to state-of-the-art devices and current device research. Prerequisite: 216. Recommended: 316.
EE 329 | The Electronic Structure of Surfaces and Interfaces (PHOTON 329) | https://explorecourses.stanford.edu/search?q=EE 329 | Physical concepts and phenomena for surface science techniques probing the electronic and chemical structure of surfaces, interfaces and nanomaterials. Microscopic and atomic models of microstructures; applications including semiconductor device technology, catalysis and energy. Physical processes of UV and X-ray photoemission spectroscopy, Auger electron spectroscopy, surface EXAFS, low energy electron diffraction, electron/photon stimulated ion desorption, scanning tunneling spectroscopy, ion scattering, energy loss spectroscopy and related imaging methods; and experimental aspects of these surface science techniques. Prerequisites: PHYSICS 70 and MATSCI 199/209, or consent of instructor.
EE 331 | Biophotonics: Light in Medicine and Biology | https://explorecourses.stanford.edu/search?q=EE 331 | Current topics and trends in the use of light in medicine and for advanced microscopy. Course begins with a review of relevant optical principles (basic physics required). Key topics include: light-tissue interactions; sensing and spectroscopy; contrast-enhanced imaging; super-resolution and label-free microscopy; medical applications of light for diagnostics, in-vivo imaging, and therapy; nanophotonics and array technologies. Open to non-majors; programming experience (Matlab and/or C) required.
EE 332 | Laser Dynamics | https://explorecourses.stanford.edu/search?q=EE 332 | Dynamic and transient effects in lasers including spiking, Q-switching, mode locking, frequency modulation, frequency and spatial mode competition, linear and nonlinear pulse propagation, pulse shaping.  Formerly EE 232. Prerequisite: 236C.
EE 334 | Micro and Nano Optical Device Design | https://explorecourses.stanford.edu/search?q=EE 334 | Lecture and project course on design and analysis of optical devices with emphasis on opportunities and challenges created by scaling to the micrometer and nanometer ranges.  The emphasis is on fundamentals, combined with some coverage of practical implementations.  Prerequisite: EE 242 or equivalent
EE 336 | Nanophotonics (MATSCI 346) | https://explorecourses.stanford.edu/search?q=EE 336 | Recent developments in micro- and nanophotonic materials and devices. Basic concepts of photonic crystals. Integrated photonic circuits. Photonic crystal fibers. Superprism effects. Optical properties of metallic nanostructures. Sub-wavelength phenomena and plasmonic excitations. Meta-materials. Prerequisite: Electromagnetic theory at the level of 242.
EE 340 | Optical Micro- and Nano-Cavities | https://explorecourses.stanford.edu/search?q=EE 340 | Optical micro- and nano-cavities and their device applications. Types of optical cavities (microdisks, microspheres, photonic crystal cavities, plasmonic cavities), and their electromagnetic properties, design, and fabrication techniques. Cavity quantum electrodynamics: strong and weak-coupling regime, Purcell factor, spontaneous emission control. Applications of optical cavities, including low-threshold lasers, optical modulators, quantum information processing devices, and bio-chemical sensors. Prerequisites: Advanced undergraduate or basic graduate level knowledge of electromagnetics, quantum.
EE 345 | Optical Fiber Communication Laboratory | https://explorecourses.stanford.edu/search?q=EE 345 | Experimental techniques in optical fiber communications and networking. Experimental investigation of key optical communications components including fibers, lasers, modulators, photodiodes, optical amplifiers, and WDM multiplexers and demultiplexers. Fundamental optical communications systems techniques: eye diagrams, BER measurements, experimental evaluation of nonlinearties. Prerequisites: Undergraduate physics and optics.
EE 346 | Introduction to Nonlinear Optics | https://explorecourses.stanford.edu/search?q=EE 346 | Wave propagation in anisotropic, nonlinear, and time-varying media. Microscopic and macroscopic description of electric-dipole susceptibilities. Free and forced waves; phase matching; slowly varying envelope approximation; dispersion, diffraction, space-time analogy. Harmonic generation; frequency conversion; parametric amplification and oscillation; electro-optic light modulation. Raman and Brillouin scattering; nonlinear processes in optical fibers.  Prerequisites: 242, 236C.
EE 348 | Advanced Optical Fiber Communications | https://explorecourses.stanford.edu/search?q=EE 348 | Optical amplifiers: gain, saturation, noise. Semiconductor amplifiers. Erbium-doped fiber amplifiers. System applications: preamplified receiver performance, amplifier chains. Raman amplifiers, lumped vs. distributed amplification. Group-velocity dispersion management: dispersion-compensating fibers, filters, gratings. Interaction of dispersion and nonlinearity, dispersion maps. Multichannel systems. Wavelength-division multiplexing components: filters, multiplexers. WDM systems, crosstalk. Time, subcarrier, code and polarization-division multiplexing. Comparison of modulation techniques: differential phase-shift keying, phase-shift keying, quadrature-amplitude modulation. Comparison of detection techniques: noncoherent, differentially coherent, coherent. Prerequisite: 247.
EE 349 | Advanced Topics in Nano-Optics and Plasmonics | https://explorecourses.stanford.edu/search?q=EE 349 | Electromagnetic phenomena at the nanoscale.  Dipolar interactions between emitters and nanostructures, weak and strong coupling, surface plasmon polaritons and localized plasmons, electromagnetic field enhancements, and near-field coupling between metallic nanostructures.  Numerical tools will be taught and used to simulate nano-optical phenomena.
EE 355 | Imaging Radar and Applications (GEOPHYS 265) | https://explorecourses.stanford.edu/search?q=EE 355 | Radar remote sensing, radar image characteristics, viewing geometry, range coding, synthetic aperture processing, correlation, range migration, range/Doppler algorithms, wave domain algorithms, polar algorithm, polarimetric processing, interferometric measurements. Applications: surfafe deformation, polarimetry and target discrimination, topographic mapping surface displacements, velocities of ice fields. Prerequisites: EE261. Recommended: EE254, EE278, EE279.
EE 356 | Resonant Power Converters and Magnetic Design | https://explorecourses.stanford.edu/search?q=EE 356 | In this course, we will study the design of Resonant power converters which are capable of operating at higher frequencies than their hard-switch counterparts.  Resonant converters are found in high performance applications where high control bandwidth and high power density are required. We will also explore practical design issues and trade off in selecting converter topologies in high performance application. We will discuss the design and modeling of high frequency magnetic elements, gate drives and resonant snubbers.
EE 359 | Wireless Communications | https://explorecourses.stanford.edu/search?q=EE 359 | This course will cover advanced topics in wireless communications for voice, data, and multimedia. Topics include: an overview of current and future wireless systems; wireless channel models including path loss, shadowing, and statistical multipath channel models; fundamental capacity limits of wireless channels; digital modulation and its performance in fading and intersymbol interference; techniques to combat fading including adaptive modulation, diversity, and multiple antenna systems (MIMO); techniques to combat intersymbol interference including equalization,  multicarrier modulation (OFDM), and spread spectrum; and an overview of wireless network design. Prerequisite: 279 or instructor consent.
EE 360 | Multiuser Wireless Systems and Networks | https://explorecourses.stanford.edu/search?q=EE 360 | Design, analysis, and fundamental limits. Topics include multiuser channel capacity, multiple and random access techniques, interference mitigation, cellular system design, ad hoc wireless network design, sensor networks, "green" wireless networks, cognitive radios, and cross-layer design. Prerequisite: EE 359.
EE 361 | Principles of Cooperation in Wireless Networks | https://explorecourses.stanford.edu/search?q=EE 361 | Information theory forms the basis for the design of all modern day communication systems. The original theory was primarily point-to-point, studying how fast information can flow across an isolated noisy communication channel. Until recently, there has been only limited success in extending the theory to a network of interacting nodes. Progress has been made in the past decade driven by engineering interest in wireless networks. The course provides a unified overview of this recent progress made in information theory of wireless networks. Starting with an overview of the capacity of fading and multiple-antenna wireless channels, we aim to answer questions such as: What is the optimal way for users to cooperate and exchange information in a wireless network? How much benefit can optimal cooperation provide over traditional communication architectures? How can cooperation help to deal with interference between multiple wireless transmissions?  Prerequisites: 376A
EE 364A | Convex Optimization I (CME 364A, CS 334A) | https://explorecourses.stanford.edu/search?q=EE 364A | Convex sets, functions, and optimization problems. The basics of convex analysis and theory of convex programming: optimality conditions, duality theory, theorems of alternative, and applications. Least-squares, linear and quadratic programs, semidefinite programming, and geometric programming. Numerical algorithms for smooth and equality constrained problems; interior-point methods for inequality constrained problems. Applications to signal processing, communications, control, analog and digital circuit design, computational geometry, statistics, machine learning, and mechanical engineering. Prerequisite: linear algebra such as EE263, basic probability.
EE 364B | Convex Optimization II (CME 364B) | https://explorecourses.stanford.edu/search?q=EE 364B | Continuation of 364A. Subgradient, cutting-plane, and ellipsoid methods. Decentralized convex optimization via primal and dual decomposition. Monotone operators and proximal methods; alternating direction method of multipliers.  Exploiting problem structure in implementation. Convex relaxations of hard problems. Global optimization via branch and bound. Robust and stochastic optimization. Applications in areas such as control, circuit design, signal processing, and communications. Course requirements include project. Prerequisite: 364A.
EE 367 | Computational Imaging and Display (CS 448I) | https://explorecourses.stanford.edu/search?q=EE 367 | Spawned by rapid advances in optical fabrication and digital processing power, a new generation of imaging technology is emerging: computational cameras at the convergence of applied mathematics, optics, and high-performance computing. Similar trends are observed for modern displays pushing the boundaries of resolution, contrast, 3D capabilities, and immersive experiences through the co-design of optics, electronics, and computation. This course serves as an introduction to the emerging field of computational imaging and displays. Students will learn to master bits and photons.
EE 368 | Digital Image Processing (CS 232) | https://explorecourses.stanford.edu/search?q=EE 368 | Image sampling and quantization color, point operations, segmentation, morphological image processing, linear image filtering and correlation, image transforms, eigenimages, multiresolution image processing, noise reduction and restoration, feature extraction and recognition tasks, image registration. Emphasis is on the general principles of image processing. Students learn to apply material by implementing and investigating image processing algorithms in Matlab and optionally on Android mobile devices. Term project. Recommended: EE261, EE278.
EE 369A | Medical Imaging Systems I | https://explorecourses.stanford.edu/search?q=EE 369A | Imaging internal structures within the body using high-energy radiation studied from a systems viewpoint. Modalities covered: x-ray, computed tomography, and nuclear medicine. Analysis of existing and proposed systems in terms of resolution, frequency response, detection sensitivity, noise, and potential for improved diagnosis. Prerequisite: EE 261
EE 369B | Medical Imaging Systems II | https://explorecourses.stanford.edu/search?q=EE 369B | Imaging internal structures within the body using non-ionizing radiation studied from a systems viewpoint. Modalities include ultrasound and magnetic resonance. Analysis of ultrasonic systems including diffraction and noise. Analysis of magnetic resonance systems including physics, Fourier properties of image formation, and noise. Prerequisite: EE 261
EE 369C | Medical Image Reconstruction | https://explorecourses.stanford.edu/search?q=EE 369C | Reconstruction problems from medical imaging, including magnetic resonance imaging (MRI), computed tomography (CT), and positron emission tomography (PET).  Problems include reconstruction from non-uniform frequency domain data, automatic deblurring, phase unwrapping, reconstruction from incomplete data, and reconstruction from projections. Prerequisite: 369B.
EE 371 | Advanced VLSI Circuit Design | https://explorecourses.stanford.edu/search?q=EE 371 | Design of high-performance digital systems, the things that cause them to fail, and how to avoid these problems. Topics will focus on current issues including: wiring resistance and how to deal with it, power and Gnd noise and regulation, clock (or asynchronous) system design and how to minimize clocking overhead, high-speed I/O design, energy minimization including leakage control, and structuring your Verilog code to result in high-performance, low energy systems. Extensive use of modern CAD tools. Prerequisites: 271 and 313, or consent of instructor.
EE 373A | Adaptive Signal Processing | https://explorecourses.stanford.edu/search?q=EE 373A | Learning algorithms for adaptive digital filters. Self-optimization. Wiener filter theory. Quadratic performance functions, their eigenvectors and eigenvalues. Speed of convergence. Asymptotic performance versus convergence rate. Applications of adaptive filters to statistical prediction, process modeling, adaptive noise canceling, adaptive antenna arrays, adaptive inverse control, and equalization and echo canceling in modems. Artificial neural networks. Cognitive memory/human and machine. Natural and artificial synapses. Hebbian learning. The Hebbian-LMS algorithm. Theoretical and experimental research projects in adaptive filter theory, communications, audio systems, and neural networks. Biomedical research projects, supervised jointly by EE and Medical School faculty. Recommended: EE263, EE264, EE278.
EE 373B | Adaptive Neural Networks | https://explorecourses.stanford.edu/search?q=EE 373B | Artificial neural networks. Feedforward layered networks. Backpropagation algorithm. Recurrent neural networks. Autoassociative neural networks. Principal component analysis. Clustering algorithms. Applications of neural networks to pattern recognition, speech recognition, adaptive control, nonlinear adaptive filtering, and cognitive memory. Modeling human memory. Design of human-like memory for computers, with applications to face recognition, image processing, and complex control. Continuation of research projects begun in 373A. Prerequisite: 373A.
EE 376A | Information Theory (STATS 376A) | https://explorecourses.stanford.edu/search?q=EE 376A | The fundamental ideas of information theory. Entropy and intrinsic randomness. Data compression to the entropy limit. Huffman coding. Arithmetic coding. Channel capacity, the communication limit. Gaussian channels. Kolmogorov complexity. Asymptotic equipartition property. Information theory and Kelly gambling. Applications to communication and data compression. Prerequisite: EE178 or STATS 116, or equivalent.
EE 376B | Network Information Theory (STATS 376B) | https://explorecourses.stanford.edu/search?q=EE 376B | Network information theory deals with the fundamental limits on information flow in networks and the optimal coding schemes that achieve these limits. It aims to extend Shannon's point-to-point information theory and the Ford-Fulkerson max-flow min-cut theorem to networks with multiple sources and destinations. The course presents the basic results and tools in the field in a simple and unified manner. Topics covered include: multiple access channels, broadcast channels, interference channels, channels with state, distributed source coding, multiple description coding, network coding, relay channels, interactive communication, and noisy network coding. Prerequisites: EE376A.
EE 376C | Universal Schemes in Information Theory | https://explorecourses.stanford.edu/search?q=EE 376C | Universal schemes for lossless and lossy compression, channel coding and decoding, prediction, denoising, and filtering. Characterization of performance limitations in the stochastic settting: entropy rate, rate-distortion function, channel capacity, Bayes envelope for prediction, denoising, and filtering. Lempel-Ziv lossless compression, and Lempel-Ziv based schemes for lossy compression, channel coding, prediction, and filtering. Discrete universal denoising. Compression-based approach to denoising. The compound decision problem. Prerequisites: EE278, EE376A, EE376B.
EE 377 | Information Theory and Statistics (STATS 311) | https://explorecourses.stanford.edu/search?q=EE 377 | Information theoretic techniques in probability and statistics. Fano, Assouad,nand Le Cam methods for optimality guarantees in estimation.  Large deviationsnand concentration inequalities (Sanov's theorem, hypothesis testing, thenentropy method, concentration of measure). Approximation of (Bayes) optimalnprocedures, surrogate risks, f-divergences. Penalized estimators and minimumndescription length. Online game playing, gambling, no-regret learning. Prerequisites: EE 376A (or equivalent) or STATS 300A.
EE 378A | Statistical Signal Processing | https://explorecourses.stanford.edu/search?q=EE 378A | Random signals in electrical engineering. Discrete-time random processes: stationarity and ergodicity, covariance sequences, power spectral density, parametric models for stationary processes. Fundamentals of linear estimation: minimum mean squared error estimation, optimum linear estimation, orthogonality principle, the Wold decomposition. Causal linear estimation of stationary processes: the causal Wiener filter, Kalman filtering. Parameter estimation: criteria of goodness of estimators, Fisher information, Cramer-Rao inequality, Chapman-Robbins inequality, maximum likelihood estimation, method of moments, consistency, efficiency. ARMA parameter estimation: Yule-Walker equations, Levinson-Durbin algorithm, least squares estimation, moving average parameter estimation, modified Yule-Walker method for model order selection. Spectrum estimation: sample covariances, covariance estimation, Bartlett formula, periodogram, periodogram averaging, windowed periodograms. Prerequisites: EE 278
EE 378B | Inference, Estimation, and Information Processing | https://explorecourses.stanford.edu/search?q=EE 378B | Techniques and models for signal, data and information processing, with emphasis on incomplete data, non-ordered index sets and robust low-complexity methods. Linear models; regularization and shrinkage; dimensionality reduction; streaming algorithms; sketching; clustering, search in high dimension; low-rank models; principal component analysis.nnApplications include: positioning from pairwise distances; distributed sensing; measurement/traffic monitoring in networks; finding communities/clusters in networks; recommendation systems; inverse problems.	Prerequisites: EE278 and EE263 or equivalent. Recommended but not required: EE378A
EE 379 | Digital Communication | https://explorecourses.stanford.edu/search?q=EE 379 | Modulation: linear, differential and orthogonal methods; signal spaces; power spectra; bandwidth requirements. Detection: maximum likelihood and maximum a posteriori probability principles; sufficient statistics; correlation and matched-filter receivers; coherent, differentially coherent and noncoherent methods; error probabilities; comparison of modulation and detection methods. Intersymbol interference: single-carrier channel model; Nyquist requirement; whitened matched filter; maximum likelihood sequence detection; Viterbi algorithm; linear equalization; decision-feedback equalization. Multi-carrier modulation: orthogonal frequency-division multiplexing; capacity of parallel Gaussian channels; comparison of single- and multi-carrier techniques.  Prerequisite: EE102B, EE278
EE 380 | Colloquium on Computer Systems | https://explorecourses.stanford.edu/search?q=EE 380 | Live presentations of current research in the design, implementation, analysis, and applications of computer systems. Topics range over a wide range and are different every quarter. Topics may include fundamental science, mathematics, cryptography, device physics, integrated circuits, computer architecture, programming, programming languages, optimization, applications, simulation, graphics, social implications, venture capital, patent and copyright law, networks, computer security, and other topics of related to computer systems. May be repeated for credit.
EE 382C | Interconnection Networks | https://explorecourses.stanford.edu/search?q=EE 382C | The architecture and design of interconnection networks used to communicate from processor to memory, from processor to processor, and in switches and routers. Topics: network topology, routing methods, flow control, router microarchitecture, and performance analysis. Enrollment limited to 30. Prerequisite: 282.
EE 382E | Advanced Multi-Core Systems (CS 316) | https://explorecourses.stanford.edu/search?q=EE 382E | In-depth coverage of the architectural techniques used in modern, multi-core chips for mobile and server systems. Advanced processor design techniques (superscalar cores, VLIW cores, multi-threaded cores, energy-efficient cores), cache coherence, memory consistency, vector processors, graphics processors, heterogeneous processors, and hardware support for security and parallel programming. Students will become familiar with complex trade-offs between performance-power-complexity and hardware-software interactions. A central part of CS316 is a project on an open research question on multi-core technologies. Prerequisites: EE 108B. Recommended: CS 149, EE 282.
EE 384A | Internet Routing Protocols and Standards | https://explorecourses.stanford.edu/search?q=EE 384A | Local area networks addressing and switching; IEEE 802.1 bridging protocols (transparent bridging, virtual LANs). Internet routing protocols:  interior gateways (RIP, OSPF) and exterior gateways (BGP); multicast routing; multiprotocol label switching (MPLS). Routing in mobile networks: Mobile IP, Mobile Ad Hoc Networks (MANET), Wireless Mesh Networks. Prerequisite: EE 284 or CS 144.
EE 384B | Multimedia Communication over the Internet | https://explorecourses.stanford.edu/search?q=EE 384B | Applications and requirements. Traffic generation and characterization: voice encoding (G.711, G.729, G.723); image and video compression (JPEG, H.261, MPEG-2, H.263, H.264), TCP data traffic. Quality impairments and measures. Networking technologies: LAN technologies; home broadband services (ADSL, cable modems, PONs); and wireless LANs (802.11). Network protocols for multimedia applications: resource reservation (ST2+, RSVP); differentiated services (DiffServ); and real-time transport protocol (RTP, RTCP). Audio-video-data conferencing standards: Internet architecture (SDP, SAP, SIP); ITU recommendations (H.320, H.323 and T.120); and real-time streaming protocol (RTSP). Emphasis will be placed on advances in network infrastructure and new services (VoIP, IPTV, Peer-to-peer communications, etc.) Prerequisite: 284 or CS 144. Recommended: 384A.
EE 384C | Wireless Local and Wide Area Networks | https://explorecourses.stanford.edu/search?q=EE 384C | Characteristics of wireless communication: multipath, noise, and interference. Communications techniques: spread-spectrum, CDMA, and OFDM. IEEE 802.11 physical layer specifications: FHSS, DSSS, IEEE 802.11b (CCK), and 802.11a/g (OFDM). IEEE 802.11 media access control protocols: carrier sense multiple access with collision avoidance (CSMA/CA), point coordination function (PCF), IEEE802.11e for differentiated services. IEEE 802.11 network architecture: ad hoc and infrastructure modes, access point functionality. Management functions: synchronization, power management and association. IEEE 802.11s Mesh Networks. IEEE 802.16 (WiMAX) network architecture and protocols: Physical Layer (OFDMA) and Media Access Control Layer. Current research papers in the open literature. Prerequisite: EE 284 or CS 244A.
EE 384M | Network Science | https://explorecourses.stanford.edu/search?q=EE 384M | Modern large-scale networks consist of (i) Information Networks, such as the Web and Social Networks, and (ii) Data Centers, which are networks interconnecting computing and storage elements for servicing the users of an Information Network.  This course is concerned with the mathematical models and the algorithms used in Information Networks and Data Centers. Prerequisite: EE178 or CS365.
EE 384S | Performance Engineering of Computer Systems & Networks | https://explorecourses.stanford.edu/search?q=EE 384S | Modeling and control methodologies for high-performance network engineering, including: Markov chains and stochastic modeling, queueing networks and congestion management, dynamic programming and task/processor scheduling, network dimensioning and optimization, and simulation methods. Applications for design of high-performance architectures for wireline/wireless networks and the Internet, including: traffic modeling, admission and congestion control, quality of service support, power control in wireless networks, packet scheduling in switches, video streaming over wireless links, and virus/worm propagation dynamics and countermeasures. Enrollment limited to 30. Prerequisites: basic networking technologies and probability.
EE 384X | Packet Switch Architectures | https://explorecourses.stanford.edu/search?q=EE 384X | The theory and practice of designing packet switches, such as Internet routers, and Ethernet switches. Introduction: evolution of switches and routers. Output queued switches: motivation and methods for providing bandwidth and delay guarantees. Switching: output queueing, parallelism in switches, distributed shared memory switches, input-queued switches, combined input-output queued switches, how to make fast packet buffers, buffered crossbar switches. Scheduling input queued crossbars: connections with bipartite graph matching, algorithms for 100% throughput, practical algorithms and heuristics. Looking forward: Architectures and switches for data center networks. Prerequisites: EE284 or CS 244A. Recommended: EE 178 or EE 278 or STAT 116.
EE 385A | Robust and Testable Systems Seminar | https://explorecourses.stanford.edu/search?q=EE 385A | Student/faculty discussions of research problems in the design of reliable digital systems. Areas: fault-tolerant systems, design for testability, production testing, and system reliability. Emphasis is on student presentations and Ph.D. thesis research. May be repeated for credit. Prerequisite: consent of instructor.
EE 386 | Robust System Design | https://explorecourses.stanford.edu/search?q=EE 386 | Causes of system malfunctions; techniques for building robust systems that avoid or are resilient to such malfunctions through built-in error detection and correction, prediction, self-test, self-recovery, and self-repair; case studies and new research problems. Prerequisites: 108A,B, 282.
EE 387 | Algebraic Error Control Codes | https://explorecourses.stanford.edu/search?q=EE 387 | Theory and implementation of algebraic codes for detection and correction of random and burst errors. Introduction to finite fields. Linear block codes, cyclic codes, Hamming codes, BCH codes, Reed-Solomon codes. Decoding algorithms for BCH and Reed-Solomon codes. Prerequisites: elementary probability, linear algebra.
EE 390 | Special Studies or Projects in Electrical Engineering | https://explorecourses.stanford.edu/search?q=EE 390 | Independent work under the direction of a faculty member. Individual or team activities may involve lab experimentation, design of devices or systems, or directed reading. May be repeated for credit.
EE 391 | Special Studies and Reports in Electrical Engineering | https://explorecourses.stanford.edu/search?q=EE 391 | Independent work under the direction of a faculty member; written report or written examination required. Letter grade given on the basis of the report; if not appropriate, student should enroll in 390. May be repeated for credit.
EE 392AA | Advanced Digital Transmission | https://explorecourses.stanford.edu/search?q=EE 392AA | This course will develop insights into fundamentals and design of state-of-the-art physical-layer transmission systems. Specific attention will be paid to transmission in non-ideal environments with limited spectra and spatial interference. A theory of parallel channels is used to develop multi-carrier methods, vector coding, and generalized decision-feedback approaches. Students will be expected to design and analyze performance of systems operating close to fundamental limits for a variety of practical channels, wireline or wireless.  Prerequisites: EE379 or equivalent; understanding of probability, random processes, digital signal processing (including basic matrix and nmatlab skills).
EE 392E | VLSI Signal Processing | https://explorecourses.stanford.edu/search?q=EE 392E | DSP architecture design.  Study of circuit and architecture techniques in energy-area-performance space, design methodology based on a data-flow graph model that leads to hardware implementation.  We explore automated wordlength reduction, direct and recursive filters, time-frequency analysis and other examples.  The project focuses on architecture exploration for selected DSP algorithms.  Useful for algorithm designers who consider hardware constraints and for circuit designers who prototype DSP algo-rithms in hardware. Prerequisites: EE102B and EE108A; Recommended: EE264 and EE271.
EE 392F | Logic Synthesis of VLSI Circuits | https://explorecourses.stanford.edu/search?q=EE 392F | Similar to former 318. Solving logic design problems with CAD tools for VLSI circuits. Exact and heuristic algorithms for logic synthesis. Representation and optimization of combinational logic functions (encoding problems, binary decision diagrams) and of multiple-level networks (algebraic and Boolean methods, don't-care set computation, timing verification, and optimization);and modeling and optimization of sequential functions and networks (retiming), semicustom libraries, and library binding. Prerequisites: familiarity with logic design, algorithm development, and programming.
EE 392I | Seminar on Trends in Computing and Communications | https://explorecourses.stanford.edu/search?q=EE 392I | Lectures series and invited talks on current trends in computing and communications, and ongoing initiatives for research and open innovation. This year's focus on evolving cloud computing architectures and their impact on the enterprise; big data trends and rise of the third platform; software as a service; wireless and cellular network architectures; mobility and mobile data proliferation; open mobile platforms (e.g. Android); multi-homed mobile networking, associated data communication and mobile resource trade-offs, and system implementation in smartphones and Android devices.
EE 392L | Modern Cellular Communication Systems | https://explorecourses.stanford.edu/search?q=EE 392L | Theoretical and practical aspects of design, development, and implementation of modern cellular communication systems including principles, requirements and constraints of system design and deployment using examples from real-life cellular systems. Topics include radio access network protocols; homogenous and heterogeneous network architectures; power, mobility, and interference management; spectrum allocations; network capacity and user throughput; multi-antenna transmission techniques; RF and baseband signal processing; unicast and broadcast multimedia services; multi-radio platforms; and future trends in cellular communications. Suggested prerequisites: EE359, EE264, EE279, and EE278 or equivalents
EE 392N | INTELLIGENT ENERGY SYSTEMS | https://explorecourses.stanford.edu/search?q=EE 392N | The key systems engineering steps for design of automated systems in application to of existing and future intelligent energy systems. Existing design approaches and practices for the energy systems.  Every second lecture of the course will be a guest lecture discussing the communication system design for a certain type of energy system. They will alternate with guest lectures discuss-ing the on-line analytical functions.
EE 392P | Nanoscale Device Physics | https://explorecourses.stanford.edu/search?q=EE 392P | The course develops an understanding of nanoscale devices relevant to information manipulation: electronic drawing on ballistic, single electron, quantum confinement, and phase transitions such as ferroelectric, metal-insulator, and structural; magnetic employing field-switching,  spin-torque and spin Hall; photonic using photonic bandgaps and non-linearities; and mechanical employing deflection, torsion and resonance. The physical phenomena that these connect to are electron-phonon effects in dielectrics, mesoscopic and single-electron phenomena, phase transitions, magnetic switching, spin-torque effect, Casimir effect, plasmonics, and their coupled interactions.  Prerequisites: EE 216 or equivalent.  Recommended: EE 222.
EE 392Q | Parallel Processors Beyond Multicore Processing | https://explorecourses.stanford.edu/search?q=EE 392Q | The current parallel computing research emphasizes multi-cores, but there are alterna-tive array processors with significant potential. This hands-on course focuses on SIMD (Single-Instruction, Multiple-Data) massively parallel processors. Topics: Flynn's Taxonomy, parallel architectures, Kestrel architecture and simulator, principles of SIMD programming, parallel sorting with sorting networks, string comparison with dynamic programming (edit distance, Smith-Waterman), arbitrary-precision operations with fixed-point numbers, reductions, vector and matrix multiplication, image processing algo-rithms, asynchronous algorithms on SIMD ("SIMD Phase Programming Model"), Man-delbrot set, analysis of parallel performance.
EE 392R | Analog-to-Digital Conversion | https://explorecourses.stanford.edu/search?q=EE 392R | This course teaches the theoretical and practical aspects of designing analog-to-digital and digital-to-analog converters. During this course sampling and amplitude discretization theory are reviewed. Several converters and building blocks are analyzed on electronic circuit level and suitability for various systems is considered. Specific properties and their application are shown.nNext to Nyquist converters also oversampled and noise-shaping topologies are re-viewed. Impact of mismatch of components is extensively discussed.  Prerequisites: EE214B or equivalent.
EE 392T | Seminar in Chip Test and Debug | https://explorecourses.stanford.edu/search?q=EE 392T | Seminars by industry professionals in digital IC manufacturing test and silicon debug. Topics include yield and binsplit modeling, defect types and detection, debug hardware, physical analysis, and design for test/debug circuits. Case studies of silicon failures. Prerequisite: basic digital IC design (271 or 371).
EE 392X | Power Electronics Control and Energy-Aware Design | https://explorecourses.stanford.edu/search?q=EE 392X | The course surveys control techniques for power management and renewable energy sources. The overall aim is to provide a broad overview on control and power electronics for intelligent energy management. Specific topics include: (1) Systematic discussion of concepts underlying control techniques and relevant design/optimization methods, (2) Impact of the power conversion topology and the quality of the passive components on control effectiveness, and (3) Power architecture and control issues relevant to system level optimization in photovoltaic applications.
EE 395 | Electrical Engineering Instruction: Practice Teaching | https://explorecourses.stanford.edu/search?q=EE 395 | Open to advanced EE graduate students who plan to make teaching their career. Students conduct a section of an established course taught in parallel by an experienced instructor. Enrollment limited.
EE 396 | Engineering Education and Online Learning (EDUC 391X) | https://explorecourses.stanford.edu/search?q=EE 396 | An introduction to best practices in engineering education and educational technology, with a focus on online and blended learning.  In addition to gaining a broad understanding of the field, students will experiment with a variety of education technologies, pedagogical techniques, and assessment methods.
EE 398A | Image and Video Compression | https://explorecourses.stanford.edu/search?q=EE 398A | Replaces EE398. The principles of source coding for the efficient storage and transmission of still and moving images. Entropy and lossless coding techniques. Run-length coding and fax compression. Arithmetic coding. Rate-distortion limits and quantization. Lossless and lossy predictive coding. Transform coding, JPEG. Subband coding, wavelets, JPEG2000. Motion-compensated coding, MPEG. Students investigate image and video compression algorithms in Matlab or C. Term project. Prerequisites: EE261, EE278.
EE 400 | Thesis and Thesis Research | https://explorecourses.stanford.edu/search?q=EE 400 | Limited to candidates for the degree of Engineer or Ph.D.May be repeated for credit.
EE 402A | Topics in International Technology Management | https://explorecourses.stanford.edu/search?q=EE 402A | Theme for Autumn 2014 is ¿New Trends in Start-Up Company Acceleration:  Toward the Rise of the Global Start-Up.¿  The series features new incubator and accelerator programs in Silicon Valley and select Asia economies that promote early development of international business operations by start-up companies.  How can start-up companies cope with the challenges of business globalization?  What are the implications of these new models of incubation for the future of Asia economies and for Silicon Valley?  Distinguished speakers from industry and government.  May be repeated for credit.  Please see syllabus for specific requirements, which may differ from those of other seminars at Stanford.
EE 402S | Topics in International Advanced Technology Research | https://explorecourses.stanford.edu/search?q=EE 402S | Theme for Spring 2013 is a survey of industry interests related to Ph.D. research in EE.  Views from venture investors, corporate executives, and others in regard to mid-term future market demands in application areas such as cloud computing and analytics, energy and cleantech, robotics, transportation, medical devices and systems, etc.  Perspectives into identifying and selecting a dissertation topic and maximizing the impact of research in industry and the academic world.  Presentations and discussions by industry and university experts.
EE 402T | Entrepreneurship in Asian High-Tech Industries | https://explorecourses.stanford.edu/search?q=EE 402T | Distinctive patterns and challenges of entrepreneurship in Asia; update of business and technology issues in the creation and growth of start-up companies in major Asian economies.  Distinguished speakers from industry, government, and academia. Course may be repeated for credit.
EE 410 | Integrated Circuit Fabrication Laboratory | https://explorecourses.stanford.edu/search?q=EE 410 | Fabrication, simulation, and testing of a  submicron CMOS process. Practical aspects of IC fabrication including silicon wafer cleaning, photolithography, etching, oxidation, diffusion, ion implantation, chemical vapor deposition, physical sputtering, and electrical testing. Students also simulate the CMOS process using process simulator TSUPREM4 of the structures and electrical parameters that should result from the process flow. Taught in the Stanford Nanofabrication Facility (SNF). Preference to students pursuing doctoral research program requiring SNF facilities. Enrollment limited to 20. Prerequisites: EE 212, EE 216, consent of instructor.
EE 412 | Advanced Nanofabrication Laboratory | https://explorecourses.stanford.edu/search?q=EE 412 | Experimental projects and seminars on integrated circuit fabrication using epitaxial, oxidation, diffusion, evaporation, sputtering, and photolithographic processes with emphasis on techniques for achieving advanced device performance. May be repeated for additional credit. Prerequisites: ENGR341 or EE410 or consent of instructor.
EE 414 | RF Transceiver Design Laboratory | https://explorecourses.stanford.edu/search?q=EE 414 | Students design, build, and test GHz transceivers using microstrip construction techniques and discrete components. The design, construction, and experimental characterization of representative transceiver building blocks: low noise amplifiers (LNAs), diode ring mixers, PLL-based frequency synthesizers, voltage-controlled oscillators (VCOs), power amplifiers (PAs), and microstrip filters and patch antennas. The characteristics of passive microstrip components (including interconnect). Emphasis is on a quantitative reconciliation of theoretical predictions and extensive experimental measurements performed with spectrum and network analyzers, time-domain reflectometers (TDRs), noise figure meter and phase noise analyzers. Prerequisites: EE 314, EE 344.
EE 464 | Semidefinite Optimization and Algebraic Techniques | https://explorecourses.stanford.edu/search?q=EE 464 | This course focuses on recent developments in optimization,nspecifically on the use of convex optimization to addressnproblems involving polynomial equations and inequalities.  Thencourse covers approaches for finding both exact and approximatensolutions to such problems.  We will discuss the use of dualitynand algebraic methods to find feasible points and certificates ofninfeasibility, and the solution of polynomial optimizationnproblems using semidefinite programming. The course coversntheoretical foundations as well as algorithms and theirncomplexity. Prerequisites: EE364A or equivalent course on convexnoptimization.
EE 469B | RF Pulse Design for Magnetic Resonance Imaging | https://explorecourses.stanford.edu/search?q=EE 469B | Magnetic resonance imaging (MRI) and spectroscopy (MRS) based on the use of radio frequency pulses to manipulate magnetization. Analysis and design of major types of RF pulses in one and multiple dimensions, analysis and design of sequences of RF pulses for fast imaging, and use of RF pulses for the creation of image contrast in MRI. Prerequisite: 369B.
EE 801 | TGR Project | https://explorecourses.stanford.edu/search?q=EE 801 | 
EE 802 | TGR Dissertation | https://explorecourses.stanford.edu/search?q=EE 802 | May be repeated for credit.
CS 1C | Introduction to Computing at Stanford | https://explorecourses.stanford.edu/search?q=CS 1C | For those with limited experience with computers or who want to learn more about Stanford's computing environment. Topics include: computer maintenance and security, computing resources, Internet privacy, and copyright law. One-hour lecture/demonstration in dormitory clusters prepared and administered weekly by the Resident Computer Consultant (RCC). Final project. Not a programming course.
CS 1U | Practical Unix | https://explorecourses.stanford.edu/search?q=CS 1U | A practical introduction to using the Unix operating system with a focus on Linux command line skills. Class will consist of video tutorials and weekly hands-on lab sections. The time listed on AXESS is for the first week's logistical meeting only. Topics include: grep and regular expressions, ZSH, Vim and Emacs, basic and advanced GDB features, permissions, working with the file system, revision control, Unix utilities, environment customization, and using Python for shell scripts. Topics may be added, given sufficient interest. Course website: http://cs1u.stanford.edu
CS 2C | Multimedia Production | https://explorecourses.stanford.edu/search?q=CS 2C | Sound, image and video editing techniques and applications, including understanding file formats and publishing multimedia online. Topics include GarageBand, Photoshop, iMovie, and production best practices. Weekly lecture followed by lab section. Second unit for additional creative production assignments completed outside of class time and Final Project with group. Not a programming course, but will use computer multimedia applications heavily for editing.
CS 9 | Problem-Solving for the CS Technical Interview | https://explorecourses.stanford.edu/search?q=CS 9 | This course will prepare students to interview for software engineering and related internships and full-time positions in industry. Drawing on multiple sources of actual interview questions, students will learn key problem-solving strategies specific to the technical/coding interview. Students will be encouraged to synthesize information they have learned across different courses in the major. Emphasis will be on the oral and combination written-oral modes of communication common in coding interviews, but which are unfamiliar settings for problem solving for many students. Prerequisites: CS 106B or X.
CS 10SC | Great Ideas in Computer Science | https://explorecourses.stanford.edu/search?q=CS 10SC | Computers have come to permeate many aspects of our lives, from how we communicate with each other to how we produce and consume information. And while it is all too easy to think of computing in terms of the products and applications we see emerging from technology companies, the intellectual foundations of computer science go much deeper. Indeed, beneath the surface of the tools we use, the social networks we engage in, and the web of information we search lays a field rich with fascinating, intellectually exciting, and sometimes unexpectedly surprising ideas. In this seminar, we will explore several of the great ideas in computer science, looking at both challenging problems and their impact on real applications. From understanding how search engines on the Web work to looking at mathematical theories underlying social networks, from questioning whether a computer can be intelligent to analyzing the notion of what is even possible to compute, this seminar will take us on a series of intellectual excursions that will change the way you look at computers. No prior experience with computer science or programming is required, but a high school mathematics background, an interest in problem-solving, and a healthy curiosity will go a long way toward ensuring an enjoyable and enlightening experience. Students will work in small groups to research topics in computer science they find most intriguing. The course will also take advantage of Stanford's location in the heart of Silicon Valley by conducting field trips to local companies and the Computer History Museum.
CS 27 | Literature and Social Online Learning (COMPLIT 239B, ENGLISH 239B) | https://explorecourses.stanford.edu/search?q=CS 27 | Study, develop, and test new digital methods, games, apps, interactive social media uses to innovate how the humanities can engage and educate students and the public today. Exploring well-known literary texts, digital storytelling forms and literary communities online, students work individually and in interdisciplinary teams to develop innovative projects aimed at bringing literature to life. Tasks include literary role-plays on Twitter; researching existing digital pedagogy and literary projects, games, and apps; reading and coding challenges; collaborative social events mediated by new technology. Minimal prerequisites which vary for students in CS and the humanities; please check with instructors.
CS 42 | Callback Me Maybe: Contemporary Javascript | https://explorecourses.stanford.edu/search?q=CS 42 | Introduction to the JavaScript programming language with a focus on building contemporary applications. Course consists of in-class activities and programming assignments that challenge students to create functional web apps (e.g. Yelp, Piazza, Instagram). Topics include syntax/semantics, event-based programming, document object model (DOM), application programming interfaces (APIs), asynchronous JavaScript and XML (AJAX), jQuery, Node.js, and Redis. Prerequisite: CS 107.
CS 45N | Computers and Photography: From Capture to Sharing | https://explorecourses.stanford.edu/search?q=CS 45N | Preference to freshmen with experience in photography and use of computers. Elements of photography, such as lighting, focus, depth of field, aperture, and composition. How a photographer makes photos available for computer viewing, reliably stores them, organizes them, tags them, searches them, and distributes them online. No programming experience required. Digital SLRs and editing software will be provided to those students who do not wish to use their own.
CS 54N | Great Ideas in Computer Science | https://explorecourses.stanford.edu/search?q=CS 54N | Stanford Introductory Seminar. Preference to freshmen. Covers the intellectual tradition of computer science emphasizing ideas that reflect the most important milestones in the history of the discipline.  No prior experience with programming is assumed.  Topics include programming and problem solving; implementing computation in hardware; algorithmic efficiency; the theoretical limits of computation; cryptography and security; and the philosophy behind artificial intelligence.
CS 55N | Computer and Information Security | https://explorecourses.stanford.edu/search?q=CS 55N | Preference to freshmen. Why computer systems are vulnerable to attack. Common software bugs, how to exploit technology for blocking common attacks, cryptography, and legal issues.
CS 74N | Digital Dilemmas | https://explorecourses.stanford.edu/search?q=CS 74N | Preference to freshmen. Issues where policy decision making requires understanding computer and communications technology. Technology basics taught in non-technology terms. Topics include consumer privacy, government surveillance, file sharing and intellectual property, and electronic voting.
CS 75N | Cell Phones, Sensors, and You | https://explorecourses.stanford.edu/search?q=CS 75N | Focuses on the role of cell phones as the first prevalent wearable sensors that gather information about you that can be both useful and potentially harmful. Topics include the state of technology, sociological and privacy implications, potential governmental regulation, etc. Addresses omniscient "big brother" technology including radar guns and the recording devices that led to the Watergate scandal. Students will gather and compile information on topics and come to class ready to discuss and debate with formulated opinions.
CS 76N | Elections and Technology | https://explorecourses.stanford.edu/search?q=CS 76N | Freshmen Seminar. Since the disastrous Presidential election in Florida in 2000, problems with and worries about technology in elections have gained increasing attention. Are electronic voting machines secure? Are paper ballots secure? Why can't we just vote over our cell phones or the internet? Should voters have to show identification? How do legislators decide these things? How can technologists be heard? We'll look into these questions as we watch others struggle with them in the 2012 Presidential election.
CS 81N | Hackers and Heroes | https://explorecourses.stanford.edu/search?q=CS 81N | This course is about dreamers, role models, and the spirit of adventure. Hackers are said to be the soul of computing: playful programmers who think progress is best made by trial and error, guided by the "hacker ethic." Another view has hackers as nettlesome troublemakers -- "computer bums" at best, or maybe just plain criminals. In this class, you'll decide, by interviewing real hackers about their exploits and learning how to do your own hacks. We'll study major moments in the fifty-year history of hacking and read from texts including Steven Levy's "Hackers," John Markoff's "What the Dormouse Said," Andy Hertzfeld's "Revolution in The Valley," and Peter Seibel's "Coders at Work."
CS 91SI | Digital Canvas: Intro to Visual Design on the Web | https://explorecourses.stanford.edu/search?q=CS 91SI | Introduction to visual design concepts with a focus on modern interfaces like web, mobile and app. Topics include visual design elements and principles such as color theory, layout and composition, typography, and aspects of communication. Students will analyze existing designs, and use various technical tools to implement their own designs. This course consists of a series of in-class activities, design projects, peer critique sessions, and guest speakers. Recommended prerequisites: some web programming experience. Application required.
CS 99SI | Callback Me Maybe: Contemporary JavaScript | https://explorecourses.stanford.edu/search?q=CS 99SI | Introduction to the JavaScript programming language with a focus on building contemporary applications. Course consists of in-class activities and programming assignments that challenge students to create functional web apps (e.g. Yelp, Piazza, Instagram). Topics include syntax/semantics, event-based programming, document object model (DOM), application programming interfaces (APIs), asynchronous JavaScript and XML (AJAX), jQuery, Node.js, and Redis. Prerequisite: CS 107.
CS 101 | Introduction to Computing Principles | https://explorecourses.stanford.edu/search?q=CS 101 | Introduces the essential ideas of computing: data representation, algorithms, programming "code", computer hardware, networking, security, and social issues. Students learn how computers work and what they can do through hands-on exercises. In particular, students will see the capabilities and weaknesses of computer systems so they are not mysterious or intimidating. Course features many small programming exercises, although no prior programming experience is assumed or required. CS101 is not a complete programming course such as CS106A. CS101 is effectively an alternative to CS105. A laptop computer is recommended for the in-class exercises.
CS 103 | Mathematical Foundations of Computing | https://explorecourses.stanford.edu/search?q=CS 103 | Mathematical foundations required for computer science, including propositional predicate logic, induction, sets, functions, and relations. Formal language theory, including regular expressions, grammars, finite automata, Turing machines, and NP-completeness. Mathematical rigor, proof techniques, and applications. May not be taken by students who have completed 103A,B or 103X. Prerequisite: 106A or equivalent.
CS 105 | Introduction to Computers | https://explorecourses.stanford.edu/search?q=CS 105 | For non-technical majors. What computers are and how they work. Practical experience in programming. Construction of computer programs and basic design techniques. A survey of Internet technology and the basics of computer hardware. Students in technical fields and students looking to acquire programming skills should take 106A or 106X. Students with prior computer science experience at the level of 106 or above require consent of instructor. Prerequisite: minimal math skills.
CS 106A | Programming Methodology (ENGR 70A) | https://explorecourses.stanford.edu/search?q=CS 106A | Introduction to the engineering of computer applications emphasizing modern software engineering principles: object-oriented design, decomposition, encapsulation, abstraction, and testing. Uses the Java programming language. Emphasis is on good programming style and the built-in facilities of the Java language. No prior programming experience required. Summer quarter enrollment is limited and requires an application.
CS 106B | Programming Abstractions (ENGR 70B) | https://explorecourses.stanford.edu/search?q=CS 106B | Abstraction and its relation to programming. Software engineering principles of data abstraction and modularity. Object-oriented programming, fundamental data structures (such as stacks, queues, sets) and data-directed design. Recursion and recursive data structures (linked lists, trees, graphs). Introduction to time and space complexity analysis. Uses the programming language C++ covering its basic facilities. Prerequisite: 106A or equivalent. Summer quarter enrollment is limited; application required.
CS 106L | Standard C++ Programming Laboratory | https://explorecourses.stanford.edu/search?q=CS 106L | Supplemental lab to 106B and 106X. Additional features of standard C++ programming practice. Possible topics include advanced C++ language features, standard libraries, STL containers and algorithms, object memory management, operator overloading, and inheritance. Prerequisite: consent of instructor. Corequisite: 106B or 106X.
CS 106X | Programming Abstractions (Accelerated) (ENGR 70X) | https://explorecourses.stanford.edu/search?q=CS 106X | Intensive version of 106B for students with a strong programming background interested in a rigorous treatment of the topics at an accelerated pace. Additional advanced material and more challenging projects. Prerequisite: excellence in 106A or equivalent, or consent of instructor.
CS 107 | Computer Organization and Systems | https://explorecourses.stanford.edu/search?q=CS 107 | Introduction to the fundamental concepts of computer systems. Explores how computer systems execute programs and manipulate data, working from the C programming language down to the microprocessor. Topics covered include: the C programming language, data representation, machine-level code, computer arithmetic, elements of code compilation, memory organization and management, and performance evaluation and optimization. Prerequisites: 106B or X, or consent of instructor.
CS 107E | Computer Systems from the Ground Up | https://explorecourses.stanford.edu/search?q=CS 107E | Introduction to the fundamental concepts of computer systems through bare metal programming on the Raspberry Pi. Explores how five concepts come together in computer systems: hardware, architecture, assembly code, the C language, and software development tools. Students do all programming with a Raspberry Pi kit and several add-ons (LEDs, buttons). Topics covered include: the C programming language, data representation, machine-level code, computer arithmetic, compilation, memory organization and management, debugging, hardware, and I/O. Prerequisite: 106B or X, and consent of instructor.
CS 108 | Object-Oriented Systems Design | https://explorecourses.stanford.edu/search?q=CS 108 | Software design and construction in the context of large OOP libraries. Taught in Java. Topics: OOP design, design patterns, testing, graphical user interface (GUI) OOP libraries, software engineering strategies, approaches to programming in teams. Prerequisite: 107.
CS 109 | Introduction to Probability for Computer Scientists | https://explorecourses.stanford.edu/search?q=CS 109 | Topics include: counting and combinatorics, random variables, conditional probability, independence, distributions, expectation, point estimation, and limit theorems. Applications of probability in computer science including machine learning and the use of probability in the analysis of algorithms. Prerequisites: 103, 106B or X, multivariate calculus at the level of MATH 51 or CME 100 or equivalent.
CS 109L | Statistical Computing with R Laboratory | https://explorecourses.stanford.edu/search?q=CS 109L | Supplemental lab to CS109.  Introduces the R programming language for statistical computing.  Topics include basic facilities of R including mathematical, graphical, and probability functions, building simulations, introductory data fitting and machine learning.  Provides exposure to the functional programming paradigm.  Corequisite: CS109.
CS 110 | Principles of Computer Systems | https://explorecourses.stanford.edu/search?q=CS 110 | Principles and practice of engineering of computer software and hardware systems. Topics include: techniques for controlling complexity; strong modularity using client-server design, virtual memory, and threads; networks; atomicity and coordination of parallel activities; security, and encryption; and performance optimizations. Prerequisite: 107.
CS 122 | Artificial Intelligence: Philosophy, Ethics, & Impact (SYMSYS 122) | https://explorecourses.stanford.edu/search?q=CS 122 | Recent advances in computing may place us at the threshold of a unique turning point in human history. Soon we are likely to entrust management of our environment, economy, security, infrastructure, food production, healthcare, and to a large degree even our personal activities, to artificially intelligent computer systems. The prospect of "turning over the keys" to increasingly autonomous systems raises many complex and troubling questions. How will society respond as versatile robots and machine-learning systems displace an ever-expanding spectrum of blue- and white-collar workers? Will the benefits of this technological revolution be broadly distributed or accrue to a lucky few? How can we ensure that these systems respect our ethical principles when they make decisions at speeds and for rationales that exceed our ability to comprehend? What, if any, legal rights and responsibilities should we grant them? And should we regard them merely as sophisticated tools or as a newly emerging form of life? The goal of this course is to equip students with the intellectual tools, ethical foundation, and psychological framework to successfully navigate the coming age of intelligent machines.
CS 124 | From Languages to Information (LINGUIST 180, LINGUIST 280) | https://explorecourses.stanford.edu/search?q=CS 124 | Extracting meaning, information, and structure from human language text, speech, web pages, genome sequences, social networks, or any less structured information. Methods include: string algorithms, edit distance, language modeling, naive Bayes, inverted indices, vector semantics. Applications such as question answering, sentiment analysis, information retrevial, text classification, social network models, machine translation, genomic sequence alignment, spell checking, speech processing.  Prerequisite: CS103, CS107, CS109.
CS 131 | Computer Vision: Foundations and Applications | https://explorecourses.stanford.edu/search?q=CS 131 | Robots that can navigate space and perform duties, search engines that can index billions of images and videos, algorithms that can diagnose medical images for diseases, or smart cars that can see and drive safely: Lying in the heart of these modern AI applications are computer vision technologies that can perceive, understand and reconstruct the complex visual world. This course is designed for students who are interested in learning about the fundamental principles and important applications of computer vision. Course will introduce a number of fundamental concepts in computer vision and expose students to a number of real-world applications, plus guide students through a series of well designed projects such that they will get to implement cutting-edge computer vision algorithms. Prerequisites: Students should be familiar with Matlab (i.e. have programmed in Matlab before) and Linux; plus Calculus & Linear Algebra.
CS 140 | Operating Systems and Systems Programming | https://explorecourses.stanford.edu/search?q=CS 140 | Operating systems design and implementation. Basic structure; synchronization and communication mechanisms; implementation of processes, process management, scheduling, and protection; memory organization and management, including virtual memory; I/O device management, secondary storage, and file systems. Prerequisite: CS 110.
CS 142 | Web Applications | https://explorecourses.stanford.edu/search?q=CS 142 | Concepts and techniques used in constructing interactive web applications. Browser-side web facilities such as HTML, cascading stylesheets, javascript, and the document object model. Server-side technologies such as sessions, templates, relational databases, and object-relational mapping. Issues in web security and application scalability. New models of web application deployment. Prerequisites: CS 107 and CS 108.
CS 143 | Compilers | https://explorecourses.stanford.edu/search?q=CS 143 | Principles and practices for design and implementation of compilers and interpreters. Topics: lexical analysis; parsing theory; symbol tables; type systems; scope; semantic analysis; intermediate representations; runtime environments; code generation; and basic program analysis and optimization. Students construct a compiler for a simple object-oriented language during course programming projects. Prerequisites: 103 or 103B, and 107.
CS 144 | Introduction to Computer Networking | https://explorecourses.stanford.edu/search?q=CS 144 | Principles and practice. Structure and components of computer networks, packet switching, layered architectures. Applications: web/http, voice-over-IP, p2p file sharing and socket programming. Reliable transport: TCP/IP, reliable transfer, flow control, and congestion control. The network layer: names and addresses, routing. Local area networks: ethernet and switches. Wireless networks and network security. Prerequisite: CS 110.
CS 145 | Introduction to Databases | https://explorecourses.stanford.edu/search?q=CS 145 | The course covers database design and the use of database management systems for applications. It includes extensive coverage of the relational model, relational algebra, and SQL. It also covers XML data including DTDs and XML Schema for validation, and the query and transformation languages XPath, XQuery, and XSLT. The course includes database design in UML, and relational design principles based on dependencies and normal forms. Many additional key database topics from the design and application-building perspective are also covered: indexes, views, transactions, authorization, integrity constraints, triggers, on-line analytical processing (OLAP), JSON, and emerging NoSQL systems. Class time will include guest speakers from industry and additional advanced topics as time and class interest permits. Prerequisites: 103 and 107 (or equivalent).
CS 147 | Introduction to Human-Computer Interaction Design | https://explorecourses.stanford.edu/search?q=CS 147 | Introduces fundamental methods and principles for designing, implementing, and evaluating user interfaces. Topics: user-centered design, rapid prototyping, experimentation, direct manipulation, cognitive principles, visual design, social software, software tools. Learn by doing: work with a team on a quarter-long design project, supported by lectures, readings, and studios. Prerequisite: 106B or X or equivalent programming experience.
CS 148 | Introduction to Computer Graphics and Imaging | https://explorecourses.stanford.edu/search?q=CS 148 | Introductory prerequisite course in the computer graphics sequence introducing students to the technical concepts behind creating synthetic computer generated images. Focuses on using OpenGL to create visual imagery, as well as an understanding of the underlying mathematical concepts including triangles, normals, interpolation, texture mapping, bump mapping, etc. Course will cover fundamental understanding of light and color, as well as how it impacts computer displays and printers. Class will discuss more thoroughly how light interacts with the environment, constructing engineering models such as the BRDF, plus various simplifications into more basic lighting and shading models. Also covers ray tracing technology for creating virtual images, while drawing parallels between ray tracers and real world cameras to illustrate various concepts. Anti-aliasing and acceleration structures are also discussed. The final class mini-project consists of building out a ray tracer to create visually compelling images. Starter codes and code bits will be provided to aid in development, but this class focuses on what you can do with the code as opposed to what the code itself looks like. Therefore grading is weighted toward in person "demos" of the code in action - creativity and the production of impressive visual imagery are highly encouraged. Prerequisites: CS 107, MATH 51.
CS 149 | Parallel Computing | https://explorecourses.stanford.edu/search?q=CS 149 | This course is an introduction to parallelism and parallel programming.  Most new computer architectures are parallel; programming these machines requires knowledge of the basic issues of and techniques for writing parallel software. Topics:  varieties of parallelism in current hardware (e.g., fast networks, multicore, accelerators such as GPUs, vector instruction sets), importance of locality, implicit vs. explicit parallelism, shared vs. non-shared memory, synchronization mechanisms (locking, atomicity, transactions, barriers), and parallel programming models (threads, data parallel/streaming, futures, SPMD, message passing, SIMT, transactions, and nested parallelism).  Significant parallel programming assignments will be given as homework.  The course is open to students who have completed the introductory CS course sequence through 110 and have taken CS 143.
CS 154 | Introduction to Automata and Complexity Theory | https://explorecourses.stanford.edu/search?q=CS 154 | This course provides a mathematical introduction to the following questions: What is computation? Given a computational model, what problems can we hope to solve in principle with this model? Besides those solvable in principle, what problems can we hope to efficiently solve? In many cases we can give completely rigorous answers; in other cases, these questions have become major open problems in computer science and mathematics. By the end of this course, students will be able to classify computational problems in terms of their computational complexity (Is the problem regular? Not regular? Decidable? Recognizable? Neither? Solvable in P? NP-complete? PSPACE-complete?, etc.). Students will gain a deeper appreciation for some of the fundamental issues in computing that are independent of trends of technology, such as the Church-Turing Thesis and the P versus NP problem. Prerequisites: CS 103 or 103B.
CS 155 | Computer and Network Security | https://explorecourses.stanford.edu/search?q=CS 155 | For seniors and first-year graduate students. Principles of computer systems security. Attack techniques and how to defend against them. Topics include: network attacks and defenses, operating system security, application security (web, apps, databases), malware, privacy, and security for mobile devices. Course projects focus on building reliable code. Prerequisite: 110. Recommended: basic Unix.
CS 157 | Logic and Automated Reasoning | https://explorecourses.stanford.edu/search?q=CS 157 | An elementary exposition from a computational point of view of propositional and predicate logic, axiomatic theories, and theories with equality and induction. Interpretations, models, validity, proof, strategies, and applications. Automated deduction: polarity, skolemization, unification, resolution, equality. Prerequisite: 103 or 103B.
CS 161 | Design and Analysis of Algorithms | https://explorecourses.stanford.edu/search?q=CS 161 | Worst and average case analysis. Recurrences and asymptotics. Efficient algorithms for sorting, searching, and selection. Data structures: binary search trees, heaps, hash tables. Algorithm design techniques: divide-and-conquer, dynamic programming, greedy algorithms, amortized analysis, randomization. Algorithms for fundamental graph problems: minimum-cost spanning tree, connected components, topological sort, and shortest paths. Possible additional topics: network flow, string searching. Prerequisite: 103 or 103B; 109 or STATS 116.
CS 164 | Computing with Physical Objects: Algorithms for Shape and Motion | https://explorecourses.stanford.edu/search?q=CS 164 | Algorithms and data structures dealing with the representation and manipulation of physical objects and entities in the computer. Computational structures for shape and motion, shape fitting and matching, triangulations and other spatial subdivisions, and low-dimensional search and optimization. Examples relevant to computer graphics, computer vision, robotics and geometric computation emphasizing algorithmic paradigms applicable to multidimensional data. Prerequisites: CS 103 or 103B, and CS 109 or STATS 116, and CS 106B/X or consent of instructor.
CS 168 | The Modern Algorithmic Toolbox | https://explorecourses.stanford.edu/search?q=CS 168 | This course will provide a rigorous and hands-on introduction to the central ideas and algorithms that constitute the core of the modern algorithmsntoolkit.  Emphasis will be on understanding the high-level theoretical intuitions and principles underlying the algorithms we discuss, as well asndeveloping a concrete understanding of when and how to implement and apply the algorithms.  The course will be structured as a sequence of one-week investigations; each week will introduce one algorithmic idea, and discuss the motivation, theoretical underpinning, and practical applications of that algorithmic idea.  Each topic will be accompanied by a mini-project in which students will be guided through a practical application of the ideas of the week.  Topics include hashing, dimension reduction and LSH, boosting, linear programming, gradient descent,  sampling, and basic data representation and coding. Prerequisites: CS107 and CS161, or permission from the instructor.
CS 170 | Stanford Laptop Orchestra: Composition, Coding, and Performance (MUSIC 128) | https://explorecourses.stanford.edu/search?q=CS 170 | Classroom instantiation of the Stanford Laptop Orchestra (SLOrk) which includes public performances. An ensemble of more than 20 humans, laptops, controllers, and special speaker arrays designed to provide each computer-mediated instrument with its sonic identity and presence. Topics and activities include issues of composing for laptop orchestras, instrument design, sound synthesis, programming, and live performance. May be repeated four times for credit.
CS 173 | A Computational Tour of the Human Genome | https://explorecourses.stanford.edu/search?q=CS 173 | (Only one of 173 or 273A counts toward any CS degree program.) Introduction to computational biology through an informatic exploration of the human genome. Topics include: genome sequencing; functional landscape of the human genome (genes, gene regulation, repeats, RNA genes, epigenetics); genome evolution (comparative genomics, ultraconservation, co-option). Additional topics may include population genetics, personalized genomics, and ancient DNA. Course includes primers on molecular biology, the UCSC Genome Browser, and text processing languages. Guest lectures on current genomic research topics. Class will be similar in spirit to CS273A, which will not be offered this year. Prerequisites: CS107 or equivalent background in programming.
CS 178 | Digital Photography | https://explorecourses.stanford.edu/search?q=CS 178 | Scientific, artistic, and computing aspects of digital photography. Topics: lenses and optics, light and sensors, optical effects in nature, perspective and depth of field, sampling and noise, the camera as a computing platform, image processing and editing, history of photography, computational photography. Counts as a CS elective in the Graphics track. Prerequisites: introductory calculus; students must have a digital camera with manual control over shutter speed and aperture. Loaner cameras may be available. No programming experience required. GER:DB-EngrAppSci
CS 181 | Computers, Ethics, and Public Policy | https://explorecourses.stanford.edu/search?q=CS 181 | (Formerly 201.) Primarily for majors entering computer-related fields. Ethical and social issues related to the development and use of computer technology. Ethical theory, and social, political, and legal considerations. Scenarios in problem areas: privacy, reliability and risks of complex systems, and responsibility of professionals for applications and consequences of their work. Prerequisite: 106B or X.
CS 181W | Computers, Ethics, and Public Policy (WIM) | https://explorecourses.stanford.edu/search?q=CS 181W | Writing-intensive version of CS181. Satisfies the WIM requirement for Computer Science and Computer Systems Engineering undergraduates.
CS 183B | How to Start a Startup | https://explorecourses.stanford.edu/search?q=CS 183B | The course is designed to be a one-class practical MBA equivalent for engineers that want to start startups.  We'll try to cover everything younneed to know other than how to build a product. Topics include: having ideas, getting users, company culture, fundraising, hiring, operations,nmanagements, and more. The format of the class will be guest lectures from experts in each subject. The class will focus more on practical advice than theory, although many speakers will also tell personal stories.
CS 190 | Software Design Studio | https://explorecourses.stanford.edu/search?q=CS 190 | This course will teach the art of software design: how to decompose large complex systems into classes that can be implemented and maintained easily. Topics include information hiding, thick classes, API design, managing complexity, and how to write in-code documentation. The class will involve significant system software implementation and will use an iterative approach consisting of implementation, review, and revision. The course will be taught in a studio format with in-class discussions and code reviews in addition to lectures. Prerequisites: CS 140.
CS 191 | Senior Project | https://explorecourses.stanford.edu/search?q=CS 191 | Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results.
CS 191W | Writing Intensive Senior Project (WIM) | https://explorecourses.stanford.edu/search?q=CS 191W | Restricted to Computer Science and Computer Systems Engineering students. Writing-intensive version of CS191. Register using the section number of an Academic Council member.
CS 192 | Programming Service Project | https://explorecourses.stanford.edu/search?q=CS 192 | Restricted to Computer Science students. Appropriate academic credit (without financial support) is given for volunteer computer programming work of public benefit and educational value.
CS 193A | Android Programming | https://explorecourses.stanford.edu/search?q=CS 193A | Introduction to building applications for Android platform. Examines key concepts of Android programming: tool chain, application life-cycle, views, controls, intents, designing mobile UIs, networking, threading, and more. Features ten weekly lectures and a series of small programming projects. Phone not required, but a phone makes the projects more engaging. Prerequisites: 106B or Java experience at 106B level.
CS 193C | Client-Side Internet Technologies | https://explorecourses.stanford.edu/search?q=CS 193C | Client-side technologies used to create web sites such as sophisticated Web 2.0 interfaces similar to Google maps. XHTML, CSS, JavaScript, document object model (DOM), AJAX, and Flash. Prerequisite: programming experience at the level of 106A.
CS 193P | iPhone and iPad Application Programming | https://explorecourses.stanford.edu/search?q=CS 193P | Tools and APIs required to build applications for the iPhone and iPad platforms using the iOS SDK. User interface design for mobile devices and unique user interactions using multi-touch technologies. Object-oriented design using model-view-controller paradigm, memory management, Objective-C programming language. Other topics include: object-oriented database API, animation, mobile device power management, multi-threading, networking and performance considerations. Prerequisites: C language and object-oriented programming experience exceeding 106B or X level. Previous completion of any one of the following is required: CS 107, 108 (preferred) or 110. Recommended: UNIX, graphics, databases.
CS 194 | Software Project | https://explorecourses.stanford.edu/search?q=CS 194 | Design, specification, coding, and testing of a significant team programming project under faculty supervision. Documentation includes a detailed proposal. Public demonstration of the project at the end of the quarter. Prerequisites: CS 110 and CS 161.
CS 194H | User Interface Design Project | https://explorecourses.stanford.edu/search?q=CS 194H | Advanced methods for designing, prototyping, and evaluating user interfaces to computing applications. Novel interface technology, advanced interface design methods, and prototyping tools. Substantial, quarter-long course project that will be presented in a public presentation. Prerequisites: CS 147, or permission of instructor.
CS 194W | Software Project (WIM) | https://explorecourses.stanford.edu/search?q=CS 194W | Restricted to Computer Science, Computer Systems Engineering, and Electrical Engineering undergraduates.  Writing-intensive version of CS194.
CS 196 | Computer Consulting | https://explorecourses.stanford.edu/search?q=CS 196 | Focus is on Macintosh and Windows operating system maintenance and troubleshooting through hardware and software foundation and concepts. Topics include operating systems, networking, security, troubleshooting methodology with emphasis on Stanford's computing environment. Not a programming course. Prerequisite: 1C or equivalent.
CS 198 | Teaching Computer Science | https://explorecourses.stanford.edu/search?q=CS 198 | Students lead a discussion section of 106A while learning how to teach a programming language at the introductory level. Focus is on teaching skills, techniques, and course specifics. Application and interview required; see http://cs198.stanford.edu.
CS 199 | Independent Work | https://explorecourses.stanford.edu/search?q=CS 199 | Special study under faculty direction, usually leading to a written report. Letter grade; if not appropriate, enroll in 199P.
CS 199P | Independent Work | https://explorecourses.stanford.edu/search?q=CS 199P | (Staff)
CS 200 | Care and Feeding of Large-Scale Web Services | https://explorecourses.stanford.edu/search?q=CS 200 | Advances in cloud technologies are making it easier than ever to build web services.  Today, one can choose from a number of cloud providers to buildnweb sites, mobile and web apps.  Successful scaling of such services, however, is far from trivial. This course discusses technologies that are critical to successful operation of large-scale web services: Global load balancing via DNS, and Comparison of CDNs; Understanding TCP's impact on global client-side latency; Effect of tags and local storage on client-side latency; Backend servers: RPCs, server threading architecture and cluster management; Data storage alternatives: SQL and NoSQL; Faster access to data: Memcached and 20 years of RDMA; Flash's Role in Large Scale Distributed Systems; Cloud: Public, Private and Hybrid; Log processing: Hive and Dremel. The goal is to equip students with a good understanding of challenges and current solutions for service scaling. There is no homework.  Instead, students are expected to read background materials and attend class discussions.
CS 202 | Law for Computer Science Professionals | https://explorecourses.stanford.edu/search?q=CS 202 | Intellectual property law as it relates to computer science including copyright registration, patents, and trade secrets; contract issues such as non-disclosure/non-compete agreements, license agreements, and works-made-for-hire; dispute resolution; and principles of business formation and ownership. Emphasis is on topics of current interest such as open source and the free software movement, peer-to-peer sharing, encryption, data mining, and spam.
CS 204 | Legal Informatics | https://explorecourses.stanford.edu/search?q=CS 204 | Legal informatics based on representation of regulations in computable form. Encoding regulations facilitate creation of legal information systems with significant practical value. Convergence of technological trends, growth of the Internet, advent of semantic web technology, and progress in computational logic make computational law prospects better. Topics: current state of computational law, prospects and problems, philosophical and legal implications. This course is *Cross* listed with LAW 729. Prerequisite: basic concepts of programming.
CS 205A | Mathematical Methods for Robotics, Vision, and Graphics | https://explorecourses.stanford.edu/search?q=CS 205A | Continuous mathematics background necessary for research in robotics, vision, and graphics. Possible topics: linear algebra; the conjugate gradient method; ordinary and partial differential equations; vector and tensor calculus. Prerequisites: 106B or X; MATH 51; or equivalents.
CS 205B | Mathematical Methods for Fluids, Solids, and Interfaces | https://explorecourses.stanford.edu/search?q=CS 205B | Numerical methods for simulation of problems involving solid mechanics and fluid dynamics. Focus is on practical tools needed for simulation, and continuous mathematics involving nonlinear hyperbolic partial differential equations. Possible topics: finite element method, highly deformable elastic bodies, plasticity, fracture, level set method, Burgers' equation, compressible and incompressible Navier-Stokes equations, smoke, water, fire, and solid-fluid coupling. Prerequisite: 205A or equivalent.
CS 207 | The Economics of Software | https://explorecourses.stanford.edu/search?q=CS 207 | How businesses move software products into the marketplace and how the associated intellectual capital is exploited. The value of creators and managers. Concepts that are outside of the common knowledge of computer scientists such as business terms and spreadsheet computations to quantitatively compare alternatives. Goal is to contribute to informed decision making in high-tech product design, acquisition, production, marketing, selection of business structures, outsourcing, and impact of taxation policies. No specific background required. External experts complement class presentations.
CS 210A | Software Project Experience with Corporate Partners | https://explorecourses.stanford.edu/search?q=CS 210A | Two-quarter project course. Focus is on real-world software development. Corporate partners seed projects with loosely defined challenges from their R&D labs; students innovate to build their own compelling software solutions. Student teams are treated as start-up companies with a budget and a technical advisory board comprised of instructional staff and corporate liaisons. Teams will typically travel to the corporate headquarters of their collaborating partner, meaning some teams will travel internationally. Open loft classroom format such as found in Silicon Valley software companies. Exposure to: current practices in software engineering; techniques for stimulating innovation; significant development experience with creative freedoms; working in groups; real-world software engineering challenges; public presentation of technical work; creating written descriptions of technical work. Prerequisites: CS 109 and 110.
CS 210B | Software Project Experience with Corporate Partners | https://explorecourses.stanford.edu/search?q=CS 210B | Continuation of CS210A. Focus is on real-world software development. Corporate partners seed projects with loosely defined challenges from their R&D labs; students innovate to build their own compelling software solutions. Student teams are treated as start-up companies with a budget and a technical advisory board comprised of the instructional staff and corporate liaisons. Teams will typically travel to the corporate headquarters of their collaborating partner, meaning some teams will travel internationally. Open loft classroom format such as found in Silicon Valley software companies. Exposure to: current practices in software engineering; techniques for stimulating innovation; significant development experience with creative freedoms; working in groups; real world software engineering challenges; public presentation of technical work; creating written descriptions of technical work. Prerequisites: CS 210A
CS 210L | Introducing Software through Video Stories | https://explorecourses.stanford.edu/search?q=CS 210L | In this one-unit lab where coding meets film, software development teams from CS210 are paired with film students. This resulting cross-disciplinary group will create a short video that tells an engaging and creative story about the software developed by the team in CS210. The class will introduce students to principles of short form narrative storytelling and the visual language of film, as well as cover the technical principles of DSLR cinematography and non-linear editing. This course will offer students the experience of creating a film in partnership with a producing team.
CS 221 | Artificial Intelligence: Principles and Techniques | https://explorecourses.stanford.edu/search?q=CS 221 | Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).
CS 222 | Rational Agency and Intelligent Interaction (PHIL 358) | https://explorecourses.stanford.edu/search?q=CS 222 | For advanced undergraduates, and M.S. and beginning Ph.D. students. Logic-based methods for knowledge representation, information change, and games in artificial intelligence and philosophy. Topics: knowledge, certainty, and belief; time and action; belief dynamics; preference and social choice; games; and desire and intention. Prerequisite: propositional and first-order logic.
CS 223A | Introduction to Robotics (ME 320) | https://explorecourses.stanford.edu/search?q=CS 223A | Robotics foundations in modeling, design, planning, and control. Class covers relevant results from geometry, kinematics, statics, dynamics, motion planning, and control, providing the basic methodologies and tools in robotics research and applications. Concepts and models are illustrated through physical robot platforms, interactive robot simulations, and video segments relevant to historical research developments or to emerging application areas in the field. Recommended: matrix algebra.
CS 224M | Multi-Agent Systems | https://explorecourses.stanford.edu/search?q=CS 224M | For advanced undergraduates, and M.S. and beginning Ph.D. students. The course serves primarily as an introduction to game theory, including computational aspects. Topics: basic game representations and solution concepts, social choice and mechanism design, multi-agent learning, communication. Applications discussed as appropriate; emphasis is on conceptual matters and theoretical foundations. Prerequisites: very basic probability theory and optimization.
CS 224N | Natural Language Processing (LINGUIST 284) | https://explorecourses.stanford.edu/search?q=CS 224N | Methods for processing human language information and the underlying computational properties of natural languages. Syntactic and semantic processing from linguistic and algorithmic perspectives. Focus is on modern quantitative techniques in NLP: using large corpora, statistical models for acquisition, translation, and interpretation; and representative systems. Prerequisites: CS124 or CS121/221.
CS 224S | Spoken Language Processing | https://explorecourses.stanford.edu/search?q=CS 224S | Introduction to spoken language technology with an emphasis on dialogue and conversational systems. Automatic speech recognition, extraction of affect and social meaning from speech, speech synthesis, dialogue management, and applications to digital assistants, search, and recommender systems. Prerequisites: CS 124, 221, 224N, or 229.
CS 224U | Natural Language Understanding (LINGUIST 188, LINGUIST 288) | https://explorecourses.stanford.edu/search?q=CS 224U | Project-oriented class focused on developing systems and algorithms for robust machine understanding of human language.  Draws on theoretical concepts from linguistics, natural language processing, and machine learning.  Topics include lexical semantics, distributed representations of meaning, relation extraction, semantic parsing, sentiment analysis, and dialogue agents, with special lectures on developing projects, presenting research results, and making connections with industry. Prerequisites: one of LINGUIST 180, CS 124, CS 224N, CS224S, or CS221; and logical/semantics such as LINGUIST 130A or B, CS 157, or PHIL150
CS 224W | Social and Information Networks | https://explorecourses.stanford.edu/search?q=CS 224W | (Formerly 322) How do diseases spread? Who are the influencers? How can we predict friends and enemies in a social network? How information flows and mutates as it is passed through networks? Behind each of these questions there is an intricate wiring diagram, a network, that defines the interactions between the components. And we will never understand these questions unless we understand the networks behind them. The course will cover recent research on the structure and analysis of such large social and information networks and on models and algorithms that abstract their basic properties. Class will explore how to practically analyze large-scale network data and how to reason about it through models for network structure and evolution. Topics include methods for link analysis and network community detection, diffusion and information propagation on the web, virus outbreak detection in networks, and connections with work in the social sciences and economics.
CS 225A | Experimental Robotics | https://explorecourses.stanford.edu/search?q=CS 225A | Hands-on laboratory course experience in robotic manipulation. Topics include robot kinematics, dynamics, control, compliance, sensor-based collision avoidance, and human-robot interfaces. Second half of class is devoted to final projects using various robotic platforms to build and demonstrate new robot task capabilities. Previous projects include the development of autonomous robot behaviors of drawing, painting, playing air hocket, yoyo, basketball, ping-pong or xylophone. Prerequisites: 223A or equivalent.
CS 225B | Robot Programming Laboratory | https://explorecourses.stanford.edu/search?q=CS 225B | For robotics and non-robotics students. Students program mobile robots to exhibit increasingly complex behavior (simple dead reckoning and reactivity, goal-directed motion, localization, complex tasks). Topics: motor control and sensor characteristics; sensor fusion, model construction, and robust estimation; control regimes (subsumption, potential fields); probabalistic methods, including Markov localization and particle filters. Student programmed robot contest. Programming is in C++ on Unix machines, done in teams. Prerequisite: programming at the level of 106B, 106X, 205, or equivalent.
CS 226 | Statistical Techniques in Robotics | https://explorecourses.stanford.edu/search?q=CS 226 | Theory and practice of statistical techniques used in robotics and large-scale sensor-based systems. Probabilistic state estimation, Bayes, Kalman, information and particle filters. Simultaneous localization and mapping techniques, and multi-robot sensor fusion. Markov techniques for making decisions under uncertainty, and probabilistic control algorithms and exploration.
CS 227B | General Game Playing | https://explorecourses.stanford.edu/search?q=CS 227B | A general game playing system accepts a formal description of a game to play it without human intervention or algorithms designed for specific games. Hands-on introduction to these systems and artificial intelligence techniques such as knowledge representation, reasoning, learning, and rational behavior. Students create GGP systems to compete with each other and in external competitions. Prerequisite: programming experience. Recommended: 103 or equivalent.
CS 228 | Probabilistic Graphical Models: Principles and Techniques | https://explorecourses.stanford.edu/search?q=CS 228 | Probabilistic graphical modeling languages for representing complex domains, algorithms for reasoning using these representations, and learning these representations from data. Topics include: Bayesian and Markov networks, extensions to temporal modeling such as hidden Markov models and dynamic Bayesian networks, exact and approximate probabilistic inference algorithms, and methods for learning models from data. Also included are sample applications to various domains including speech recognition, biological modeling and discovery, medical diagnosis, message encoding, vision, and robot motion planning. Prerequisites: basic probability theory and algorithm design and analysis.
CS 229 | Machine Learning | https://explorecourses.stanford.edu/search?q=CS 229 | Topics: statistical pattern recognition, linear and non-linear regression, non-parametric methods, exponential family, GLMs, support vector machines, kernel methods, model/feature selection, learning theory, VC dimension, clustering, density estimation, EM, dimensionality reduction, ICA, PCA, reinforcement learning and adaptive control, Markov decision processes, approximate dynamic programming, and policy search. Prerequisites: linear algebra, and basic probability and statistics.
CS 229T | Statistical Learning Theory (STATS 231) | https://explorecourses.stanford.edu/search?q=CS 229T | (Same as STATS 231) How do we formalize what it means for an algorithm to learn from data?  This course focuses on developing mathematical tools for answering this question.  We will present various common learning algorithms and prove theoretical guarantees about them.  Topics include online learning, kernel methods, generalization bounds (uniform convergence), and spectral methods.  Prerequisites: A solid background in linear algebra and probability theory, statistics and machine learning (STATS 315A or CS 229).  Convex optimization (EE 364a) is helpful but not required.
CS 231A | Computer Vision: From 3D Reconstruction to Recognition | https://explorecourses.stanford.edu/search?q=CS 231A | (Formerly 223B) An introduction to the concepts and applications in computer vision. Topics include: cameras and projection models, low-level image processing methods such as filtering and edge detection; mid-level vision topics such as segmentation and clustering; shape reconstruction from stereo, as well as high-level vision tasks such as object recognition, scene recognition, face detection and human motion categorization. Prerequisites: linear algebra, basic probability and statistics.
CS 231B | The Cutting Edge of Computer Vision | https://explorecourses.stanford.edu/search?q=CS 231B | (Formerly 223C) More than one-third of the brain is engaged in visual processing, the most sophisticated human sensory system. Yet visual recognition technology has fundamentally influenced our lives on the same scale and scope as text-based technology has, thanks to Google, Twitter, Facebook, etc. This course is designed for those students who are interested in cutting edge computer vision research, and/or are aspiring to be an entrepreneur using vision technology. Course will guide students through the design and implementation of three core vision technologies: segmentation, detection and classification on three highly practical, real-world problems. Course will focus on teaching the fundamental theory, detailed algorithms, practical engineering insights, and guide them to develop state-of-the-art systems evaluated based on the most modern and standard benchmark datasets. Prerequisites: CS2223B or equivalent and a good machine learning background (i.e. CS221, CS228, CS229). Fluency in Matlab and C/C++.
CS 231M | Mobile Computer Vision | https://explorecourses.stanford.edu/search?q=CS 231M | The course surveys recent developments in computer vision, graphics and image processing for mobile application. Topics of interest include: feature extraction, image enhancement and digital photography, 3D scene understanding and modeling, virtual augmentation, object recognition and categorization, human activity recognition. As part of this course, students will familiarize with a state-of-the-art mobile hardware and software development platform: an NVIDIA Tegra-based Android tablet, with relevant libraries such as OpenCV and FCam. Tablets will be available for each student team. Prerequisites: Knowledge of linear algebra, probability, as well as concepts introduced in either CS131A or CS231A and CS232 (or equivalent) are necessary for understanding the material covered in this class. C++ (or Java) programming experience is expected.
CS 231N | Convolutional Neural Networks for Visual Recognition | https://explorecourses.stanford.edu/search?q=CS 231N | Computer Vision has become ubiquitous in our society, with applications innsearch, image understanding, apps, mapping, medicine, drones, andnself-driving cars. Core to many of these applications are the tasks of image classification, localization and detection. This course is a deep dive into details of neural network architectures with a focus on learning end-to-end models for these tasks, particularly image classification. During the 10-week course, students will learn to implement, train and debug their own neural networks and gain a detailed understanding of cutting-edge research in computer vision. The final assignment will involve training a multi-million parameter convolutional neural network and applying it on the largest image classification dataset (ImageNet). We will focus on teaching how to set up the problem of image recognition, the learning algorithms (e.g. backpropagation), practical engineering tricks for training and fine-tuning the networks and guide the students through hands-on assignments and a final course project. Much of the background and materials of this course will be drawn from the ImageNet Challenge: http://image-net.org/challenges/LSVRC/2014/index. Prerequisites: Proficiency in Python; familiarity with C/C++; CS 131 and CS 229 or equivalents; Math 21 or equivalent, linear algebra.
CS 232 | Digital Image Processing (EE 368) | https://explorecourses.stanford.edu/search?q=CS 232 | Image sampling and quantization color, point operations, segmentation, morphological image processing, linear image filtering and correlation, image transforms, eigenimages, multiresolution image processing, noise reduction and restoration, feature extraction and recognition tasks, image registration. Emphasis is on the general principles of image processing. Students learn to apply material by implementing and investigating image processing algorithms in Matlab and optionally on Android mobile devices. Term project. Recommended: EE261, EE278.
CS 238 | Decision Making under Uncertainty (AA 228) | https://explorecourses.stanford.edu/search?q=CS 238 | This course is designed to increase awareness and appreciation for why uncertainty matters, particularly for aerospace applications. Introduces decision making under uncertainty from a computational perspective and provides an overview of the necessary tools for building autonomous and decision-support systems. Following an introduction to probabilistic models and decision theory, the course will cover computational methods for solving decision problems with stochastic dynamics, model uncertainty, and imperfect state information. Topics include: Bayesian networks, influence diagrams, dynamic programming, reinforcement learning, and partially observable Markov decision processes. Applications cover: air traffic control, aviation surveillance systems, autonomous vehicles, and robotic planetary exploration. Prerequisites: basic probability and fluency in a high-level programming language.
CS 239 | Advanced Topics in Sequential Decision Making (AA 229) | https://explorecourses.stanford.edu/search?q=CS 239 | Survey of recent research advances in intelligent decision making for dynamic environments from a computational perspective. Efficient algorithms for single and multiagent planning in situations where a model of the environment may or may not be known. Partially observable Markov decision processes, approximate dynamic programming, and reinforcement learning. New approaches for overcoming challenges in generalization from experience, exploration of the environment, and model representation so that these methods can scale to real problems in a variety of domains including aerospace, air traffic control, and robotics. Students are expected to produce an original research paper on a relevant topic. Prerequisites: AA 228/CS 238 or CS 221.
CS 240 | Advanced Topics in Operating Systems | https://explorecourses.stanford.edu/search?q=CS 240 | Recent research. Classic and new papers. Topics: virtual memory management, synchronization and communication, file systems, protection and security, operating system extension techniques, fault tolerance, and the history and experience of systems programming. Prerequisite: 140 or equivalent.
CS 242 | Programming Languages | https://explorecourses.stanford.edu/search?q=CS 242 | Central concepts in modern programming languages, impact on software development, language design trade-offs, and implementation considerations. Functional, imperative, and object-oriented paradigms. Formal semantic methods and program analysis. Modern type systems, higher order functions and closures, exceptions and continuations. Modularity, object-oriented languages, and concurrency. Runtime support for language features, interoperability, and security issues. Prerequisite: 107, or experience with Lisp, C, and an object-oriented language.
CS 243 | Program Analysis and Optimizations | https://explorecourses.stanford.edu/search?q=CS 243 | Program analysis techniques used in compilers and software development tools to improve productivity, reliability, and security. The methodology of applying mathematical abstractions such as graphs, fixpoint computations, binary decision diagrams in writing complex software, using compilers as an example. Topics include data flow analysis, instruction scheduling, register allocation, parallelism, data locality, interprocedural analysis, and garbage collection. Prerequisites: 103 or 103B, and 107.
CS 244 | Advanced Topics in Networking | https://explorecourses.stanford.edu/search?q=CS 244 | Classic papers, new ideas, and research papers in networking. Architectural principles: naming, addressing, routing; congestion control, traffic management, QoS; wireless and mobility; overlay networks and virtualization; network security; switching and routing; content distribution; and proposals for future Internet structures. Prerequisite: 144 or equivalent.
CS 244B | Distributed Systems | https://explorecourses.stanford.edu/search?q=CS 244B | Distributed operating systems and applications issues, emphasizing high-level protocols and distributed state sharing as the key technologies. Topics: distributed shared memory, object-oriented distributed system design, distributed directory services, atomic transactions and time synchronization, application-sufficient consistency, file access, process scheduling, process migration, and storage/communication abstractions on distribution, scale, robustness in the face of failure, and security.  Prerequisites: CS 144 and CS 249A.
CS 244C | Readings and Projects in Distributed Systems | https://explorecourses.stanford.edu/search?q=CS 244C | Companion project option for 244B. Corequisite: 244B.
CS 244E | Networked Wireless Systems | https://explorecourses.stanford.edu/search?q=CS 244E | Design and implementation of wireless networks and mobile systems. The course will commence with a short retrospective of wireless communication and initially touch on some of the fundamental physical layer properties of various wireless communication technologies. The focus will then shift to design of media access control and routing layers for various wireless systems. The course will also examine adaptations necessary at transport and higher layers to cope with node mobility and error-prone nature of the wireless medium. Finally, it will conclude with a brief overview of other related issues including emerging wireless/mobile applications. Prerequisites: EE 284
CS 245 | Database Systems Principles | https://explorecourses.stanford.edu/search?q=CS 245 | File organization and access, buffer management, performance analysis, and storage management. Database system architecture, query optimization, transaction management, recovery, concurrency control. Reliability, protection, and integrity. Design and management issues. Prerequisites: 145, 161.
CS 246 | Mining Massive Data Sets | https://explorecourses.stanford.edu/search?q=CS 246 | The course will discuss data mining and machine learning algorithms for analyzing very large amounts of data. The emphasis will be on Map Reduce as a tool for creating parallel algorithms that can process very large amounts of data. Topics include: Frequent itemsets and Association rules, Near Neighbor Search in High Dimensional Data, Locality Sensitive Hashing (LSH), Dimensionality reduction, Recommender Systems, Clustering, Link Analysis, Large-scale machine learning, Data streams,  Analysis of Social-network Graphs, and Web Advertising. Prerequisites: At lease one of CS107 or CS145; At least one of CS109 or STAT116, or equivalent.
CS 246H | Mining Massive Data Sets Hadoop Lab | https://explorecourses.stanford.edu/search?q=CS 246H | Supplement to CS 246 providing additional material on Hadoop. Students will learn how to implement data mining algorithms using Hadoop, how to implement and debug complex MapReduce jobs in Hadoop, and how to use some of the tools in the Hadoop ecosystem for data mining and machine learning. Topics: Hadoop, MapReduce, HDFS, combiners, secondary sort, distributed cache, SQL on Hadoop, Hive, Cloudera ML/Oryx, Mahout, Hadoop streaming, implementing Hadoop jobs, debugging Hadoop jobs, TF-IDF, Pig, Sqoop, Oozie, HBase, Impala. Prerequisite: CS 107 or equivalent.
CS 247 | Human-Computer Interaction Design Studio | https://explorecourses.stanford.edu/search?q=CS 247 | Project-based focus on interaction design process, especially early-stage design and rapid prototyping. Methods used in interaction design including needs analysis, user observation, sketching, concept generation, scenario building, and evaluation. Prerequisites: 147 or equivalent background in design thinking; 106B or equivalent background in programming.
CS 247L | Human Computer Interaction Technology Laboratory | https://explorecourses.stanford.edu/search?q=CS 247L | Hands-on introduction to contemporary HCI technologies. Interaction design with Adobe Flash, mobile development, physical computing, and web applications. Corequisite: 247.
CS 248 | Interactive Computer Graphics | https://explorecourses.stanford.edu/search?q=CS 248 | This is the second course in the computer graphics sequence, and as such it assumes a strong familiarity with rendering and image creation. The course has a strong focus on computational geometry, animation, and simulation. Topics include splines, implicit surfaces, geometric modeling, collision detection, animation curves, particle systems and crowds, character animation, articulation, skinning, motion capture and editing, rigid and deformable bodies, and fluid simulation. As a final project, students implement an interactive video game utilizing various concepts covered in the class. Games may be designed on mobile devices, in a client/server/browser environment, or on a standard personal computer. Prerequisite: CS148.
CS 249A | Object-Oriented Programming from a Modeling and Simulation Perspective | https://explorecourses.stanford.edu/search?q=CS 249A | Topics: large-scale software development approaches for complex applications, class libraries and frameworks; encapsulation, use of inheritance and dynamic dispatch, design of interfaces and interface/implementation separation, exception handling, smart pointers and reference management, minimalizing dependencies and value-oriented programming. Inheritance: when and why multiple inheritance naming, directories, manager, and disciplined use of design patterns including functors, event notification and iterators. Prerequisites: C, C++, and programming methodology as developed in 106B or X, and 107 (107 may be taken concurrently). Recommended: 193D.
CS 249B | Large-scale Software Development | https://explorecourses.stanford.edu/search?q=CS 249B | Software engineering of high quality large-scale complex software with a focus on evolvability, performance and cost. Software development processes, people and practice; audit: integrating invariant checks with production software; concurrency with modular object-oriented programming; collection implementation; generic programming and templates; design of value types; named descriptions for large value types; memory management; controlling placement, locality and consumption; run-time vs. static type checking and identification.
CS 254 | Computational Complexity | https://explorecourses.stanford.edu/search?q=CS 254 | An introduction to computational complexity theory. Topics include the P versus NP problem; diagonalization; space complexity: PSPACE, Savitch's theorem, and NL=coNL; counting problems and #P-completeness; circuit complexity; pseudorandomness and derandomization; complexity of approximation; quantum computing; complexity barriers.  Prerequisites: 154 or equivalent; mathematical maturity.
CS 255 | Introduction to Cryptography | https://explorecourses.stanford.edu/search?q=CS 255 | For advanced undergraduates and graduate students. Theory and practice of cryptographic techniques used in computer security. Topics: encryption (symmetric and public key), digital signatures, data integrity, authentication, key management, PKI, zero-knowledge protocols, and real-world applications. Prerequisite: basic probability theory.
CS 259D | Data Mining for Cyber Security | https://explorecourses.stanford.edu/search?q=CS 259D | The massive increase in the rate of novel cyber attacks has made data-mining-based techniques a critical component in detecting security threats. The course covers various applications of data mining in computer and network security. Topics include: Overview of the state of information security; malware detection; network and host intrusion detection; web, email, and social network security; authentication and authorization anomaly detection; alert correlation; and potential issues such as privacy issues and adversarial machine learning. Prerequisites: Data mining / machine learning at the level of CS 246 or CS 229; familiarity with computer systems and networks at least at the level of CS 110; CS 140 and CS 144 strongly recommended; CS 155 recommended but not required.
CS 261 | Optimization and Algorithmic Paradigms | https://explorecourses.stanford.edu/search?q=CS 261 | Algorithms for network optimization: max-flow, min-cost flow, matching, assignment, and min-cut problems. Introduction to linear programming. Use of LP duality for design and analysis of algorithms. Approximation algorithms for NP-complete problems such as Steiner Trees, Traveling Salesman, and scheduling problems. Randomized algorithms. Introduction to online algorithms. Prerequisite: 161 or equivalent.
CS 262 | Computational Genomics (BIOMEDIN 262) | https://explorecourses.stanford.edu/search?q=CS 262 | Applications of computer science to genomics, and concepts in genomics from a computer science point of view. Topics: dynamic programming, sequence alignments, hidden Markov models, Gibbs sampling, and probabilistic context-free grammars. Applications of these tools to sequence analysis: comparative genomics, DNA sequencing and assembly, genomic annotation of repeats, genes, and regulatory sequences, microarrays and gene expression, phylogeny and molecular evolution, and RNA structure. Prerequisites: 161 or familiarity with basic algorithmic concepts. Recommended: basic knowledge of genetics.
CS 263 | Algorithms for Modern Data Models (MS&E 317) | https://explorecourses.stanford.edu/search?q=CS 263 | We traditionally think of algorithms as running on data available in a single location, typically main memory. In many modern applications including web analytics, search and data mining, computational biology, finance, and scientific computing, the data is often too large to reside in a single location, is arriving incrementally over time, is noisy/uncertain, or all of the above. Paradigms such as map-reduce, streaming, sketching, Distributed Hash Tables, Bulk Synchronous Processing, and random walks have proved useful for these applications. This course will provide an introduction to the design and analysis of algorithms for these modern data models. Prerequisite: Algorithms at the level of CS 261.
CS 264 | Beyond Worst-Case Analysis | https://explorecourses.stanford.edu/search?q=CS 264 | This course is motivated by problems for which the traditional worst-case analysis of algorithms fails to differentiate meaningfully between different solutions, or recommends an intuitively "wrong" solution over the "right" one. This course studies systematically alternatives to traditional worst-case analysis that nevertheless enable rigorous and robust guarantees on the performance of an algorithm.  Topics include: instance optimality; smoothed analysis; parameterized analysis and condition numbers; models of data (pseudorandomness, locality, diffuse adversaries, etc.); average-case analysis; robust distributional analysis; resource augmentation; planted and semi-random graph models. Motivating problems will be drawn from online algorithms, online learning, constraint satisfaction problems, graph partitioning, scheduling, linear programming, hashing, machine learning, and auction theory. Prerequisites: CS161 (required). CS261 is recommended but not required.
CS 265 | Randomized Algorithms and Probabilistic Analysis (CME 309) | https://explorecourses.stanford.edu/search?q=CS 265 | Randomness pervades the natural processes around us, from the formation of networks, to genetic recombination, to quantum physics. Randomness is also a powerful tool that can be leveraged to create algorithms and data structures which, in many cases, are more efficient and simpler than their deterministic counterparts. This course covers the key tools of probabilistic analysis, and application of these tools to understand the behaviors of random processes and algorithms. Emphasis is on theoretical foundations, though we will apply this theory broadly, discussing applications in machine learning and data analysis, networking, and systems. Topics include tail bounds, the probabilistic method, Markov chains, and martingales, with applications to analyzing random graphs, metric embeddings, random walks, and a host of powerful and elegant randomized algorithms. Prerequisites: CS 161 and STAT 116, or equivalents and instructor consent.
CS 266 | Parameterized Algorithms and Complexity | https://explorecourses.stanford.edu/search?q=CS 266 | An introduction to the area of parameterized algorithms and complexity, which explores multidimensional methods for measuring the difficulty and feasibility of solving computational problems. Topics include: fixed-parameter tractability (FPT) and its characterizations, FPT algorithms for hard problems, the W-hierarchy (W[1], W[2], W[P], and complete problems for these classes), and the relationships between parameterized questions and classical theory questions. Prerequisites: CS 154 and 161 or the equivalent mathematical maturity.
CS 267 | Graph Algorithms | https://explorecourses.stanford.edu/search?q=CS 267 | An introduction to advanced topics in graph algorithms. Focusing on a variety of graph problems, the course will explore topics such as small space graph data structures, approximation algorithms, dynamic algorithms, and algorithms for special graph classes. Topics include: approximation algorithms for shortest paths and graph matching, distance oracles, graph spanners, cliques and graph patterns, dynamic algorithms, graph coloring, algorithms for planar graphs. Prerequisites: 161 or the equivalent mathematical maturity.
CS 268 | Geometric Algorithms | https://explorecourses.stanford.edu/search?q=CS 268 | Techniques for design and analysis of efficient geometric algorithms for objects in 2-, 3-, and higher dimensions. Topics: convexity, triangulations and simplicial complexes, sweeping, partitioning, and point location. Voronoi/Delaunay diagrams and their properties. Arrangements of curves and surfaces. Intersection and visibility problems. Geometric searching and optimization. Random sampling methods. Impact of numerical issues in geometric computation. Example applications to robotic motion planning, visibility preprocessing and rendering in graphics, model-based recognition in computer vision, and structural molecular biology. Prerequisite: discrete algorithms at the level of 161. Recommended: 164.
CS 270 | Modeling Biomedical Systems: Ontology, Terminology, Problem Solving (BIOMEDIN 210) | https://explorecourses.stanford.edu/search?q=CS 270 | Methods for modeling biomedical systems and for making those models explicit in the context of building software systems. Emphasis is on intelligent systems for decision support and Semantic Web applications. Topics: knowledge representation, controlled terminologies, ontologies, reusable problem solvers, and knowledge acquisition. Recommended: exposure to object-oriented systems, basic biology.
CS 272 | Introduction to Biomedical Informatics Research Methodology (BIOE 212, BIOMEDIN 212, GENE 212) | https://explorecourses.stanford.edu/search?q=CS 272 | Hands-on software building. Student teams conceive, design, specify, implement, evaluate, and report on a software project in the domain of biomedicine. Creating written proposals, peer review, providing status reports, and preparing final reports. Guest lectures from professional biomedical informatics systems builders on issues related to the process of project management. Software engineering basics. Because the team projects start in the first week of class, attendance that week is strongly recommended. Prerequisites: BIOMEDIN 210 or 211 or 214 or 217 or consent of instructor.
CS 273A | A Computational Tour of the Human Genome (BIOMEDIN 273A, DBIO 273A) | https://explorecourses.stanford.edu/search?q=CS 273A | Introduction to computational biology through an informatic exploration of the human genome. Topics include: genome sequencing (technologies, assembly, personalized sequencing); functional landscape (genes, gene regulation, repeats, RNA genes, epigenetics); genome evolution (comparative genomics, ultraconservation, co-option). Additional topics may include population genetics, personalized genomics, and ancient DNA. Course includes primers on molecular biology, the UCSC Genome Browser, and text processing languages. Guest lectures from genomic researchers. No prerequisites. See http://cs273a.stanford.edu/.
CS 274 | Representations and Algorithms for Computational Molecular Biology (BIOE 214, BIOMEDIN 214, GENE 214) | https://explorecourses.stanford.edu/search?q=CS 274 | Topics: introduction to bioinformatics and computational biology, algorithms for alignment of biological sequences and structures, computing with strings, phylogenetic tree construction, hidden Markov models, Gibbs Sampling, basic structural computations on proteins, protein structure prediction, protein threading techniques, homology modeling, molecular dynamics and energy minimization, statistical analysis of 3D biological data, integration of data sources, knowledge representation and controlled terminologies for molecular biology, microarray analysis, machine learning (clustering and classification), and natural language text processing. Prerequisites: programming skills; consent of instructor for 3 units.
CS 275 | Translational Bioinformatics (BIOMEDIN 217) | https://explorecourses.stanford.edu/search?q=CS 275 | Analytic, storage, and interpretive methods to optimize the transformation of genetic, genomic, and biological data into diagnostics and therapeutics for medicine. Topics: access and utility of publicly available data sources; types of genome-scale measurements in molecular biology and genomic medicine; analysis of microarray data; analysis of polymorphisms, proteomics, and protein interactions; linking genome-scale data to clinical data and phenotypes; and new questions in biomedicine using bioinformatics. Case studies. Prerequisites: programming ability at the level of CS 106A and familiarity with statistics and biology.
CS 275A | Symbolic Musical Information (MUSIC 253) | https://explorecourses.stanford.edu/search?q=CS 275A | Focus on symbolic data for music applications including advanced notation systems, optical music recognition, musical data conversion, and internal structure of MIDI files.
CS 275B | Music Query, Analysis, and Style Simulation (MUSIC 254) | https://explorecourses.stanford.edu/search?q=CS 275B | Leveraging off three synchronized sets of symbolic data resources for notation and analysis, the lab portion introduces students to the open-source Humdrum Toolkit for music representation and analysis.  Issues of data content and quality as well as methods of information retrieval, visualization, and summarization are considered in class. Grading based primarily on student projects. Prerequisite: 253 or consent of instructor.
CS 276 | Information Retrieval and Web Search (LINGUIST 286) | https://explorecourses.stanford.edu/search?q=CS 276 | Text information retrieval systems; efficient text indexing; Boolean, vector space, and probabilistic retrieval models; ranking and rank aggregation; evaluating IR systems. Text clustering and classification: classification algorithms, latent semantic indexing, taxonomy induction; Web search engines including crawling and indexing, link-based algorithms, and web metadata. Prerequisites: CS 107, CS 109, CS 161.
CS 277 | Experimental Haptics | https://explorecourses.stanford.edu/search?q=CS 277 | Computer haptics is the discipline of synthesizing touch feedback in simulated or virtual environments. Course objective is to study and develop computational methods for generating force feedback through haptic interfaces. Theoretical topics: haptic rendering in 3-D virtual environments, simulation of haptic interaction with rigid and deformable objects, haptic interfaces, psychophysics of touch. Applied topics: CHAI3D haptic library, implementation of algorithms for haptic rendering, collision detection, and deformable body simulation. Guest speakers; Lab/programming exercises; open-ended final project. Enrollment limited to 20. Prerequisite: experience with C++. Recommended: 148 or 248, 223A.
CS 279 | Computational Biology: Structure and Organization of Biomolecules and Cells (CME 279) | https://explorecourses.stanford.edu/search?q=CS 279 | Computational approaches to understanding the three-dimensional spatial organization of biological systems and how that organization evolves over time. The course will cover cutting-edge research in both physics-based simulations and computational analysis of experimental data, at scales ranging from individual molecules to multiple cells. Prerequisites: elementary programming background (106A or equivalent) and an introductory course in biology or biochemistry.
CS 294A | Research Project in Artificial Intelligence | https://explorecourses.stanford.edu/search?q=CS 294A | Student teams under faculty supervision work on research and implementation of a large project in AI. State-of-the-art methods related to the problem domain. Prerequisites: AI course from 220 series, and consent of instructor.
CS 294H | Research Project in Human-Computer Interaction | https://explorecourses.stanford.edu/search?q=CS 294H | Student teams under faculty supervision work on research and implementationnof a large project in HCI. State-of-the-art methods related to the problemndomain. Prerequisites CS 377, 147, 247, or permission from instructor.
CS 294S | Research Project in Software Systems and Security | https://explorecourses.stanford.edu/search?q=CS 294S | Topics vary. Focus is on emerging research themes such as programmable open mobile Internet that spans multiple system topics such as human-computer interaction, programming systems, operating systems, networking, and security. May be repeated for credit. Prerequisites: CS 103 and 107.
CS 294W | Writing Intensive Research Project in Computer Science | https://explorecourses.stanford.edu/search?q=CS 294W | Restricted to Computer Science and Computer Systems Engineering undergraduates. Students enroll in the CS 294W section attached to the CS 294 project they have chosen.
CS 295 | Software Engineering | https://explorecourses.stanford.edu/search?q=CS 295 | Software specification, testing, and verification. Emphasis is on current best practices and technology for developing reliable software at reasonable cost. Assignments focus on applying these techniques to realistic software systems. Prerequisites: 108. Recommended a project course such as 140, 143, or 145.
CS 298 | Seminar on Teaching Introductory Computer Science (EDUC 298) | https://explorecourses.stanford.edu/search?q=CS 298 | Faculty, undergraduates, and graduate students interested in teaching discuss topics raised by teaching computer science at the introductory level. Prerequisite: consent of instructor.
CS 300 | Departmental Lecture Series | https://explorecourses.stanford.edu/search?q=CS 300 | Priority given to first-year Computer Science Ph.D. students. CS Masters students admitted if space is available.  Presentations by members of the department faculty, each describing informally his or her current research interests and views of computer science as a whole.
CS 309 | Industrial Lectureships in Computer Science | https://explorecourses.stanford.edu/search?q=CS 309 | Guest computer scientist. By arrangement. May be repeated for credit.
CS 309A | Cloud Computing | https://explorecourses.stanford.edu/search?q=CS 309A | For science, engineering, business, medicine, and law students. Cloud computing is bringing information systems out of the back office and making it core to the entire economy. This class is intended for all students who want to begin to understand the implications of this shift in technology. Guest industry experts are public company CEOs who are delivering application, software development, operations management, compute, storage & data center, and network cloud services.
CS 315A | Parallel Computer Architecture and Programming | https://explorecourses.stanford.edu/search?q=CS 315A | The principles and tradeoffs in the design of parallel architectures. Emphasis is on naming, latency, bandwidth, and synchronization in parallel machines. Case studies on shared memory, message passing, data flow, and data parallel machines illustrate techniques. Architectural studies and lectures on techniques for programming parallel computers. Programming assignments on one or more commercial multiprocessors. Prerequisites: EE 282, and reasonable programming experience.
CS 316 | Advanced Multi-Core Systems (EE 382E) | https://explorecourses.stanford.edu/search?q=CS 316 | In-depth coverage of the architectural techniques used in modern, multi-core chips for mobile and server systems. Advanced processor design techniques (superscalar cores, VLIW cores, multi-threaded cores, energy-efficient cores), cache coherence, memory consistency, vector processors, graphics processors, heterogeneous processors, and hardware support for security and parallel programming. Students will become familiar with complex trade-offs between performance-power-complexity and hardware-software interactions. A central part of CS316 is a project on an open research question on multi-core technologies. Prerequisites: EE 108B. Recommended: CS 149, EE 282.
CS 319 | Topics in Digital Systems | https://explorecourses.stanford.edu/search?q=CS 319 | Advanced material is often taught for the first time as a topics course, perhaps by a faculty member visiting from another institution. May be repeated for credit.
CS 327A | Advanced Robotic Manipulation | https://explorecourses.stanford.edu/search?q=CS 327A | Advanced control methodologies and novel design techniques for complex human-like robotic and bio mechanical systems. Class covers the fundamentals in operational space dynamics and control, elastic planning, human motion synthesis. Topics include redundancy, inertial properties, haptics, simulation, robot cooperation, mobile manipulation, human-friendly robot design, humanoids and whole-body control. Additional topcs in emerging areas are presented by groups of students at the end-of-quarter mini-symposium. Prerequisites: 223A or equivalent.
CS 328 | Topics in Computer Vision | https://explorecourses.stanford.edu/search?q=CS 328 | Fundamental issues of, and mathematical models for, computer vision. Sample topics: camera calibration, texture, stereo, motion, shape representation, image retrieval, experimental techniques. May be repeated for credit. Prerequisites: 205, 223B, or equivalents.
CS 329 | Topics in Artificial Intelligence | https://explorecourses.stanford.edu/search?q=CS 329 | Advanced material is often taught for the first time as a topics course, perhaps by a faculty member visiting from another institution. May be repeated for credit.
CS 331A | Advanced Reading in Computer Vision | https://explorecourses.stanford.edu/search?q=CS 331A | (Formerly CS323) The field of computer vision has seen an explosive growth in past decade. Much of recent effort in vision research is towards developing algorithms that can perform high-level visual recognization tasks on real-world images and videos. With development of Internet, this task becomes particularly challenging and interesting given the heterogeneous data on the web. Course will focus on reading recent research papers that are focused on solving high-level visual recognition problems, such as object recognition and categorization, scene understanding, human motion understanding, etc. Project required. Prerequisite: some experience in research with one of the following fields: computer vision, image processing, computer graphics, machine learning.
CS 331B | 3D Representation and Recognition | https://explorecourses.stanford.edu/search?q=CS 331B | The course surveys recent developments in high level and 3D computer vision and will focus on reading recent research papers on topics related to 3D object recognition and representation, spatial inference, activity understanding, human vision and 3D perception. The course is inspired by a famous series of workshops (called 3d-RR) which have been offered during the International Conference in Computer Vision (ICCV) since 2007. Prerequisites - Some experience in research with one of the following fields: computer vision, image processing, computer graphics, machine learning.
CS 334A | Convex Optimization I (CME 364A, EE 364A) | https://explorecourses.stanford.edu/search?q=CS 334A | Convex sets, functions, and optimization problems. The basics of convex analysis and theory of convex programming: optimality conditions, duality theory, theorems of alternative, and applications. Least-squares, linear and quadratic programs, semidefinite programming, and geometric programming. Numerical algorithms for smooth and equality constrained problems; interior-point methods for inequality constrained problems. Applications to signal processing, communications, control, analog and digital circuit design, computational geometry, statistics, machine learning, and mechanical engineering. Prerequisite: linear algebra such as EE263, basic probability.
CS 340 | Topics in Computer Systems | https://explorecourses.stanford.edu/search?q=CS 340 | Topics vary every quarter, and may include advanced material being taught for the first time. May be repeated for credit.
CS 341 | Project in Mining Massive Data Sets | https://explorecourses.stanford.edu/search?q=CS 341 | Team project in data-mining of very large-scale data, including the problem statement and implementation and evaluation of a solution; some lectures on relevant materials will be given: Hadoop, Hive, Amazon EC2; other topics of possible relevance to some projects: computational advertising and the adwords problem; graph partitioning and community detection; extracting relations from the Web; stream data processing.
CS 344 | Topics in Computer Networks | https://explorecourses.stanford.edu/search?q=CS 344 | High-performance embedded system design. Student teams of two software engineers (C experience required) and one hardward engineer (Verilog experience required) build a fully functioning Internet router Work in teams of three. How router interoperates with others in class. Open-ended design challenge judged by panel of industry experts. Prerequisites: CS 144, 244, or network programming experience.
CS 344E | Advanced Wireless Networks | https://explorecourses.stanford.edu/search?q=CS 344E | Networking research in wireless systems. Topics include: multi-channel/multi-radio systems, routing, coding, physical layer hints, low power, mesh networking, interference cancellation, technological trends, and protocol design. Students implement and test research ideas on SWAN, a WiFi testbed.
CS 344G | (Your) Great Ideas for Networked Applications | https://explorecourses.stanford.edu/search?q=CS 344G | Graduate project class on computer networking, emphasizing end-to-end applications and protocols. Students will propose and execute an original project in teams of 2-3, culminating in a final writeup and presentation/demonstration. Each week, students will read, present, and lead a discussion about a seminal paper or system. Prerequisites: programming experience; CS 244 recommended but not required.
CS 346 | Database System Implementation | https://explorecourses.stanford.edu/search?q=CS 346 | A major database system implementation project realizes the principles and techniques covered in earlier courses. Students independently build a complete database management system, from file structures through query processing, with a personally designed feature or extension. Lectures on project details and advanced techniques in database system implementation, focusing on query processing and optimization. Guest speakers from industry on commercial DBMS implementation techniques. Prerequisites: 145, 245, programming experience in C++.
CS 347 | Parallel and Distributed Data Management | https://explorecourses.stanford.edu/search?q=CS 347 | The principles and system organization of distributed and parallel databases. Data fragmentation and distribution, distributed database design, query processing and optimization, distributed concurrency control, reliability and commit protocols, and replicated data management. Data management in peer-to-peer systems. Data management in the "cloud" using map-reduce and other massive parallelism techniques.
CS 348B | Computer Graphics: Image Synthesis Techniques | https://explorecourses.stanford.edu/search?q=CS 348B | Intermediate level, emphasizing high-quality image synthesis algorithms and systems issues in rendering. Topics include: Reyes and advanced rasterization, including motion blur and depth of field; ray tracing and physically based rendering; Monte Carlo algorithms for rendering, including direct illumination and global illumination; path tracing and photon mapping; surface reflection and light source models; volume rendering and subsurface scattering; SIMD and multi-core parallelism for rendering. Written assignments and programming projects. Prerequisite: 248 or equivalent. Recommended: Fourier analysis or digital signal processing.
CS 349 | Topics in Programming Systems | https://explorecourses.stanford.edu/search?q=CS 349 | Advanced material is often taught for the first time as a topics course, perhaps by a faculty member visiting from another institution. May be repeated for credit.
CS 349C | Topics in Programming Systems: Readings in Distributed Systems | https://explorecourses.stanford.edu/search?q=CS 349C | Discussion of research publications that are of current interest in distributed systems. Students are expected to read all papers, and sign up for presentation of one paper. The course itself is 1 unit. Those interested in working on a project along with the readings should enroll for 3 units.
CS 358 | Topics in Programming Language Theory | https://explorecourses.stanford.edu/search?q=CS 358 | Topics of current research interest in the mathematical analysis of programming languages, structured operational semantics, domain theory, semantics of concurrency, rich type disciplines, problems of representation independence, and full abstraction. See Time Schedule or Axess for current topics. May be repeated for credit. Prerequisites: 154, 157, 258, or equivalents. (Staff)
CS 359 | Topics in the Theory of Computation | https://explorecourses.stanford.edu/search?q=CS 359 | Advanced material is often taught for the first time as a topics course, perhaps by a faculty member visiting from another institution. May be repeated for credit.
CS 361A | Advanced Algorithms | https://explorecourses.stanford.edu/search?q=CS 361A | Advanced data structures: union-find, self-adjusting data structures and amortized analysis, dynamic trees, Fibonacci heaps, universal hash function and sparse hash tables, persistent data structures. Advanced combinatorial algorithms: algebraic (matrix and polynomial) algorithms, number theoretic algorithms, group theoretic algorithms and graph isomorphism, online algorithms and competitive analysis, strings and pattern matching, heuristic and probabilistic analysis (TSP, satisfiability, cliques, colorings), local search algorithms. May be repeated for credit. Prerequisite: 161 or 261, or equivalent.
CS 361B | Advanced Algorithms | https://explorecourses.stanford.edu/search?q=CS 361B | Topics: fundamental techniques used in the development of exact and approximate algorithms for combinational optimization problems such as generalized flow, multicommodity flow, sparsest cuts, generalized Steiner trees, load balancing, and scheduling. Using linear programming, emphasis is on LP duality for design and analysis of approximation algorithms; interior point methods for LP. Techniques for development of strongly polynomial algorithms. Prerequisites: 161 or 261, or equivalent.
CS 364A | Algorithmic Game Theory | https://explorecourses.stanford.edu/search?q=CS 364A | Topics at the interface of computer science and game theory such as: algorithmic mechanism design; combinatorial auctions; computation of Nash equilibria and relevant complexity theory; congestion and potential games; cost sharing; game theory and the Internet; matching markets; network formation; online learning algorithms; price of anarchy; prior-free auctions; selfish routing; sponsored search. Prerequisites: 154N and 161, or equivalents.
CS 369 | Topics in Analysis of Algorithms | https://explorecourses.stanford.edu/search?q=CS 369 | Advanced material is often taught for the first time as a topics course, perhaps by a faculty member visiting from another institution. May be repeated for credit.
CS 369E | Topics in Analysis of Algorithms: Communication Complexity (for Algorithm Designers) | https://explorecourses.stanford.edu/search?q=CS 369E | Fundamentals of communication complexity, with a strong emphasis on applications to proving lower bounds in important computational models.  Application areas include data stream algorithms, data structures, extended formulations of linear programs, and combinatorial auctions.
CS 371 | Computational Biology in Four Dimensions (CME 371) | https://explorecourses.stanford.edu/search?q=CS 371 | Computational approaches to understanding the three-dimensional spatial organization of biological systems and how that organization evolves over time.  The course will cover cutting-edge research in both physics-based simulation and computational analysis of experimental data, at scales ranging from individual molecules to entire cells.  Prerequisite: CS 106A or equivalent, and an introductory course in biology or biochemistry. Recommended: some experience in mathematical modeling (does not need to be a formal course).
CS 374 | Algorithms in Biology (BIOMEDIN 374) | https://explorecourses.stanford.edu/search?q=CS 374 | Algorithms and computational models applied to molecular biology and genetics. Topics vary annually. Possible topics include biological sequence comparison, annotation of genes and other functional elements, molecular evolution, genome rearrangements, microarrays and gene regulation, protein folding and classification, molecular docking, RNA secondary structure, DNA computing, and self-assembly. May be repeated for credit. Prerequisites: 161, 262 or 274, or BIOCHEM 218, or equivalents.
CS 376 | Human-Computer Interaction Research | https://explorecourses.stanford.edu/search?q=CS 376 | Prepares students to conduct original HCI research by reading and discussing seminal and cutting-edge research papers. Main topics are ubiquitous computing, social computing, and design and creation; breadth topics include HCI methods, programming, visualization, and user modeling. Student pairs perform a quarter-long research project. For undergraduates, CS147 is a prerequisite.
CS 377 | Topics in Human-Computer Interaction | https://explorecourses.stanford.edu/search?q=CS 377 | Contents change each quarter. May be repeated for credit. See http://hci.stanford.edu/academics for offerings.
CS 377D | Topics in Learning and Technology: d.compress - Designing Calm (EDUC 328A) | https://explorecourses.stanford.edu/search?q=CS 377D | Contents of the course change each year. The course can be repeated. Stress silently but steadily damages physical and emotional well-being, relationships, productivity, and our ability to learn and remember. This highly experiential and project-oriented class will focus on designing interactive technologies to enable calm states of cognition, emotion, and physiology for better human health, learning, creativity and productivity.
CS 377W | HCI Issues in Wearable Computing | https://explorecourses.stanford.edu/search?q=CS 377W | With devices like Pebble and Google Glass moving from labs to consumer use, Wearable Computing represents the forefront of HCI innovation. In this course, students will engage with a broad range of issues around the design and development of wearable devices and systems and develop their own wearable interaction. The course begins with use, analysis, and redesign of an existing wearable, followed by a larger group project integrating concepts from the course to prototype a novel wearable interaction. Students work in project teams, prototyping their wearable concept and communicating their progress through demonstration, final report, and presentation. Google Glass will be available for students interested in experimenting with this platform. Prerequisites: One of the following: CS 147 or CS 247.
CS 379 | Interdisciplinary Topics | https://explorecourses.stanford.edu/search?q=CS 379 | Advanced material is often taught for the first time as a topics course, perhaps by a faculty member visiting from another institution. May be repeated for credit.
CS 379L | Designing Liberation Technology (POLISCI 337T) | https://explorecourses.stanford.edu/search?q=CS 379L | Small project teams work with NGOs to design new technologies for promoting development and democracy. Students conduct observations to identify needs, generate concepts, create prototypes, and test their appropriateness. Some projects may continue past the quarter toward full-scale implementation. Taught through the Hasso Plattner Institute of Design at Stanfordn(http://dschool.stanford.edu). Enrollment limited. Application required. Prerequisites: consent of instructor(s). Design Institute class; see http://dschool.stanford.edu.
CS 390A | Curricular Practical Training | https://explorecourses.stanford.edu/search?q=CS 390A | Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.
CS 390B | Curricular Practical Training | https://explorecourses.stanford.edu/search?q=CS 390B | Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390A,B,C may each be taken once.
CS 390C | Curricular Practical Training | https://explorecourses.stanford.edu/search?q=CS 390C | Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390A,B,C may each be taken once.
CS 390P | Part-time Curricular Practical Training | https://explorecourses.stanford.edu/search?q=CS 390P | For qualified computer science PhD students only. Permission number required for enrollment; see the CS PhD program administrator in Gates room 196. May be taken just once; not repeatable. Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in research and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. Students on F1 visas should be aware that completing 12 or more months of full-time CPT will make them ineligible for Optional Practical Training (OPT).
CS 393 | Computer Laboratory | https://explorecourses.stanford.edu/search?q=CS 393 | For CS graduate students. A substantial computer program is designed and implemented; written report required. Recommended as a preparation for dissertation research. Register using the section number associated with the instructor. Prerequisite: consent of instructor.
CS 395 | Independent Database Project | https://explorecourses.stanford.edu/search?q=CS 395 | For graduate students in Computer Science. Use of database management or file systems for a substantial application or implementation of components of database management system. Written analysis and evaluation required. Register using the section number associated with the instructor. Prerequisite: consent of instructor.
CS 399 | Independent Project | https://explorecourses.stanford.edu/search?q=CS 399 | Letter grade only.
CS 399P | Independent Project | https://explorecourses.stanford.edu/search?q=CS 399P | Graded satisfactory/no credit.
CS 402 | Beyond Bits and Atoms: Designing Technological Tools (EDUC 236X) | https://explorecourses.stanford.edu/search?q=CS 402 | Practicum in designing and building technology-enabled curricula and hands-on learning environments. Students use software toolkits and state-of-the-art fabrication machines to design educational software, educational toolkits, and tangible user interfaces. The course will focus on designing low-cost technologies, particularly for urban school in the US and abroad. We will explore theoretical and design frameworks from the constructionist learning perspective, critical pedagogy, interaction design for children.
CS 402L | Beyond Bits and Atoms - Lab (EDUC 211X) | https://explorecourses.stanford.edu/search?q=CS 402L | This course is a hands-on lab in the prototyping and fabrication of tangible technologies, with a special focus in learning and education. We will learn how to use state-of-the-art fabrication machines (3D printers, 3D scanners, laser cutters, routers) to design educational toolkits, educational toys, science kits, and tangible user interfaces. A special focus of the course will be to design low-cost technologies, particularly for urban school in the US and abroad.
CS 424M | Learning Analytics and Computational Modeling in Social Science (EDUC 390X) | https://explorecourses.stanford.edu/search?q=CS 424M | Computational modeling and data-mining are dramatically changing the physical sciences, and more recently also the social and behavioral sciences. Traditional analysis techniques are insufficient to investigate complex dynamic social phenomena as social networks, online gaming, diffusion of innovation, opinion dynamics, classroom behavior, and other complex adaptive systems. In this course, we will learn about how modeling, network theory, and basic data-mining can support research in cognitive, and social sciences, in particular around issues of learning, cognitive development, and educational policy.
CS 427 | Hero's Journey: AI and Game Theory in 3D Real-time Storytelling | https://explorecourses.stanford.edu/search?q=CS 427 | In the Hero¿s Journey course, the students create a third person game by focusing on creating stories from interactions between the 3D characters and their environment. Each story is auto-generated depending on the narrative framework implemented, and the actions each of the characters decide to take. The focus is creating hero¿s that act and react in a believable manner in a dynamic environment.
CS 431 | High-Level Vision: Object Representation (PSYCH 250) | https://explorecourses.stanford.edu/search?q=CS 431 | (Formerly CS423 High-Level Vision: Behaviors, Neurons, and Computational Models) Interdisciplinary seminar focusing on understanding how computations in the brain enable rapid and efficient object perception. Covers topics from multiple perspectives drawing on recent research in Psychology, Neuroscience, Computer Science and Applied Statistics. Emphasis on discussing recent empirical findings, methods and theoretical debates in the field. Topics include: theories of object perception, neural computations underlying invariant object perception, how visual exemplars and categories are represented in the brain, what information is present in distributed activations across neural populations and how it relates to object perception, what modern statistical and analytical tools there are for multi-variate analysis of brain activations.
CS 442 | High Productivity and Performance with Domain-specific Languages in Scala | https://explorecourses.stanford.edu/search?q=CS 442 | Introduction to developing domain specific languages (DSLs) for productivity and performance using the Scala programming language. Goal is to equip students with the knowledge and tools to develop DSLs that can dramatically improve the experience of using high performance computation in important scientific and engineering domains. Aimed at two sorts of students: domain experts who can define key domain specific language elements that capture domain knowledge, and computer scientists who can implement these DSLs using a new DSL framework in Scala. First half of the course will focus on understanding the infrastructure for implementing DSLs in Scala and developing techniques for defining good DSLs. Second half of the course will focus on example DSLs that provide both high-productivity and performance. During the second half of the course groups of students will develop and implement their own DSLs using the Delite DSL process of implementing DSLs for parallel computation. Prerequisites: Systems course such as CS140, CS143 or CS149, and expertise is a particular domain and desire to improve productivity and performance of computation.
CS 448 | Topics in Computer Graphics | https://explorecourses.stanford.edu/search?q=CS 448 | Topic changes each quarter.  Recent topics: computational photography, datannvisualization, character animation, virtual worlds, graphics architectures, advanced rendering.  See http://graphics.stanford.edu/courses for offererings and prerequisites. May be repeated for credit.
CS 448B | Data Visualization | https://explorecourses.stanford.edu/search?q=CS 448B | Techniques and algorithms for creating effective visualizations based on principles from graphic design, visual art, perceptual psychology, and cognitive science.  Topics: graphical perception, data and image models, visual encoding, graph and tree layout, color, animation, interaction techniques, automated design.  Lectures, reading, and project.  Prerequisite: one of 147, 148, or equivalent.
CS 448I | Computational Imaging and Display (EE 367) | https://explorecourses.stanford.edu/search?q=CS 448I | Spawned by rapid advances in optical fabrication and digital processing power, a new generation of imaging technology is emerging: computational cameras at the convergence of applied mathematics, optics, and high-performance computing. Similar trends are observed for modern displays pushing the boundaries of resolution, contrast, 3D capabilities, and immersive experiences through the co-design of optics, electronics, and computation. This course serves as an introduction to the emerging field of computational imaging and displays. Students will learn to master bits and photons.
CS 448X | Math and Computer Science behind Special Effects | https://explorecourses.stanford.edu/search?q=CS 448X | Course will focus on a number of case studies of special effects work in feature films, with the aim of elucidating the underlying technical challenges from the standpoint of mathematics and computer science. As a project based class, individuals may more deeply focus on the individual aspects of most interest to them be it rendering, computational geometry, computer vision, physical simulation, or character animation. Guests from industry will speak about effects work they and their colleagues have been involved in as well as discuss some current challenges in the industry. Students will be asked to submit some current challenges either alone or in an appropriate group. Since course may be taken multiple times for credit, and will be open to both undergraduate and graduate students with varied backgrounds and interests, grading will be based on individual effort relative to preparation.  As such currently there are no prerequisites enforced.
CS 476A | Music, Computing, and Design I: Software Paradigms for Computer Music (MUSIC 256A) | https://explorecourses.stanford.edu/search?q=CS 476A | Software design and implementation for computer audio. Strategies, best practices, and tradeoffs in building audio software systems of various sizes (S, M, L, XL), with a focus on interactive (real-time) systems. Lectures examine high-level designs as well as dissect code in a hands-on manner. Course work includes small programming assignments and a final software project. This course is the prerequisite for MUSIC 256B. Prerequisite: experience in C/C++ and/or Java.
CS 476B | Music, Computing, Design II: Mobile Music (MUSIC 256B) | https://explorecourses.stanford.edu/search?q=CS 476B | Aesthetic, design, and implementation of mobile music, centered around the modern super smartphones such as the iPhone). Similarities and intrinsic differences between mobile and traditional computing and design for music. Topics include mobile software design, social and cloud computing, mobile interface design, and programming phones, in the service of music. Prerequisite: MUSIC 256A.
CS 499 | Advanced Reading and Research | https://explorecourses.stanford.edu/search?q=CS 499 | Letter grade only. Advanced reading and research for CS graduate students. Register using the section number associated with the instructor. Prerequisite: consent of instructor.
CS 499P | Advanced Reading and Research | https://explorecourses.stanford.edu/search?q=CS 499P | Graded satisfactory/no credit. Advanced reading and research for CS graduate students. Register using the section number associated with the instructor. Prerequisite: consent of instructor.
CS 545 | Information and Data Analytics Seminar | https://explorecourses.stanford.edu/search?q=CS 545 | Seminar features leading industrial and academic experts on big data analytics, information management, data mining, machine learning, and large-scale data processing.
CS 546 | Seminar on Liberation Technologies (POLISCI 337S) | https://explorecourses.stanford.edu/search?q=CS 546 | This one-unit seminar will present speakers relevant in a variety ofnways to how various forms of information technology are being used tondefend human rights, improve governance, deepen democracy, empower thenpoor, promote economic development, protect the environment, enhancenpublic health, and pursue a variety of other social goods.
CS 547 | Human-Computer Interaction Seminar | https://explorecourses.stanford.edu/search?q=CS 547 | Weekly speakers on human-computer interaction topics. May be repeated for credit.
CS 548 | Internet and Distributed Systems Seminar | https://explorecourses.stanford.edu/search?q=CS 548 | Guest speakers from academia and industry. May be repeated for credit.
CS 571 | Surgical Robotics Seminar (ME 571) | https://explorecourses.stanford.edu/search?q=CS 571 | Surgical robots developed and implemented clinically on varying scales. Seminar goal is to expose students from engineering, medicine, and business to guest lecturers from academia and industry.engineering and clinical aspects connected to design and use of surgical robots, varying in degree of complexity and procedural role. May be repeated for credit.
CS 801 | TGR Project | https://explorecourses.stanford.edu/search?q=CS 801 | 
CS 802 | TGR Dissertation | https://explorecourses.stanford.edu/search?q=CS 802 | 
