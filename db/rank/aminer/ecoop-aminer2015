ECOOP-bp-1 | Feature-Oriented Programming: A Fresh Look at Objects | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=ECOOP-bp-1 Feature-Oriented Programming: A Fresh Look at Objects | 
ECOOP-bp-2 | Balloon Types: Controlling Sharing of State in Data Types | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=ECOOP-bp-2 Balloon Types: Controlling Sharing of State in Data Types | 
ECOOP-bp-3 | Balloon types: controlling sharing of state in data types | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=ECOOP-bp-3 Balloon types: controlling sharing of state in data types | 
ECOOP-bp-4 | Components as Context-independent Units of Software | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=ECOOP-bp-4 Components as Context-independent Units of Software | 
ECOOP-bp-5 | Interaction Protocols for Composing Concurrent Objects | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=ECOOP-bp-5 Interaction Protocols for Composing Concurrent Objects | 
ECOOP-bp-6 | ECCOP'96 - Object-Oriented Programming, 10th European Conference, Linz, Austria, July 8-12, 1996, Proceedings | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=ECOOP-bp-6 ECCOP'96 - Object-Oriented Programming, 10th European Conference, Linz, Austria, July 8-12, 1996, Proceedings | 
ECOOP-bp-7 | Inlining of Virtual Methods | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=ECOOP-bp-7 Inlining of Virtual Methods | 
ECOOP-bp-8 | Security Properties of Typed Applets | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=ECOOP-bp-8 Security Properties of Typed Applets | 
ECOOP-bp-9 | Interposition Agents: Transparently Interposing User Code at the System Interface | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=ECOOP-bp-9 Interposition Agents: Transparently Interposing User Code at the System Interface | 
ECOOP-bp-10 | A Study of The Fragile Base Class Problem | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=ECOOP-bp-10 A Study of The Fragile Base Class Problem | 
ECOOP-bp-11 | Predicate Dispatching: A Unified Theory of Dispatch | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=ECOOP-bp-11 Predicate Dispatching: A Unified Theory of Dispatch | 
ECOOP-bp-12 | Extending the ODMG Object Model with Time | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=ECOOP-bp-12 Extending the ODMG Object Model with Time | 
ECOOP-bp-13 | Modern Concurrency Abstractions for C | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=ECOOP-bp-13 Modern Concurrency Abstractions for C | 
ECOOP-bp-14 | Architectural Reasoning in ArchJava | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=ECOOP-bp-14 Architectural Reasoning in ArchJava | 
ECOOP-bp-15 | Generative Programming | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=ECOOP-bp-15 Generative Programming | 
ECOOP-bp-16 | Modeling Crosscutting in Aspect-Oriented Mechanisms | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=ECOOP-bp-16 Modeling Crosscutting in Aspect-Oriented Mechanisms | 
ECOOP-bp-17 | A Nominal Theory of Objects with Dependent Types | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=ECOOP-bp-17 A Nominal Theory of Objects with Dependent Types | 
ECOOP-bp-18 | External Uniqueness Is Unique Enough | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=ECOOP-bp-18 External Uniqueness Is Unique Enough | 
ECOOP-bp-19 | Jam - A Smooth Extension of Java with Mixins | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=ECOOP-bp-19 Jam - A Smooth Extension of Java with Mixins | 
ECOOP-bp-20 | Generic Wrappers | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=ECOOP-bp-20 Generic Wrappers | 
ECOOP-bp-21 | Component-Oriented Programming | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=ECOOP-bp-21 Component-Oriented Programming | 
ECOOP-bp-22 | An Overview of AspectJ | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=ECOOP-bp-22 An Overview of AspectJ | 
ECOOP-bp-23 | Family Polymorphism | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=ECOOP-bp-23 Family Polymorphism | 
ECOOP-bp-24 | Model-Driven Architecture: Vision, Standards And Emerging Technologies | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=ECOOP-bp-24 Model-Driven Architecture: Vision, Standards And Emerging Technologies | 
ECOOP-bp-25 | Ambient-Oriented Programming in AmbientTalk | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=ECOOP-bp-25 Ambient-Oriented Programming in AmbientTalk | 
ECOOP-bp-26 | On Ownership and Accessibility | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=ECOOP-bp-26 On Ownership and Accessibility | 
ECOOP-bp-27 | Statement Annotations for Fine-Grained Advising | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=ECOOP-bp-27 Statement Annotations for Fine-Grained Advising | 
ECOOP-bp-28 | Generic Universe Types | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=ECOOP-bp-28 Generic Universe Types | 
ECOOP-bp-29 | Matching Objects with Patterns | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=ECOOP-bp-29 Matching Objects with Patterns | 
ECOOP-bp-30 | Component-Oriented Programming | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=ECOOP-bp-30 Component-Oriented Programming | 
ECOOP-bp-31 | Object Invariants in Dynamic Contexts | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=ECOOP-bp-31 Object Invariants in Dynamic Contexts | 
ECOOP-bp-32 | Ownership Domains: Separating Aliasing Policy from Mechanism | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=ECOOP-bp-32 Ownership Domains: Separating Aliasing Policy from Mechanism | 
ECOOP-bp-33 | Typestates for Objects | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=ECOOP-bp-33 Typestates for Objects | 
ECOOP-bp-34 | Open Modules: Modular Reasoning About Advice | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=ECOOP-bp-34 Open Modules: Modular Reasoning About Advice | 
ECOOP-bp-35 | The Essence of Data Access in Comega | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=ECOOP-bp-35 The Essence of Data Access in Comega | 
ECOOP-bp-36 | First-Class Relationships in an Object-Oriented Language | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=ECOOP-bp-36 First-Class Relationships in an Object-Oriented Language | 
ECOOP-bp-37 | Regional Logic for Local Reasoning about Global Invariants | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=ECOOP-bp-37 Regional Logic for Local Reasoning about Global Invariants | 
ECOOP-bp-38 | On Validity of Program Transformations in the Java Memory Model | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=ECOOP-bp-38 On Validity of Program Transformations in the Java Memory Model | 
ECOOP-bp-39 | A Model for Java with Wildcards | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=ECOOP-bp-39 A Model for Java with Wildcards | 
ECOOP-bp-40 | Practical Object-Oriented Back-in-Time Debugging | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=ECOOP-bp-40 Practical Object-Oriented Back-in-Time Debugging | 
ECOOP-bp-41 | EventJava: An Extension of Java for Event Correlation | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=ECOOP-bp-41 EventJava: An Extension of Java for Event Correlation | 
ECOOP-bp-42 | Coinductive Type Systems for Object-Oriented Languages | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=ECOOP-bp-42 Coinductive Type Systems for Object-Oriented Languages | 
ECOOP-bp-43 | Checking Framework Interactions with Relationships | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=ECOOP-bp-43 Checking Framework Interactions with Relationships | 
ECOOP-bp-44 | Debugging Method Names | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=ECOOP-bp-44 Debugging Method Names | 
ECOOP-bp-45 | Tunable static inference for generic universe types | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=ECOOP-bp-45 Tunable static inference for generic universe types | 
ECOOP-bp-46 | ECOOP 2011 - Object-Oriented Programming - 25th European Conference, Lancaster, UK, July 25-29, 2011 Proceedings | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=ECOOP-bp-46 ECOOP 2011 - Object-Oriented Programming - 25th European Conference, Lancaster, UK, July 25-29, 2011 Proceedings | 
ECOOP-bp-47 | The Essence of JavaScript | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=ECOOP-bp-47 The Essence of JavaScript | 
ECOOP-bp-48 | Concurrent Abstract Predicates | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=ECOOP-bp-48 Concurrent Abstract Predicates | 
ECOOP-bp-49 | Modules as objects in newspeak | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=ECOOP-bp-49 Modules as objects in newspeak | 
ECOOP-bp-50 | The Billion-Dollar Fix - Safe Modular Circular Initialisation with Placeholders and Placeholder Types. | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=ECOOP-bp-50 The Billion-Dollar Fix - Safe Modular Circular Initialisation with Placeholders and Placeholder Types. | 
ECOOP-bp-51 | Java UI : Effects for Controlling UI Object Access. | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=ECOOP-bp-51 Java UI : Effects for Controlling UI Object Access. | 
ECOOP-bp-52 | Simple Profile Rectifications Go a Long Way - Statistically Exploring and Alleviating the Effects of Sampling Errors for Program Optimizations. | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=ECOOP-bp-52 Simple Profile Rectifications Go a Long Way - Statistically Exploring and Alleviating the Effects of Sampling Errors for Program Optimizations. | 
ECOOP-bp-53 | Extensibility for the masses: practical extensibility with object algebras | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=ECOOP-bp-53 Extensibility for the masses: practical extensibility with object algebras | 
ECOOP-bp-54 | ECOOP 2012 - Object-Oriented Programming - 26th European Conference, Beijing, China, June 11-16, 2012. Proceedings | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=ECOOP-bp-54 ECOOP 2012 - Object-Oriented Programming - 26th European Conference, Beijing, China, June 11-16, 2012. Proceedings | 
