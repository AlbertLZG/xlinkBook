SEKE-bp-1 | Toward Automated Component Adaptation | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=SEKE-bp-1 Toward Automated Component Adaptation | 
SEKE-bp-2 | Using a Large Linguistic Ontology for Internet-based Retrieval of Object-Oriented Components | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=SEKE-bp-2 Using a Large Linguistic Ontology for Internet-based Retrieval of Object-Oriented Components | 
SEKE-bp-3 | Defining a Program Behavior Model for Dynamic Analyzers | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=SEKE-bp-3 Defining a Program Behavior Model for Dynamic Analyzers | 
SEKE-bp-4 | Important Milestones in Software Reliability Modeling | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=SEKE-bp-4 Important Milestones in Software Reliability Modeling | 
SEKE-bp-5 | Generalized Program Slicing for Software Maintenance | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=SEKE-bp-5 Generalized Program Slicing for Software Maintenance | 
SEKE-bp-6 | Using Design Cohesion to Visualize, Quantify, and Restructure Software | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=SEKE-bp-6 Using Design Cohesion to Visualize, Quantify, and Restructure Software | 
SEKE-bp-7 | Managing Software Engineering Experience for Com-prehensive Reuse | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=SEKE-bp-7 Managing Software Engineering Experience for Com-prehensive Reuse | 
SEKE-bp-8 | A Multi-Agent Architecture for Cooperative Software Engineering | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=SEKE-bp-8 A Multi-Agent Architecture for Cooperative Software Engineering | 
SEKE-bp-9 | Supporting aspect-oriented component-based systems engineering | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=SEKE-bp-9 Supporting aspect-oriented component-based systems engineering | 
SEKE-bp-10 | Architecture-Based Performance Analysis | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=SEKE-bp-10 Architecture-Based Performance Analysis | 
SEKE-bp-11 | Knowledge Management of Software Engineering Lessons Learned | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=SEKE-bp-11 Knowledge Management of Software Engineering Lessons Learned | 
SEKE-bp-12 | Static and dynamic visualisation of component-based software architectures | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=SEKE-bp-12 Static and dynamic visualisation of component-based software architectures | 
SEKE-bp-13 | Crosscutting quality attributes for requirements engineering | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=SEKE-bp-13 Crosscutting quality attributes for requirements engineering | 
SEKE-bp-14 | Exploiting architectural design knowledge to support self-repairing systems | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=SEKE-bp-14 Exploiting architectural design knowledge to support self-repairing systems | 
SEKE-bp-15 | Towards semantic software engineering environments | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=SEKE-bp-15 Towards semantic software engineering environments | 
SEKE-bp-16 | Social Patterns for Designing Multiagent Systems | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=SEKE-bp-16 Social Patterns for Designing Multiagent Systems | 
SEKE-bp-17 | An XVCL-based Approach to Software Product Line Development | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=SEKE-bp-17 An XVCL-based Approach to Software Product Line Development | 
SEKE-bp-18 | COO-flow: a Process Technology to Support Cooperative Processes | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=SEKE-bp-18 COO-flow: a Process Technology to Support Cooperative Processes | 
SEKE-bp-19 | Semi-Automatic Engineering of Ontologies from Text | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=SEKE-bp-19 Semi-Automatic Engineering of Ontologies from Text | 
SEKE-bp-20 | Implementing the Experience Factory concepts as a set of Experience Bases | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=SEKE-bp-20 Implementing the Experience Factory concepts as a set of Experience Bases | 
SEKE-bp-21 | Knowledge-Acquisition Interfaces for Domain Experts: An Empirical Evaluation of Protégé-2000 | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=SEKE-bp-21 Knowledge-Acquisition Interfaces for Domain Experts: An Empirical Evaluation of Protégé-2000 | 
SEKE-bp-22 | Inconsistency Management in Software Engineering: Survey and Open Research Issues | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=SEKE-bp-22 Inconsistency Management in Software Engineering: Survey and Open Research Issues | 
SEKE-bp-23 | Agent- Oriented Software Development: A Case Study | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=SEKE-bp-23 Agent- Oriented Software Development: A Case Study | 
SEKE-bp-24 | Automatic Test Data Generation for Program Paths Using Genetic Algorithms | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=SEKE-bp-24 Automatic Test Data Generation for Program Paths Using Genetic Algorithms | 
SEKE-bp-25 | KOntoR: An Ontology-enabled Approach to Software Reuse | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=SEKE-bp-25 KOntoR: An Ontology-enabled Approach to Software Reuse | 
SEKE-bp-26 | Outsourcing America | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=SEKE-bp-26 Outsourcing America | 
SEKE-bp-27 | A Comparative Analysis of i*Agent-Oriented Modelling Techniques | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=SEKE-bp-27 A Comparative Analysis of i*Agent-Oriented Modelling Techniques | 
SEKE-bp-28 | Towards a Reference Architecture for Software Testing Tools | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=SEKE-bp-28 Towards a Reference Architecture for Software Testing Tools | 
SEKE-bp-29 | ADkwik: Web 2.0 Collaboration System for Architectural Decision Engineering | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=SEKE-bp-29 ADkwik: Web 2.0 Collaboration System for Architectural Decision Engineering | 
SEKE-bp-30 | Software Documents: Comparison and Measurement | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=SEKE-bp-30 Software Documents: Comparison and Measurement | 
SEKE-bp-31 | Automatic Mapping of OWL Ontologies into Java | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=SEKE-bp-31 Automatic Mapping of OWL Ontologies into Java | 
SEKE-bp-32 | Mapping UML Diagrams to a Petri Net Notation for System Simulation | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=SEKE-bp-32 Mapping UML Diagrams to a Petri Net Notation for System Simulation | 
SEKE-bp-33 | A State-Based Approach to Testing Aspect-Oriented Programs | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=SEKE-bp-33 A State-Based Approach to Testing Aspect-Oriented Programs | 
SEKE-bp-34 | A Comparative Analysis of i*-Based Agent-Oriented Modeling Languages | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=SEKE-bp-34 A Comparative Analysis of i*-Based Agent-Oriented Modeling Languages | 
SEKE-bp-35 | Service Identification and Packaging in Service Oriented Reengineering | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=SEKE-bp-35 Service Identification and Packaging in Service Oriented Reengineering | 
SEKE-bp-36 | Using Constraint Programming to Reason on Feature Models | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=SEKE-bp-36 Using Constraint Programming to Reason on Feature Models | 
SEKE-bp-37 | Properties of Machine Learning Applications for Use in Metamorphic Testing | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=SEKE-bp-37 Properties of Machine Learning Applications for Use in Metamorphic Testing | 
SEKE-bp-38 | Feature Modeling for Context-Aware Software Product Lines | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=SEKE-bp-38 Feature Modeling for Context-Aware Software Product Lines | 
SEKE-bp-39 | A Model-driven Approach for Software Product Lines Requirements Engineering | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=SEKE-bp-39 A Model-driven Approach for Software Product Lines Requirements Engineering | 
SEKE-bp-40 | Bridging Semantic Gaps Between Stakeholders in the Production Automation Domain with Ontology Areas | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=SEKE-bp-40 Bridging Semantic Gaps Between Stakeholders in the Production Automation Domain with Ontology Areas | 
SEKE-bp-41 | Using Service-oriented Architectures for Socio-Cultural Analysis | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=SEKE-bp-41 Using Service-oriented Architectures for Socio-Cultural Analysis | 
SEKE-bp-42 | LD2SD: Linked Data Driven Software Development | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=SEKE-bp-42 LD2SD: Linked Data Driven Software Development | 
SEKE-bp-43 | Presenting Software License Conflicts through Argumentation. | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=SEKE-bp-43 Presenting Software License Conflicts through Argumentation. | 
SEKE-bp-44 | Supporting Software Engineering Education through a Learning Objects and Experience Reports Repository. | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=SEKE-bp-44 Supporting Software Engineering Education through a Learning Objects and Experience Reports Repository. | 
SEKE-bp-45 | Usability evaluation: a survey of software development organizations. | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=SEKE-bp-45 Usability evaluation: a survey of software development organizations. | 
SEKE-bp-46 | A Software Engineering Approach to User-Driven Control of the Microgrid. | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=SEKE-bp-46 A Software Engineering Approach to User-Driven Control of the Microgrid. | 
SEKE-bp-47 | Maintainability Predictors for Relational Database-Driven Software Applications: Results from a Survey. | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=SEKE-bp-47 Maintainability Predictors for Relational Database-Driven Software Applications: Results from a Survey. | 
SEKE-bp-48 | Criteria of Human Software Evaluation: Feature Selection Approach. | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=SEKE-bp-48 Criteria of Human Software Evaluation: Feature Selection Approach. | 
SEKE-bp-49 | BDI agents to bridge cloud computing and end-users (Case study: An agent-based personal trainer to COPD patients). | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=SEKE-bp-49 BDI agents to bridge cloud computing and end-users (Case study: An agent-based personal trainer to COPD patients). | 
SEKE-bp-50 | Conditions for ignoring failures based on a requirements model | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=SEKE-bp-50 Conditions for ignoring failures based on a requirements model | 
SEKE-bp-51 | Feature Modeling for Service Variability Management in Service-Oriented Architectures | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=SEKE-bp-51 Feature Modeling for Service Variability Management in Service-Oriented Architectures | 
SEKE-bp-52 | Ensemble Feature Selection Technique for Software Quality Classification | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=SEKE-bp-52 Ensemble Feature Selection Technique for Software Quality Classification | 
SEKE-bp-53 | Software Engineering with Computational Intelligence and Machine Learning A Novel Software Metric Selection Technique Using the Area Under ROC Curves | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=SEKE-bp-53 Software Engineering with Computational Intelligence and Machine Learning A Novel Software Metric Selection Technique Using the Area Under ROC Curves | 
SEKE-bp-54 | A Comparative Study of Attribute Weighting Techniques for Software Defect Prediction Using Case-based Reasoning | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=SEKE-bp-54 A Comparative Study of Attribute Weighting Techniques for Software Defect Prediction Using Case-based Reasoning | 
SEKE-bp-55 | A Formal Support for Incremental Behavior Specification In Agile Development. | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=SEKE-bp-55 A Formal Support for Incremental Behavior Specification In Agile Development. | 
SEKE-bp-56 | A Proposal of Reference Architecture for the Reconfigurable Software Development. | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=SEKE-bp-56 A Proposal of Reference Architecture for the Reconfigurable Software Development. | 
SEKE-bp-57 | Phases, Activities, and Techniques for a Requirements Conceptualization Process. | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=SEKE-bp-57 Phases, Activities, and Techniques for a Requirements Conceptualization Process. | 
SEKE-bp-58 | Checking Contracts for AOP using XPIDRs. | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=SEKE-bp-58 Checking Contracts for AOP using XPIDRs. | 
SEKE-bp-59 | Working and Playing with SCRUM. | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=SEKE-bp-59 Working and Playing with SCRUM. | 
SEKE-bp-60 | Spacemaker: Practical Formal Synthesis of Tradeoff Spaces for Object-Relational Mapping. | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=SEKE-bp-60 Spacemaker: Practical Formal Synthesis of Tradeoff Spaces for Object-Relational Mapping. | 
SEKE-bp-61 | i2Learning: Perpetual Learning through Bias Shifting. | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=SEKE-bp-61 i2Learning: Perpetual Learning through Bias Shifting. | 
SEKE-bp-62 | Semantic Technology Recommendation Based on the Analytic Network Process. | https://www.google.com.hk/?gws_rd=cr,ssl#safe=strict&q=SEKE-bp-62 Semantic Technology Recommendation Based on the Analytic Network Process. | 
